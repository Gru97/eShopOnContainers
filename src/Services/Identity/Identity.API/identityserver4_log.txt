2019-11-16 21:17:47.225 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-16 21:17:47.326 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-16 21:17:47.355 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-16 21:17:47.355 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-16 21:17:47.355 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-16 21:17:47.356 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-16 21:17:47.356 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-16 21:17:47.356 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-16 21:17:48.790 +03:30 [DBG] Login Url: /Account/Login
2019-11-16 21:17:48.794 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-16 21:17:48.794 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-16 21:17:48.794 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-16 21:17:48.794 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-16 21:17:48.794 +03:30 [DBG] Error Url: /home/error
2019-11-16 21:17:48.794 +03:30 [DBG] Error Id Parameter: errorId
2019-11-16 21:21:33.223 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:21:33.230 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:21:33.230 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:21:33.231 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:21:33.238 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:21:33.239 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:21:33.260 +03:30 [DBG] Start discovery request
2019-11-16 21:21:34.656 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:21:34.656 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:21:34.657 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:21:34.658 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:21:34.659 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:21:34.661 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:21:34.668 +03:30 [DBG] Start key discovery request
2019-11-16 21:21:34.954 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:21:34.967 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:21:34.967 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:21:34.975 +03:30 [DBG] Start authorize request
2019-11-16 21:21:34.999 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:21:35.009 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:21:35.042 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:21:35.080 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"VC2p8Z9ESfMyESpZGiCoEfNy0PgEXImYJN5HEExwvN9hT","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"VC2p8Z9ESfMyESpZGiCoEfNy0PgEXImYJN5HEExwvN9hT"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:21:35.106 +03:30 [ERR] Request validation failed
2019-11-16 21:21:35.106 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"VC2p8Z9ESfMyESpZGiCoEfNy0PgEXImYJN5HEExwvN9hT","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"VC2p8Z9ESfMyESpZGiCoEfNy0PgEXImYJN5HEExwvN9hT"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:21:35.125 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVC:00000002","TimeStamp":"2019-11-16T17:51:35.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:22:11.440 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:22:11.441 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:22:11.441 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:22:11.441 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:22:11.442 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:22:11.442 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:22:11.442 +03:30 [DBG] Start discovery request
2019-11-16 21:22:11.602 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:22:11.602 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:22:11.602 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:22:11.602 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:22:11.603 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:22:11.603 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:22:11.603 +03:30 [DBG] Start key discovery request
2019-11-16 21:22:11.700 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:22:11.700 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:22:11.700 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:22:11.700 +03:30 [DBG] Start authorize request
2019-11-16 21:22:11.700 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:22:11.700 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:22:11.701 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:22:11.701 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"XYmEzJNFl7d5oop8J3h_2Dve9XX_l-oC1TtL5rSxV-RfL","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"XYmEzJNFl7d5oop8J3h_2Dve9XX_l-oC1TtL5rSxV-RfL"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:22:11.701 +03:30 [ERR] Request validation failed
2019-11-16 21:22:11.701 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"XYmEzJNFl7d5oop8J3h_2Dve9XX_l-oC1TtL5rSxV-RfL","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"XYmEzJNFl7d5oop8J3h_2Dve9XX_l-oC1TtL5rSxV-RfL"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:22:11.701 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVC:00000004","TimeStamp":"2019-11-16T17:52:11.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:25:34.752 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:25:34.755 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:25:34.755 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:25:34.755 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:25:34.755 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:25:34.755 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:25:34.756 +03:30 [DBG] Start discovery request
2019-11-16 21:25:35.157 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:25:35.157 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:25:35.157 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:25:35.157 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:25:35.158 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:25:35.158 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:25:35.158 +03:30 [DBG] Start key discovery request
2019-11-16 21:25:35.181 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:25:35.182 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:25:35.182 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:25:35.182 +03:30 [DBG] Start authorize request
2019-11-16 21:25:35.182 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:25:35.182 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:25:35.182 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:25:35.182 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"BjJH9pnINPXI2lXXctdEbQnCrG36QxRyjn4F7mDbRVgw9","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"BjJH9pnINPXI2lXXctdEbQnCrG36QxRyjn4F7mDbRVgw9"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:25:35.182 +03:30 [ERR] Request validation failed
2019-11-16 21:25:35.182 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"BjJH9pnINPXI2lXXctdEbQnCrG36QxRyjn4F7mDbRVgw9","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"BjJH9pnINPXI2lXXctdEbQnCrG36QxRyjn4F7mDbRVgw9"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:25:35.182 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVH:00000003","TimeStamp":"2019-11-16T17:55:35.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:26:19.843 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-16 21:26:19.995 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-16 21:26:19.998 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-16 21:26:19.999 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-16 21:26:20.000 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRANKC0AMVE:00000005","TimeStamp":"2019-11-16T17:56:19.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-16 21:26:58.029 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:26:58.029 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:26:58.029 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:26:58.029 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:26:58.030 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:26:58.030 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:26:58.030 +03:30 [DBG] Start discovery request
2019-11-16 21:26:58.500 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:26:58.500 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:26:58.500 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:26:58.500 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:26:58.500 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:26:58.501 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:26:58.501 +03:30 [DBG] Start key discovery request
2019-11-16 21:26:58.661 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:26:58.662 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:26:58.662 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:26:58.662 +03:30 [DBG] Start authorize request
2019-11-16 21:26:58.662 +03:30 [DBG] No user present in authorize request
2019-11-16 21:26:58.662 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:26:58.666 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:26:58.667 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Df3a6DlBCXkN9b6Cg6BTUOvPzEBS9bbA00iiu34ZkPI2c","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"Df3a6DlBCXkN9b6Cg6BTUOvPzEBS9bbA00iiu34ZkPI2c"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:26:58.667 +03:30 [ERR] Request validation failed
2019-11-16 21:26:58.667 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Df3a6DlBCXkN9b6Cg6BTUOvPzEBS9bbA00iiu34ZkPI2c","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"Df3a6DlBCXkN9b6Cg6BTUOvPzEBS9bbA00iiu34ZkPI2c"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:26:58.667 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVE:00000006","TimeStamp":"2019-11-16T17:56:58.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:28:18.888 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:28:18.888 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:28:18.888 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:28:18.888 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:28:18.889 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:28:18.889 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:28:18.889 +03:30 [DBG] Start discovery request
2019-11-16 21:28:19.038 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:28:19.039 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:28:19.039 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:28:19.039 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:28:19.040 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:28:19.040 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:28:19.040 +03:30 [DBG] Start key discovery request
2019-11-16 21:28:19.275 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:28:19.275 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:28:19.275 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:28:19.276 +03:30 [DBG] Start authorize request
2019-11-16 21:28:19.276 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:28:19.276 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:28:19.276 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:28:19.276 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"ZPWY_7qR7uxyJ9LB4LNAKQ1t2QdfH80EtYw7YmN3vCLBW","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"ZPWY_7qR7uxyJ9LB4LNAKQ1t2QdfH80EtYw7YmN3vCLBW"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:28:19.276 +03:30 [ERR] Request validation failed
2019-11-16 21:28:19.277 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"ZPWY_7qR7uxyJ9LB4LNAKQ1t2QdfH80EtYw7YmN3vCLBW","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"ZPWY_7qR7uxyJ9LB4LNAKQ1t2QdfH80EtYw7YmN3vCLBW"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:28:19.278 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVH:0000000B","TimeStamp":"2019-11-16T17:58:19.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:30:51.191 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:30:51.191 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:30:51.191 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:30:51.191 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:30:51.192 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:30:51.192 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:30:51.192 +03:30 [DBG] Start discovery request
2019-11-16 21:30:51.455 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:30:51.456 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:30:51.456 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:30:51.457 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:30:51.458 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:30:51.458 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:30:51.458 +03:30 [DBG] Start key discovery request
2019-11-16 21:30:51.674 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:30:51.674 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:30:51.675 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:30:51.675 +03:30 [DBG] Start authorize request
2019-11-16 21:30:51.675 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:30:51.675 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:30:51.675 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:30:51.676 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"3aQhZpEin90vZqw4ooWSZvdG6Jkimty_Ly3F-JHjEkiwj","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"3aQhZpEin90vZqw4ooWSZvdG6Jkimty_Ly3F-JHjEkiwj"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:30:51.676 +03:30 [ERR] Request validation failed
2019-11-16 21:30:51.676 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"3aQhZpEin90vZqw4ooWSZvdG6Jkimty_Ly3F-JHjEkiwj","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"3aQhZpEin90vZqw4ooWSZvdG6Jkimty_Ly3F-JHjEkiwj"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:30:51.676 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVI:00000003","TimeStamp":"2019-11-16T18:00:51.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:38:43.755 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:38:43.755 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:38:43.755 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:38:43.756 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:38:43.758 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:38:43.758 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:38:43.759 +03:30 [DBG] Start discovery request
2019-11-16 21:38:44.113 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:38:44.114 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:38:44.114 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:38:44.114 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:38:44.114 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:38:44.114 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:38:44.114 +03:30 [DBG] Start key discovery request
2019-11-16 21:38:44.423 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:38:44.423 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:38:44.424 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:38:44.424 +03:30 [DBG] Start authorize request
2019-11-16 21:38:44.425 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:38:44.425 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:38:44.425 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:38:44.425 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"LSVPtEiICVo5DA9bxcCOcyFFwjnCwIOfKcq21jd17cy5P","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"LSVPtEiICVo5DA9bxcCOcyFFwjnCwIOfKcq21jd17cy5P"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:38:44.425 +03:30 [ERR] Request validation failed
2019-11-16 21:38:44.425 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"LSVPtEiICVo5DA9bxcCOcyFFwjnCwIOfKcq21jd17cy5P","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"LSVPtEiICVo5DA9bxcCOcyFFwjnCwIOfKcq21jd17cy5P"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:38:44.426 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVJ:00000003","TimeStamp":"2019-11-16T18:08:44.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:38:56.197 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:38:56.197 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:38:56.197 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:38:56.198 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:38:56.198 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:38:56.198 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:38:56.198 +03:30 [DBG] Start discovery request
2019-11-16 21:38:56.327 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:38:56.328 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:38:56.328 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:38:56.329 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:38:56.329 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:38:56.329 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:38:56.329 +03:30 [DBG] Start discovery request
2019-11-16 21:38:56.409 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:38:56.409 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:38:56.409 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:38:56.409 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:38:56.410 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:38:56.410 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:38:56.410 +03:30 [DBG] Start key discovery request
2019-11-16 21:38:56.463 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:38:56.464 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:38:56.464 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:38:56.464 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:38:56.464 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:38:56.464 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:38:56.464 +03:30 [DBG] Start key discovery request
2019-11-16 21:38:56.633 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:38:56.633 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:38:56.633 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:38:56.634 +03:30 [DBG] Start authorize request
2019-11-16 21:38:56.634 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:38:56.634 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:38:56.634 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:38:56.640 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"uD5IT4-XAsDxh1-n-uFTdVJ1aaRNWuw2XE7HK0XFS-1BU","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"uD5IT4-XAsDxh1-n-uFTdVJ1aaRNWuw2XE7HK0XFS-1BU"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:38:56.641 +03:30 [ERR] Request validation failed
2019-11-16 21:38:56.641 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"uD5IT4-XAsDxh1-n-uFTdVJ1aaRNWuw2XE7HK0XFS-1BU","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"uD5IT4-XAsDxh1-n-uFTdVJ1aaRNWuw2XE7HK0XFS-1BU"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:38:56.641 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVJ:0000000C","TimeStamp":"2019-11-16T18:08:56.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:39:46.835 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:39:46.837 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:39:46.837 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:39:46.839 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:39:46.839 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:39:46.839 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:39:46.839 +03:30 [DBG] Start discovery request
2019-11-16 21:39:47.005 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:39:47.006 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:39:47.006 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:39:47.006 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:39:47.006 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:39:47.007 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:39:47.007 +03:30 [DBG] Start key discovery request
2019-11-16 21:39:47.207 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:39:47.207 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:39:47.207 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:39:47.208 +03:30 [DBG] Start authorize request
2019-11-16 21:39:47.208 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:39:47.208 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:39:47.208 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:39:47.208 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"K4ZSx1-iIiZK-phdK5GbeQCdjQnXQuM5gxFxLM_vpsR0j","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"K4ZSx1-iIiZK-phdK5GbeQCdjQnXQuM5gxFxLM_vpsR0j"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:39:47.208 +03:30 [ERR] Request validation failed
2019-11-16 21:39:47.208 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"K4ZSx1-iIiZK-phdK5GbeQCdjQnXQuM5gxFxLM_vpsR0j","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"K4ZSx1-iIiZK-phdK5GbeQCdjQnXQuM5gxFxLM_vpsR0j"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:39:47.208 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRANKC0AMVJ:00000011","TimeStamp":"2019-11-16T18:09:47.0000000Z","ProcessId":18364,"LocalIpAddress":"127.0.0.1:7284","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:40:23.821 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-16 21:40:23.937 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-16 21:40:23.956 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-16 21:40:23.956 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-16 21:40:23.956 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-16 21:40:23.956 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-16 21:40:23.957 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-16 21:40:23.957 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-16 21:40:25.074 +03:30 [DBG] Login Url: /Account/Login
2019-11-16 21:40:25.085 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-16 21:40:25.085 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-16 21:40:25.086 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-16 21:40:25.086 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-16 21:40:25.086 +03:30 [DBG] Error Url: /home/error
2019-11-16 21:40:25.086 +03:30 [DBG] Error Id Parameter: errorId
2019-11-16 21:40:33.867 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:40:33.872 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:40:33.872 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:40:33.879 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:40:33.921 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:40:33.922 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:40:33.929 +03:30 [DBG] Start discovery request
2019-11-16 21:40:34.099 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:40:34.099 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:40:34.099 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:40:34.099 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:40:34.100 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:40:34.100 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:40:34.105 +03:30 [DBG] Start key discovery request
2019-11-16 21:40:34.167 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:40:34.171 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:40:34.172 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:40:34.178 +03:30 [DBG] Start authorize request
2019-11-16 21:40:34.194 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:40:34.203 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:40:34.226 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:40:34.256 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"qwVBMstWW-HTy6Tf25UjS-k1s5KO3_RJh7sN7-MQ-BgLp","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"qwVBMstWW-HTy6Tf25UjS-k1s5KO3_RJh7sN7-MQ-BgLp"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:40:34.284 +03:30 [ERR] Request validation failed
2019-11-16 21:40:34.284 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"qwVBMstWW-HTy6Tf25UjS-k1s5KO3_RJh7sN7-MQ-BgLp","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"qwVBMstWW-HTy6Tf25UjS-k1s5KO3_RJh7sN7-MQ-BgLp"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:40:34.305 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRAO109BT7J:00000003","TimeStamp":"2019-11-16T18:10:34.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:44:30.900 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:44:30.901 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:44:30.901 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:44:30.901 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:44:30.903 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:44:30.903 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:44:30.903 +03:30 [DBG] Start discovery request
2019-11-16 21:44:31.086 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:44:31.086 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:44:31.086 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:44:31.086 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:44:31.087 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:44:31.087 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:44:31.087 +03:30 [DBG] Start key discovery request
2019-11-16 21:44:32.603 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:44:32.603 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:44:32.603 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:44:32.603 +03:30 [DBG] Start authorize request
2019-11-16 21:44:32.604 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:44:32.604 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:44:32.604 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:44:32.604 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"fyFQqbbgvlcdK4YtpSNAcmeQI2tbQKtFbUhZN41sYJ-Gr","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"fyFQqbbgvlcdK4YtpSNAcmeQI2tbQKtFbUhZN41sYJ-Gr"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:44:32.604 +03:30 [ERR] Request validation failed
2019-11-16 21:44:32.604 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"fyFQqbbgvlcdK4YtpSNAcmeQI2tbQKtFbUhZN41sYJ-Gr","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"fyFQqbbgvlcdK4YtpSNAcmeQI2tbQKtFbUhZN41sYJ-Gr"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:44:32.605 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRAO109BT7K:00000003","TimeStamp":"2019-11-16T18:14:32.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:44:53.468 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-16 21:44:53.586 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-16 21:44:53.587 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-16 21:44:53.589 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-16 21:44:53.591 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRAO109BT7K:00000008","TimeStamp":"2019-11-16T18:14:53.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-16 21:49:08.076 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:49:08.077 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:49:08.077 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:49:08.077 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:49:08.078 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:49:08.078 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:49:08.078 +03:30 [DBG] Start discovery request
2019-11-16 21:49:08.263 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:49:08.263 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:49:08.263 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:49:08.264 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:49:08.264 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:49:08.264 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:49:08.264 +03:30 [DBG] Start key discovery request
2019-11-16 21:49:08.442 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:49:08.443 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:49:08.443 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:49:08.443 +03:30 [DBG] Start authorize request
2019-11-16 21:49:08.443 +03:30 [DBG] No user present in authorize request
2019-11-16 21:49:08.443 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:49:08.444 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:49:08.445 +03:30 [ERR] Invalid redirect_uri: localhost:4200/error.html
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"tgupp7FXrU5F2WQvqFE5cq0vc94D-YOfAtfqFGcpvTcPy","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"tgupp7FXrU5F2WQvqFE5cq0vc94D-YOfAtfqFGcpvTcPy"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:49:08.445 +03:30 [ERR] Request validation failed
2019-11-16 21:49:08.445 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"tgupp7FXrU5F2WQvqFE5cq0vc94D-YOfAtfqFGcpvTcPy","redirect_uri":"localhost:4200/error.html","scope":"openid profile orders","nonce":"tgupp7FXrU5F2WQvqFE5cq0vc94D-YOfAtfqFGcpvTcPy"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:49:08.445 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRAO109BT7L:00000003","TimeStamp":"2019-11-16T18:19:08.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:52:17.260 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:52:17.260 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:52:17.260 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:52:17.260 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:52:17.261 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:52:17.262 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:52:17.262 +03:30 [DBG] Start discovery request
2019-11-16 21:52:17.322 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:52:17.322 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:52:17.322 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:52:17.322 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:52:17.323 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:52:17.323 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:52:17.323 +03:30 [DBG] Start key discovery request
2019-11-16 21:52:17.362 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:52:17.363 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:52:17.363 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:52:17.363 +03:30 [DBG] Start authorize request
2019-11-16 21:52:17.363 +03:30 [DBG] No user present in authorize request
2019-11-16 21:52:17.363 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:52:17.364 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:52:17.429 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 21:52:17.430 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/error.html","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","UiLocales":null,"Nonce":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","redirect_uri":"http://localhost:4200/error.html","scope":"openid profile orders","nonce":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:52:17.442 +03:30 [INF] Showing login: User is not authenticated
2019-11-16 21:52:18.909 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:52:18.909 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:52:18.909 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 21:52:18.913 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:52:32.472 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-16 21:52:34.566 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:52:34.566 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:52:34.567 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 21:52:34.856 +03:30 [DBG] Augmenting SignInContext
2019-11-16 21:52:34.861 +03:30 [DBG] Adding idp claim with value: local
2019-11-16 21:52:34.861 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-16 21:52:34.861 +03:30 [DBG] Adding auth_time claim with value: 1573928554
2019-11-16 21:52:34.868 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-16 21:52:34.917 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRAO109BT7M:00000005","TimeStamp":"2019-11-16T18:22:34.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-16 21:52:34.919 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:52:34.944 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-16 21:52:34.945 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-16 21:52:34.945 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-16 21:52:34.953 +03:30 [DBG] Start authorize callback request
2019-11-16 21:52:34.958 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:52:34.958 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:52:34.958 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:52:34.959 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 21:52:34.959 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/error.html","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","UiLocales":null,"Nonce":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8066ebcb413ed3f97c7cf3a0cb70d031","Raw":{"response_type":"id_token token","client_id":"angular","state":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","redirect_uri":"http://localhost:4200/error.html","scope":"openid profile orders","nonce":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:52:35.074 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-16 21:52:35.074 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-16 21:52:35.075 +03:30 [INF] Showing consent: User has not yet consented
2019-11-16 21:52:35.203 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:52:35.204 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:52:35.204 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 21:52:35.205 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:53:00.659 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-16 21:53:00.824 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:53:00.825 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:53:00.825 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 21:53:00.828 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRAO109BT7M:00000008","TimeStamp":"2019-11-16T18:23:00.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-16 21:53:00.848 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:53:00.864 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-16 21:53:00.865 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-16 21:53:00.865 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-16 21:53:00.865 +03:30 [DBG] Start authorize callback request
2019-11-16 21:53:00.873 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:53:00.873 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:53:00.873 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:53:00.873 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 21:53:00.873 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/error.html","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","UiLocales":null,"Nonce":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8066ebcb413ed3f97c7cf3a0cb70d031","Raw":{"response_type":"id_token token","client_id":"angular","state":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","redirect_uri":"http://localhost:4200/error.html","scope":"openid profile orders","nonce":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:53:00.947 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-16 21:53:00.947 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-16 21:53:00.963 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-16 21:53:00.966 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-16 21:53:00.977 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:53:01.012 +03:30 [DBG] Creating Implicit Flow response.
2019-11-16 21:53:01.038 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-16 21:53:01.039 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:53:01.417 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-16 21:53:01.417 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-16 21:53:01.428 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/error.html","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****akPA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****MTEg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRAO109BT7M:00000009","TimeStamp":"2019-11-16T18:23:01.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-16 21:53:01.430 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/error.html","State":"SgJKXhgroiUFbCDbHxSnMbS76iAg7deimSev1HmQy6iCb","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-16 21:53:01.443 +03:30 [DBG] Augmenting SignInContext
2019-11-16 21:53:01.444 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-16 21:54:30.056 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:54:30.056 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:54:30.056 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:54:30.057 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:54:30.057 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:54:30.058 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:54:30.058 +03:30 [DBG] Start discovery request
2019-11-16 21:54:30.119 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:54:30.119 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:54:30.119 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:54:30.120 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:54:30.120 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:54:30.120 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:54:30.120 +03:30 [DBG] Start key discovery request
2019-11-16 21:54:30.170 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:54:30.170 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:54:30.171 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:54:30.171 +03:30 [DBG] Start authorize request
2019-11-16 21:54:30.171 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 21:54:30.171 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:54:30.171 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:54:30.171 +03:30 [ERR] malformed redirect_uri: /
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"lsUfaoG0T-Qmy3amO7refWnTnae2w9hoLIAlBrKqTUz-3","redirect_uri":"/","scope":"openid profile orders","nonce":"lsUfaoG0T-Qmy3amO7refWnTnae2w9hoLIAlBrKqTUz-3"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:54:30.171 +03:30 [ERR] Request validation failed
2019-11-16 21:54:30.171 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"lsUfaoG0T-Qmy3amO7refWnTnae2w9hoLIAlBrKqTUz-3","redirect_uri":"/","scope":"openid profile orders","nonce":"lsUfaoG0T-Qmy3amO7refWnTnae2w9hoLIAlBrKqTUz-3"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:54:30.172 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"invalid_request","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRAO109BT7N:00000003","TimeStamp":"2019-11-16T18:24:30.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:54:36.476 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-16 21:54:36.513 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-16 21:54:36.513 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-16 21:54:36.513 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-16 21:54:36.513 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRAO109BT7N:00000006","TimeStamp":"2019-11-16T18:24:36.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-16 21:54:36.562 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-16 21:54:36.567 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-16 21:54:36.567 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-16 21:54:36.581 +03:30 [DBG] Processing signout callback request
2019-11-16 21:54:36.608 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:54:36.608 +03:30 [DBG] No client front-channel logout URLs
2019-11-16 21:54:36.608 +03:30 [DBG] No client back-channel logout URLs
2019-11-16 21:54:36.608 +03:30 [INF] Successful signout callback.
2019-11-16 21:54:36.608 +03:30 [DBG] No client front-channel iframe urls
2019-11-16 21:54:36.608 +03:30 [DBG] No client back-channel iframe urls
2019-11-16 21:55:50.357 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:55:50.358 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:55:50.360 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:55:50.360 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:55:50.361 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:55:50.361 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:55:50.361 +03:30 [DBG] Start discovery request
2019-11-16 21:55:50.407 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:55:50.407 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:55:50.407 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:55:50.407 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:55:50.408 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:55:50.408 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:55:50.408 +03:30 [DBG] Start key discovery request
2019-11-16 21:55:50.432 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:55:50.433 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:55:50.433 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:55:50.433 +03:30 [DBG] Start authorize request
2019-11-16 21:55:50.434 +03:30 [DBG] No user present in authorize request
2019-11-16 21:55:50.434 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:55:50.434 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:55:50.435 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"7txZsiSUVYlpZmAwKBXF69LaRH1JRxdkzL1tg4OeHyH6a","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"7txZsiSUVYlpZmAwKBXF69LaRH1JRxdkzL1tg4OeHyH6a"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:55:50.435 +03:30 [ERR] Request validation failed
2019-11-16 21:55:50.436 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"7txZsiSUVYlpZmAwKBXF69LaRH1JRxdkzL1tg4OeHyH6a","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"7txZsiSUVYlpZmAwKBXF69LaRH1JRxdkzL1tg4OeHyH6a"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:55:50.436 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRAO109BT7O:00000003","TimeStamp":"2019-11-16T18:25:50.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 21:59:47.355 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 21:59:47.356 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:59:47.356 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:59:47.357 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 21:59:47.357 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 21:59:47.357 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 21:59:47.357 +03:30 [DBG] Start discovery request
2019-11-16 21:59:47.434 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 21:59:47.435 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 21:59:47.435 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 21:59:47.435 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 21:59:47.436 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 21:59:47.436 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 21:59:47.436 +03:30 [DBG] Start key discovery request
2019-11-16 21:59:47.456 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 21:59:47.457 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 21:59:47.457 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 21:59:47.457 +03:30 [DBG] Start authorize request
2019-11-16 21:59:47.458 +03:30 [DBG] No user present in authorize request
2019-11-16 21:59:47.458 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 21:59:47.458 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 21:59:47.458 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"9uf9ZzfBvRvWo29f3k8lCMNHc_pANWGJ2e6463wFHCDJx","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"9uf9ZzfBvRvWo29f3k8lCMNHc_pANWGJ2e6463wFHCDJx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:59:47.458 +03:30 [ERR] Request validation failed
2019-11-16 21:59:47.459 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/callback.html","http://localhost:4200/silent.html","http://localhost:4200/popup.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"9uf9ZzfBvRvWo29f3k8lCMNHc_pANWGJ2e6463wFHCDJx","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"9uf9ZzfBvRvWo29f3k8lCMNHc_pANWGJ2e6463wFHCDJx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 21:59:47.459 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRAO109BT7P:00000003","TimeStamp":"2019-11-16T18:29:47.0000000Z","ProcessId":16988,"LocalIpAddress":"127.0.0.1:46280","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2019-11-16 22:01:07.995 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-16 22:01:08.049 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-16 22:01:08.059 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-16 22:01:08.060 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-16 22:01:08.060 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-16 22:01:08.060 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-16 22:01:08.060 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-16 22:01:08.060 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-16 22:01:08.552 +03:30 [DBG] Login Url: /Account/Login
2019-11-16 22:01:08.554 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-16 22:01:08.554 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-16 22:01:08.555 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-16 22:01:08.555 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-16 22:01:08.555 +03:30 [DBG] Error Url: /home/error
2019-11-16 22:01:08.555 +03:30 [DBG] Error Id Parameter: errorId
2019-11-16 22:55:46.468 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 22:55:46.474 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 22:55:46.474 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 22:55:46.507 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 22:55:46.769 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 22:55:46.770 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 22:55:46.775 +03:30 [DBG] Start discovery request
2019-11-16 22:55:46.910 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 22:55:46.911 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 22:55:46.911 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 22:55:46.911 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 22:55:46.914 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 22:55:46.914 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 22:55:46.920 +03:30 [DBG] Start key discovery request
2019-11-16 22:55:47.020 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 22:55:47.026 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 22:55:47.026 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 22:55:47.034 +03:30 [DBG] Start authorize request
2019-11-16 22:55:47.048 +03:30 [DBG] No user present in authorize request
2019-11-16 22:55:47.059 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:55:47.091 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:55:47.192 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:55:47.223 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","UiLocales":null,"Nonce":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 22:55:47.274 +03:30 [INF] Showing login: User is not authenticated
2019-11-16 22:57:41.320 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:57:41.320 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:41.320 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:57:41.325 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:47.929 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-16 22:57:49.931 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:57:49.931 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:49.932 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:57:51.041 +03:30 [DBG] Augmenting SignInContext
2019-11-16 22:57:51.045 +03:30 [DBG] Adding idp claim with value: local
2019-11-16 22:57:51.045 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-16 22:57:51.045 +03:30 [DBG] Adding auth_time claim with value: 1573932471
2019-11-16 22:57:51.067 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-16 22:57:51.167 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRAOCIU5EVV:00000006","TimeStamp":"2019-11-16T19:27:51.0000000Z","ProcessId":15452,"LocalIpAddress":"127.0.0.1:35143","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-16 22:57:51.170 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:51.212 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-16 22:57:51.213 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-16 22:57:51.213 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-16 22:57:51.222 +03:30 [DBG] Start authorize callback request
2019-11-16 22:57:51.226 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 22:57:51.226 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:57:51.226 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:51.227 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:57:51.227 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","UiLocales":null,"Nonce":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 22:57:51.328 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-16 22:57:51.328 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-16 22:57:51.329 +03:30 [INF] Showing consent: User has not yet consented
2019-11-16 22:57:51.394 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:57:51.395 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:51.395 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:57:51.395 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:53.300 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-16 22:57:53.355 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:57:53.355 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:53.355 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:57:53.357 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRAOCIU5EVV:00000009","TimeStamp":"2019-11-16T19:27:53.0000000Z","ProcessId":15452,"LocalIpAddress":"127.0.0.1:35143","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-16 22:57:53.373 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:53.384 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-16 22:57:53.384 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-16 22:57:53.384 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-16 22:57:53.384 +03:30 [DBG] Start authorize callback request
2019-11-16 22:57:53.389 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 22:57:53.389 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:57:53.390 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:57:53.390 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:57:53.390 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","UiLocales":null,"Nonce":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 22:57:53.446 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-16 22:57:53.446 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-16 22:57:53.464 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-16 22:57:53.467 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-16 22:57:53.472 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 22:57:53.502 +03:30 [DBG] Creating Implicit Flow response.
2019-11-16 22:57:53.518 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-16 22:57:53.519 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 22:57:53.898 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-16 22:57:53.898 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-16 22:57:53.908 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pn8A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****duRw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRAOCIU5EVV:0000000A","TimeStamp":"2019-11-16T19:27:53.0000000Z","ProcessId":15452,"LocalIpAddress":"127.0.0.1:35143","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-16 22:57:53.912 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"jOExl0AkArEAArB4KdiaQQQpkq_oIrypze-ot9Iu2Wfdx","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-16 22:57:53.938 +03:30 [DBG] Augmenting SignInContext
2019-11-16 22:57:53.939 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-16 22:58:45.915 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-16 22:58:45.916 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 22:58:45.916 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 22:58:45.916 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-16 22:58:45.917 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-16 22:58:45.917 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-16 22:58:45.917 +03:30 [DBG] Start discovery request
2019-11-16 22:58:46.073 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-16 22:58:46.073 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-16 22:58:46.074 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-16 22:58:46.074 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-16 22:58:46.075 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-16 22:58:46.075 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-16 22:58:46.075 +03:30 [DBG] Start key discovery request
2019-11-16 22:58:46.110 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-16 22:58:46.111 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-16 22:58:46.111 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-16 22:58:46.112 +03:30 [DBG] Start authorize request
2019-11-16 22:58:46.112 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 22:58:46.112 +03:30 [DBG] Start authorize request protocol validation
2019-11-16 22:58:46.112 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-16 22:58:46.113 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-16 22:58:46.113 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"uzyuBnsboaYfv2u_hGaW2HGO4Hx6SqC0uriJnbll74nrm","UiLocales":null,"Nonce":"uzyuBnsboaYfv2u_hGaW2HGO4Hx6SqC0uriJnbll74nrm","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"uzyuBnsboaYfv2u_hGaW2HGO4Hx6SqC0uriJnbll74nrm","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"uzyuBnsboaYfv2u_hGaW2HGO4Hx6SqC0uriJnbll74nrm"},"$type":"AuthorizeRequestValidationLog"}
2019-11-16 22:58:46.187 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-16 22:58:46.187 +03:30 [DBG] Creating Implicit Flow response.
2019-11-16 22:58:46.188 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-16 22:58:46.188 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-16 22:58:46.337 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-16 22:58:46.337 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-16 22:58:46.341 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bOsQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Gu_g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRAOCIU5EVV:0000000D","TimeStamp":"2019-11-16T19:28:46.0000000Z","ProcessId":15452,"LocalIpAddress":"127.0.0.1:35143","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-16 22:58:46.342 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"uzyuBnsboaYfv2u_hGaW2HGO4Hx6SqC0uriJnbll74nrm","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-17 21:10:38.079 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-17 21:10:38.181 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-17 21:10:38.209 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-17 21:10:38.209 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-17 21:10:38.209 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-17 21:10:38.209 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-17 21:10:38.209 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-17 21:10:38.209 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-17 21:10:40.201 +03:30 [DBG] Login Url: /Account/Login
2019-11-17 21:10:40.203 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-17 21:10:40.203 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-17 21:10:40.203 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-17 21:10:40.203 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-17 21:10:40.204 +03:30 [DBG] Error Url: /home/error
2019-11-17 21:10:40.204 +03:30 [DBG] Error Id Parameter: errorId
2019-11-17 21:11:02.930 +03:30 [ERR] An error occurred using the connection to database 'Security' on server '192.168.11.177,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
2019-11-17 21:11:04.172 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-11-17 21:11:04.192 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-11-17 21:11:04.523 +03:30 [ERR] An exception occurred while calculating the database error page content. Skipping display of the database error page.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
2019-11-17 21:11:04.559 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SecurityStampValidator`1.ValidateAsync(CookieValidatePrincipalContext context)
   at Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-17 21:11:26.136 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-17 21:11:26.192 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-17 21:11:26.207 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-17 21:11:26.207 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-17 21:11:26.207 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-17 21:11:26.207 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-17 21:11:26.207 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-17 21:11:26.208 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-17 21:11:26.724 +03:30 [DBG] Login Url: /Account/Login
2019-11-17 21:11:26.727 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-17 21:11:26.727 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-17 21:11:26.727 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-17 21:11:26.727 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-17 21:11:26.727 +03:30 [DBG] Error Url: /home/error
2019-11-17 21:11:26.727 +03:30 [DBG] Error Id Parameter: errorId
2019-11-17 21:11:48.336 +03:30 [ERR] An error occurred using the connection to database 'Security' on server '192.168.11.177,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
2019-11-17 21:11:48.419 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-11-17 21:11:48.436 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-11-17 21:11:48.625 +03:30 [ERR] An exception occurred while calculating the database error page content. Skipping display of the database error page.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
2019-11-17 21:11:48.629 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SecurityStampValidator`1.ValidateAsync(CookieValidatePrincipalContext context)
   at Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-17 21:12:51.048 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-17 21:12:51.096 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-17 21:12:51.108 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-17 21:12:51.108 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-17 21:12:51.108 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-17 21:12:51.108 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-17 21:12:51.109 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-17 21:12:51.109 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-17 21:12:51.782 +03:30 [DBG] Login Url: /Account/Login
2019-11-17 21:12:51.785 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-17 21:12:51.785 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-17 21:12:51.785 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-17 21:12:51.785 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-17 21:12:51.785 +03:30 [DBG] Error Url: /home/error
2019-11-17 21:12:51.785 +03:30 [DBG] Error Id Parameter: errorId
2019-11-17 21:13:13.363 +03:30 [ERR] An error occurred using the connection to database 'Security' on server '192.168.11.177,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
2019-11-17 21:13:13.465 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-11-17 21:13:13.480 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-11-17 21:13:13.640 +03:30 [ERR] An exception occurred while calculating the database error page content. Skipping display of the database error page.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
2019-11-17 21:13:13.644 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SecurityStampValidator`1.ValidateAsync(CookieValidatePrincipalContext context)
   at Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-17 21:14:23.637 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-17 21:14:23.687 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-17 21:14:23.698 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-17 21:14:23.698 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-17 21:14:23.698 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-17 21:14:23.698 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-17 21:14:23.698 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-17 21:14:23.698 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-17 21:14:24.374 +03:30 [DBG] Login Url: /Account/Login
2019-11-17 21:14:24.377 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-17 21:14:24.377 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-17 21:14:24.377 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-17 21:14:24.377 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-17 21:14:24.377 +03:30 [DBG] Error Url: /home/error
2019-11-17 21:14:24.377 +03:30 [DBG] Error Id Parameter: errorId
2019-11-17 21:15:03.187 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-17 21:15:03.231 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-17 21:15:03.241 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-17 21:15:03.241 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-17 21:15:03.241 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-17 21:15:03.241 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-17 21:15:03.242 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-17 21:15:03.242 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-17 21:15:03.724 +03:30 [DBG] Login Url: /Account/Login
2019-11-17 21:15:03.726 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-17 21:15:03.726 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-17 21:15:03.726 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-17 21:15:03.726 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-17 21:15:03.726 +03:30 [DBG] Error Url: /home/error
2019-11-17 21:15:03.726 +03:30 [DBG] Error Id Parameter: errorId
2019-11-17 21:15:23.908 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 21:15:23.917 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 21:15:23.917 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 21:15:23.923 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 21:15:23.942 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 21:15:23.943 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 21:15:23.949 +03:30 [DBG] Start discovery request
2019-11-17 21:15:24.016 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 21:15:24.017 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 21:15:24.017 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 21:15:24.017 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 21:15:24.018 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 21:15:24.018 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 21:15:24.023 +03:30 [DBG] Start key discovery request
2019-11-17 21:15:24.059 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 21:15:24.064 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 21:15:24.064 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 21:15:24.072 +03:30 [DBG] Start authorize request
2019-11-17 21:15:24.093 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:15:24.100 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:15:24.120 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:15:24.212 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:15:24.235 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA","UiLocales":null,"Nonce":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 21:15:24.910 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-17 21:15:24.910 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-17 21:15:24.910 +03:30 [INF] Showing consent: User has not yet consented
2019-11-17 21:15:25.062 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:15:25.062 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:15:25.063 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:15:25.065 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:15:35.834 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-17 21:15:35.985 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:15:35.985 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:15:35.985 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:15:36.036 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRBGNG5EQ1Q:00000004","TimeStamp":"2019-11-17T17:45:36.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-17 21:15:36.063 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:15:36.074 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-17 21:15:36.075 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-17 21:15:36.075 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-17 21:15:36.086 +03:30 [DBG] Start authorize callback request
2019-11-17 21:15:36.101 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:15:36.101 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:15:36.101 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:15:36.102 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:15:36.102 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA","UiLocales":null,"Nonce":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 21:15:36.183 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-17 21:15:36.183 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-17 21:15:36.191 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-17 21:15:36.193 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-17 21:15:36.197 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:15:36.227 +03:30 [DBG] Creating Implicit Flow response.
2019-11-17 21:15:36.247 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-17 21:15:36.248 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:15:36.746 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-17 21:15:36.746 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-17 21:15:36.758 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TzRw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6cZA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRBGNG5EQ1R:00000004","TimeStamp":"2019-11-17T17:45:36.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-17 21:15:36.760 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"3PcgkhytPXeovYWhO8XkziBoiE1qiIbTp6WT56ZjGOMvA","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-17 21:16:26.382 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 21:16:26.382 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 21:16:26.382 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 21:16:26.383 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 21:16:26.406 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 21:16:26.406 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 21:16:26.406 +03:30 [DBG] Start discovery request
2019-11-17 21:16:26.471 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 21:16:26.471 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 21:16:26.471 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 21:16:26.471 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 21:16:26.472 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 21:16:26.472 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 21:16:26.472 +03:30 [DBG] Start key discovery request
2019-11-17 21:16:26.564 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 21:16:26.565 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 21:16:26.565 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 21:16:26.565 +03:30 [DBG] Start authorize request
2019-11-17 21:16:26.566 +03:30 [DBG] No user present in authorize request
2019-11-17 21:16:26.566 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:16:26.567 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:16:26.567 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:16:26.567 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp","UiLocales":null,"Nonce":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 21:16:26.567 +03:30 [INF] Showing login: User is not authenticated
2019-11-17 21:16:29.261 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:16:29.262 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:16:29.262 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:16:29.272 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:16:51.234 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-17 21:16:53.311 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:16:53.311 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:16:53.312 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:16:53.667 +03:30 [DBG] Augmenting SignInContext
2019-11-17 21:16:53.670 +03:30 [DBG] Adding idp claim with value: local
2019-11-17 21:16:53.670 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-17 21:16:53.670 +03:30 [DBG] Adding auth_time claim with value: 1574012813
2019-11-17 21:16:53.681 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-17 21:16:53.720 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRBGNG5EQ1Q:00000009","TimeStamp":"2019-11-17T17:46:53.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-17 21:16:53.720 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:16:53.769 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-17 21:16:53.773 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-17 21:16:53.773 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-17 21:16:53.773 +03:30 [DBG] Start authorize callback request
2019-11-17 21:16:53.774 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:16:53.774 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:16:53.774 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:16:53.774 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:16:53.774 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp","UiLocales":null,"Nonce":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ae8a4280390ad58b76847e93ec6e52aa","Raw":{"response_type":"id_token token","client_id":"angular","state":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 21:16:53.820 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-17 21:16:53.820 +03:30 [DBG] Creating Implicit Flow response.
2019-11-17 21:16:53.820 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-17 21:16:53.821 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:16:53.919 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-17 21:16:53.919 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-17 21:16:53.925 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****q0vA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BIsA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRBGNG5EQ1R:00000008","TimeStamp":"2019-11-17T17:46:53.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-17 21:16:53.925 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"8OjMgsTAJCwmBd-U23CqppyHuh3_mMIAGPYnJdIXFKdfp","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-17 21:16:53.931 +03:30 [DBG] Augmenting SignInContext
2019-11-17 21:16:53.932 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-17 21:17:29.654 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 21:17:29.654 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 21:17:29.654 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 21:17:29.655 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 21:17:29.656 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 21:17:29.656 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 21:17:29.656 +03:30 [DBG] Start discovery request
2019-11-17 21:17:29.721 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 21:17:29.721 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 21:17:29.721 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 21:17:29.721 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 21:17:29.721 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 21:17:29.721 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 21:17:29.721 +03:30 [DBG] Start key discovery request
2019-11-17 21:17:29.739 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 21:17:29.740 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 21:17:29.740 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 21:17:29.741 +03:30 [DBG] Start authorize request
2019-11-17 21:17:29.741 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:17:29.741 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 21:17:29.741 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 21:17:29.741 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 21:17:29.741 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"EtJOxYOLsTvkJbinhSKJSupc4AGPcd7yFlaa1E4Rlmi0n","UiLocales":null,"Nonce":"EtJOxYOLsTvkJbinhSKJSupc4AGPcd7yFlaa1E4Rlmi0n","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"EtJOxYOLsTvkJbinhSKJSupc4AGPcd7yFlaa1E4Rlmi0n","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"EtJOxYOLsTvkJbinhSKJSupc4AGPcd7yFlaa1E4Rlmi0n"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 21:17:29.816 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-17 21:17:29.817 +03:30 [DBG] Creating Implicit Flow response.
2019-11-17 21:17:29.817 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-17 21:17:29.817 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 21:17:29.960 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-17 21:17:29.960 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-17 21:17:29.965 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****EOMA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yNqg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRBGNG5EQ1Q:0000000B","TimeStamp":"2019-11-17T17:47:29.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-17 21:17:29.965 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"EtJOxYOLsTvkJbinhSKJSupc4AGPcd7yFlaa1E4Rlmi0n","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-17 22:01:26.862 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:01:26.864 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:01:26.864 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:01:26.865 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:01:26.866 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:01:26.868 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:01:26.868 +03:30 [DBG] Start discovery request
2019-11-17 22:01:26.959 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:01:26.959 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:01:26.959 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:01:26.959 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:01:26.960 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:01:26.960 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:01:26.960 +03:30 [DBG] Start key discovery request
2019-11-17 22:01:27.303 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:01:27.304 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:01:27.304 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:01:27.304 +03:30 [DBG] Start authorize request
2019-11-17 22:01:27.304 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:01:27.304 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:01:27.304 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:01:27.305 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:01:27.305 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6c3EW0pjSa8U46ZlH3fAzR4i-uRS_wDwI7XAjUf2Vt-UK","UiLocales":null,"Nonce":"6c3EW0pjSa8U46ZlH3fAzR4i-uRS_wDwI7XAjUf2Vt-UK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ae8a4280390ad58b76847e93ec6e52aa","Raw":{"response_type":"id_token token","client_id":"angular","state":"6c3EW0pjSa8U46ZlH3fAzR4i-uRS_wDwI7XAjUf2Vt-UK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"6c3EW0pjSa8U46ZlH3fAzR4i-uRS_wDwI7XAjUf2Vt-UK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:01:27.305 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-17 22:01:27.305 +03:30 [DBG] Creating Implicit Flow response.
2019-11-17 22:01:27.305 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-17 22:01:27.305 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:01:27.502 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-17 22:01:27.502 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-17 22:01:27.508 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****fQ1Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2v3A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRBGNG5EQ1S:00000003","TimeStamp":"2019-11-17T18:31:27.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-17 22:01:27.508 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"6c3EW0pjSa8U46ZlH3fAzR4i-uRS_wDwI7XAjUf2Vt-UK","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-17 22:05:14.606 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:05:14.606 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:05:14.606 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:05:14.607 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:05:14.607 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:05:14.607 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:05:14.607 +03:30 [DBG] Start discovery request
2019-11-17 22:05:14.666 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:05:14.667 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:05:14.667 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:05:14.667 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:05:14.668 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:05:14.668 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:05:14.668 +03:30 [DBG] Start key discovery request
2019-11-17 22:05:14.749 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:05:14.749 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:05:14.750 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:05:14.750 +03:30 [DBG] Start authorize request
2019-11-17 22:05:14.750 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:05:14.750 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:05:14.750 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:05:14.751 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:05:14.751 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"X73QE3sO4JHWuhWvsIte4o2hbPO4aGSZQycKDnrW5APW-","UiLocales":null,"Nonce":"X73QE3sO4JHWuhWvsIte4o2hbPO4aGSZQycKDnrW5APW-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ae8a4280390ad58b76847e93ec6e52aa","Raw":{"response_type":"id_token token","client_id":"angular","state":"X73QE3sO4JHWuhWvsIte4o2hbPO4aGSZQycKDnrW5APW-","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"X73QE3sO4JHWuhWvsIte4o2hbPO4aGSZQycKDnrW5APW-"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:05:15.010 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-17 22:05:15.010 +03:30 [DBG] Creating Implicit Flow response.
2019-11-17 22:05:15.010 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-17 22:05:15.010 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:05:15.143 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-17 22:05:15.143 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-17 22:05:15.149 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Gmaw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vj4A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRBGNG5EQ1T:00000003","TimeStamp":"2019-11-17T18:35:15.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-17 22:05:15.149 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"X73QE3sO4JHWuhWvsIte4o2hbPO4aGSZQycKDnrW5APW-","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-17 22:05:18.702 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:05:18.704 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:05:18.704 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:05:18.705 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:05:18.705 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:05:18.705 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:05:18.706 +03:30 [DBG] Start discovery request
2019-11-17 22:05:48.353 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:05:48.353 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:05:48.354 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:05:48.354 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:05:48.354 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:05:48.354 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:05:48.354 +03:30 [DBG] Start discovery request
2019-11-17 22:05:48.538 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:05:48.538 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:05:48.538 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:05:48.538 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:05:48.539 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:05:48.539 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:05:48.539 +03:30 [DBG] Start key discovery request
2019-11-17 22:07:30.209 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:07:30.210 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:07:30.213 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:07:30.213 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:07:30.214 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:07:30.214 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:07:30.214 +03:30 [DBG] Start discovery request
2019-11-17 22:08:21.376 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:08:21.376 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:08:21.376 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:08:21.377 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:08:21.380 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:08:21.380 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:08:21.380 +03:30 [DBG] Start discovery request
2019-11-17 22:08:21.433 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:08:21.433 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:08:21.449 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:08:21.449 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:08:21.449 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:08:21.449 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:08:21.449 +03:30 [DBG] Start key discovery request
2019-11-17 22:08:21.492 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:08:21.492 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:08:21.493 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:08:21.493 +03:30 [DBG] Start authorize request
2019-11-17 22:08:21.493 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:08:21.493 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:08:21.493 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:08:21.495 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/basket
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"kcNem2SSaoy4EMCBZ-r_l-AUIHBLpecj4T7agOJlh5Szi","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"kcNem2SSaoy4EMCBZ-r_l-AUIHBLpecj4T7agOJlh5Szi"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:08:21.499 +03:30 [ERR] Request validation failed
2019-11-17 22:08:21.500 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"kcNem2SSaoy4EMCBZ-r_l-AUIHBLpecj4T7agOJlh5Szi","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"kcNem2SSaoy4EMCBZ-r_l-AUIHBLpecj4T7agOJlh5Szi"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:08:21.503 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRBGNG5EQ1U:00000004","TimeStamp":"2019-11-17T18:38:21.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-17 22:08:48.489 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:08:48.489 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:08:48.489 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:08:48.491 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:08:48.492 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:08:48.492 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:08:48.492 +03:30 [DBG] Start discovery request
2019-11-17 22:08:48.551 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:08:48.552 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:08:48.553 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:08:48.553 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:08:48.553 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:08:48.553 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:08:48.553 +03:30 [DBG] Start key discovery request
2019-11-17 22:09:22.722 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:09:22.751 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:09:22.751 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:09:22.752 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:09:22.752 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:09:22.752 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:09:22.752 +03:30 [DBG] Start discovery request
2019-11-17 22:09:22.826 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:09:22.826 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:09:22.826 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:09:22.826 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:09:22.827 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:09:22.827 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:09:22.827 +03:30 [DBG] Start key discovery request
2019-11-17 22:09:22.920 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:09:22.924 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:09:22.924 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:09:22.925 +03:30 [DBG] Start authorize request
2019-11-17 22:09:22.925 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:09:22.925 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:09:22.925 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:09:22.925 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:09:22.925 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"j_rn7-KtaxEFrMKPG1WPwgR_IgFBmItyQSKWRWWRxICuV","UiLocales":null,"Nonce":"j_rn7-KtaxEFrMKPG1WPwgR_IgFBmItyQSKWRWWRxICuV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ae8a4280390ad58b76847e93ec6e52aa","Raw":{"response_type":"id_token token","client_id":"angular","state":"j_rn7-KtaxEFrMKPG1WPwgR_IgFBmItyQSKWRWWRxICuV","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"j_rn7-KtaxEFrMKPG1WPwgR_IgFBmItyQSKWRWWRxICuV"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:09:23.109 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-17 22:09:23.109 +03:30 [DBG] Creating Implicit Flow response.
2019-11-17 22:09:23.109 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-17 22:09:23.109 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:09:23.350 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-17 22:09:23.350 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-17 22:09:23.355 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****R54Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nFqQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRBGNG5EQ1V:00000003","TimeStamp":"2019-11-17T18:39:23.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-17 22:09:23.356 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"j_rn7-KtaxEFrMKPG1WPwgR_IgFBmItyQSKWRWWRxICuV","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-17 22:12:33.601 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:12:33.601 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:12:33.602 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:12:33.602 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:12:33.602 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:12:33.602 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:12:33.602 +03:30 [DBG] Start discovery request
2019-11-17 22:36:01.996 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:36:01.997 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:36:01.997 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:36:01.997 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:36:01.998 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:36:01.998 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:36:01.998 +03:30 [DBG] Start discovery request
2019-11-17 22:36:02.053 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:36:02.053 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:36:02.053 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:36:02.053 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:36:02.054 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:36:02.054 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:36:02.054 +03:30 [DBG] Start key discovery request
2019-11-17 22:36:02.241 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:36:02.242 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:36:02.242 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:36:02.242 +03:30 [DBG] Start authorize request
2019-11-17 22:36:02.243 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-17 22:36:02.243 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:36:02.243 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:36:02.243 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/basket
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"fr3Y8uySn4pmhi_wo7BlrsQGKpMP-7ghh-posf3JWDSWQ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"fr3Y8uySn4pmhi_wo7BlrsQGKpMP-7ghh-posf3JWDSWQ"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:36:02.243 +03:30 [ERR] Request validation failed
2019-11-17 22:36:02.243 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"fr3Y8uySn4pmhi_wo7BlrsQGKpMP-7ghh-posf3JWDSWQ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"fr3Y8uySn4pmhi_wo7BlrsQGKpMP-7ghh-posf3JWDSWQ"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:36:02.244 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRBGNG5EQ21:00000003","TimeStamp":"2019-11-17T19:06:02.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-17 22:36:26.451 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-17 22:36:26.542 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-17 22:36:26.543 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-17 22:36:26.544 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-17 22:36:26.545 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRBGNG5EQ21:00000008","TimeStamp":"2019-11-17T19:06:26.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-17 22:36:26.681 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-17 22:36:26.686 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-17 22:36:26.687 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-17 22:36:26.697 +03:30 [DBG] Processing signout callback request
2019-11-17 22:36:26.718 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:36:26.719 +03:30 [DBG] No client front-channel logout URLs
2019-11-17 22:36:26.719 +03:30 [DBG] No client back-channel logout URLs
2019-11-17 22:36:26.719 +03:30 [INF] Successful signout callback.
2019-11-17 22:36:26.719 +03:30 [DBG] No client front-channel iframe urls
2019-11-17 22:36:26.719 +03:30 [DBG] No client back-channel iframe urls
2019-11-17 22:37:03.056 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:37:03.057 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:37:03.058 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:37:03.058 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:37:03.058 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:37:03.058 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:37:03.058 +03:30 [DBG] Start discovery request
2019-11-17 22:37:03.139 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:37:03.139 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:37:03.139 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:37:03.139 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:37:03.140 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:37:03.140 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:37:03.140 +03:30 [DBG] Start key discovery request
2019-11-17 22:37:03.263 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:37:03.267 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:37:03.267 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:37:03.268 +03:30 [DBG] Start authorize request
2019-11-17 22:37:03.268 +03:30 [DBG] No user present in authorize request
2019-11-17 22:37:03.268 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:37:03.268 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:37:03.268 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:37:03.268 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"hjaSOvJeIhHxX7k_-dsiQtNScdRvj1noudLYXXKlGwfIR","UiLocales":null,"Nonce":"hjaSOvJeIhHxX7k_-dsiQtNScdRvj1noudLYXXKlGwfIR","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"hjaSOvJeIhHxX7k_-dsiQtNScdRvj1noudLYXXKlGwfIR","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"hjaSOvJeIhHxX7k_-dsiQtNScdRvj1noudLYXXKlGwfIR"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:37:03.269 +03:30 [INF] Showing login: User is not authenticated
2019-11-17 22:37:07.874 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:37:07.875 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:37:07.875 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:37:07.876 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:37:25.034 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:37:25.034 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:37:25.034 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:37:25.036 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:37:25.036 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:37:25.036 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:37:25.037 +03:30 [DBG] Start discovery request
2019-11-17 22:37:35.102 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:37:35.103 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:37:35.103 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:37:35.103 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:37:35.104 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:37:35.104 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:37:35.104 +03:30 [DBG] Start discovery request
2019-11-17 22:39:07.729 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:39:07.732 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:39:07.733 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:39:07.733 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:39:07.733 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:39:07.733 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:39:07.733 +03:30 [DBG] Start discovery request
2019-11-17 22:52:57.872 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:52:57.872 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:52:57.872 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:52:57.873 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:52:57.874 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:52:57.874 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:52:57.875 +03:30 [DBG] Start discovery request
2019-11-17 22:52:58.046 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:52:58.047 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:52:58.048 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:52:58.048 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:52:58.049 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:52:58.049 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:52:58.049 +03:30 [DBG] Start key discovery request
2019-11-17 22:52:58.108 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:52:58.109 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:52:58.109 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:52:58.110 +03:30 [DBG] Start authorize request
2019-11-17 22:52:58.110 +03:30 [DBG] No user present in authorize request
2019-11-17 22:52:58.110 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:52:58.110 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:52:58.113 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:52:58.113 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"3ateoShJI1IWFYnk_Vh-no12VQxcgZpPCXDPkh_EXA2ft","UiLocales":null,"Nonce":"3ateoShJI1IWFYnk_Vh-no12VQxcgZpPCXDPkh_EXA2ft","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"3ateoShJI1IWFYnk_Vh-no12VQxcgZpPCXDPkh_EXA2ft","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"3ateoShJI1IWFYnk_Vh-no12VQxcgZpPCXDPkh_EXA2ft"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:52:58.113 +03:30 [INF] Showing login: User is not authenticated
2019-11-17 22:53:00.834 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:53:00.834 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:53:00.835 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:53:00.835 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:54:06.307 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:54:06.308 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:54:06.308 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:54:06.311 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:54:06.311 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:54:06.311 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:54:06.311 +03:30 [DBG] Start discovery request
2019-11-17 22:54:46.179 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:54:46.180 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:54:46.180 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:54:46.180 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:54:46.181 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:54:46.181 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:54:46.181 +03:30 [DBG] Start discovery request
2019-11-17 22:54:52.983 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:54:52.983 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:54:52.983 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:54:52.983 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:54:52.984 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:54:52.984 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:54:52.984 +03:30 [DBG] Start discovery request
2019-11-17 22:54:53.130 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:54:53.130 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:54:53.130 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:54:53.131 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:54:53.132 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:54:53.132 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:54:53.132 +03:30 [DBG] Start key discovery request
2019-11-17 22:54:53.174 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:54:53.175 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:54:53.175 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:54:53.175 +03:30 [DBG] Start authorize request
2019-11-17 22:54:53.175 +03:30 [DBG] No user present in authorize request
2019-11-17 22:54:53.175 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:54:53.175 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:54:53.175 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/error/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"pk2b862vIN_ufWKIjARVsn8meHN6oH9WGTqv2robNZlP4","redirect_uri":"http://localhost:4200/error/","scope":"openid profile orders","nonce":"pk2b862vIN_ufWKIjARVsn8meHN6oH9WGTqv2robNZlP4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:54:53.175 +03:30 [ERR] Request validation failed
2019-11-17 22:54:53.175 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"pk2b862vIN_ufWKIjARVsn8meHN6oH9WGTqv2robNZlP4","redirect_uri":"http://localhost:4200/error/","scope":"openid profile orders","nonce":"pk2b862vIN_ufWKIjARVsn8meHN6oH9WGTqv2robNZlP4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:54:53.176 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRBGNG5EQ26:00000004","TimeStamp":"2019-11-17T19:24:53.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-17 22:56:29.663 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:56:29.663 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:56:29.664 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:56:29.683 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:56:29.684 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:56:29.684 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:56:29.684 +03:30 [DBG] Start discovery request
2019-11-17 22:56:29.801 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:56:29.802 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:56:29.802 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:56:29.802 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:56:29.802 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:56:29.802 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:56:29.841 +03:30 [DBG] Start key discovery request
2019-11-17 22:56:29.935 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:56:29.936 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:56:29.936 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:56:29.936 +03:30 [DBG] Start authorize request
2019-11-17 22:56:29.936 +03:30 [DBG] No user present in authorize request
2019-11-17 22:56:29.936 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:56:29.936 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:56:29.937 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:56:29.937 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"LnH8lS5LbBbJupDDoPCXYjJVLBdBeB0_SgLwTbidoChSK","UiLocales":null,"Nonce":"LnH8lS5LbBbJupDDoPCXYjJVLBdBeB0_SgLwTbidoChSK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"LnH8lS5LbBbJupDDoPCXYjJVLBdBeB0_SgLwTbidoChSK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"LnH8lS5LbBbJupDDoPCXYjJVLBdBeB0_SgLwTbidoChSK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:56:29.937 +03:30 [INF] Showing login: User is not authenticated
2019-11-17 22:56:32.382 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:56:32.382 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:56:32.382 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:56:32.383 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:57:04.741 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:57:04.748 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:57:04.748 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:57:04.751 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:57:04.751 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:57:04.751 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:57:04.751 +03:30 [DBG] Start discovery request
2019-11-17 22:57:16.322 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:57:16.323 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:57:16.324 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:57:16.325 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:57:16.325 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:57:16.325 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:57:16.325 +03:30 [DBG] Start discovery request
2019-11-17 22:57:16.468 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:57:16.469 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:57:16.469 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:57:16.469 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:57:16.469 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:57:16.470 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:57:16.470 +03:30 [DBG] Start key discovery request
2019-11-17 22:57:16.542 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:57:16.543 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:57:16.543 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:57:16.544 +03:30 [DBG] Start authorize request
2019-11-17 22:57:16.544 +03:30 [DBG] No user present in authorize request
2019-11-17 22:57:16.544 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:57:16.544 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:57:16.544 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:57:16.544 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"mVaCipG-5ZHvh0RwQxl3t48dl2SwZtY8VmiJNhOes3TSX","UiLocales":null,"Nonce":"mVaCipG-5ZHvh0RwQxl3t48dl2SwZtY8VmiJNhOes3TSX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"mVaCipG-5ZHvh0RwQxl3t48dl2SwZtY8VmiJNhOes3TSX","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"mVaCipG-5ZHvh0RwQxl3t48dl2SwZtY8VmiJNhOes3TSX"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:57:16.545 +03:30 [INF] Showing login: User is not authenticated
2019-11-17 22:57:18.756 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:57:18.756 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:57:18.757 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 22:57:18.757 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:58:10.130 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 22:58:10.136 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:58:10.137 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:58:10.138 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 22:58:10.152 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 22:58:10.152 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 22:58:10.152 +03:30 [DBG] Start discovery request
2019-11-17 22:58:10.201 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 22:58:10.201 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 22:58:10.201 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 22:58:10.201 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 22:58:10.201 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 22:58:10.201 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 22:58:10.202 +03:30 [DBG] Start key discovery request
2019-11-17 22:58:10.231 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 22:58:10.231 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 22:58:10.231 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 22:58:10.231 +03:30 [DBG] Start authorize request
2019-11-17 22:58:10.231 +03:30 [DBG] No user present in authorize request
2019-11-17 22:58:10.232 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 22:58:10.232 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 22:58:10.232 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/basket
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"rgKu4ihVAQjGIr7Z8i9guAfNVer6Tb5Y4ncGqTmjiX5Le","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"rgKu4ihVAQjGIr7Z8i9guAfNVer6Tb5Y4ncGqTmjiX5Le"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:58:10.232 +03:30 [ERR] Request validation failed
2019-11-17 22:58:10.232 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"rgKu4ihVAQjGIr7Z8i9guAfNVer6Tb5Y4ncGqTmjiX5Le","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"rgKu4ihVAQjGIr7Z8i9guAfNVer6Tb5Y4ncGqTmjiX5Le"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 22:58:10.232 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRBGNG5EQ27:0000000E","TimeStamp":"2019-11-17T19:28:10.0000000Z","ProcessId":15028,"LocalIpAddress":"127.0.0.1:29320","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-17 23:00:18.118 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-17 23:00:18.180 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-17 23:00:18.191 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-17 23:00:18.191 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-17 23:00:18.191 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-17 23:00:18.191 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-17 23:00:18.191 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-17 23:00:18.191 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-17 23:00:18.771 +03:30 [DBG] Login Url: /Account/Login
2019-11-17 23:00:18.776 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-17 23:00:18.776 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-17 23:00:18.776 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-17 23:00:18.776 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-17 23:00:18.776 +03:30 [DBG] Error Url: /home/error
2019-11-17 23:00:18.776 +03:30 [DBG] Error Id Parameter: errorId
2019-11-17 23:00:36.754 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 23:00:36.767 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 23:00:36.768 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 23:00:36.774 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 23:00:36.802 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 23:00:36.803 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 23:00:36.813 +03:30 [DBG] Start discovery request
2019-11-17 23:01:36.189 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 23:01:36.189 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 23:01:36.189 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 23:01:36.190 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 23:01:36.220 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 23:01:36.220 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 23:01:36.220 +03:30 [DBG] Start discovery request
2019-11-17 23:01:36.372 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-17 23:01:36.372 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 23:01:36.372 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 23:01:36.372 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-17 23:01:36.373 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-17 23:01:36.374 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-17 23:01:36.388 +03:30 [DBG] Start key discovery request
2019-11-17 23:01:36.468 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-17 23:01:36.472 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-17 23:01:36.472 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-17 23:01:36.479 +03:30 [DBG] Start authorize request
2019-11-17 23:01:36.494 +03:30 [DBG] No user present in authorize request
2019-11-17 23:01:36.503 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 23:01:36.547 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 23:01:36.638 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 23:01:36.656 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"X68dcKEajhDE1ucbjcf9u2PIr_mShDvEQmtljDNKKlbTQ","UiLocales":null,"Nonce":"X68dcKEajhDE1ucbjcf9u2PIr_mShDvEQmtljDNKKlbTQ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"X68dcKEajhDE1ucbjcf9u2PIr_mShDvEQmtljDNKKlbTQ","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"X68dcKEajhDE1ucbjcf9u2PIr_mShDvEQmtljDNKKlbTQ"},"$type":"AuthorizeRequestValidationLog"}
2019-11-17 23:01:36.690 +03:30 [INF] Showing login: User is not authenticated
2019-11-17 23:01:40.301 +03:30 [DBG] Start authorize request protocol validation
2019-11-17 23:01:40.302 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 23:01:40.302 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-17 23:01:40.305 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-17 23:01:50.956 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 23:01:50.956 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 23:01:50.956 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 23:01:50.957 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 23:01:50.959 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 23:01:50.961 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 23:01:50.962 +03:30 [DBG] Start discovery request
2019-11-17 23:03:53.681 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-17 23:03:53.682 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-17 23:03:53.682 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-17 23:03:53.682 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-17 23:03:53.683 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-17 23:03:53.683 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-17 23:03:53.683 +03:30 [DBG] Start discovery request
2019-11-18 19:35:21.589 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-18 19:35:21.646 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-18 19:35:21.659 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-18 19:35:21.659 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-18 19:35:21.659 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-18 19:35:21.659 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-18 19:35:21.660 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-18 19:35:21.660 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-18 19:35:22.746 +03:30 [DBG] Login Url: /Account/Login
2019-11-18 19:35:22.749 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-18 19:35:22.749 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-18 19:35:22.749 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-18 19:35:22.750 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-18 19:35:22.750 +03:30 [DBG] Error Url: /home/error
2019-11-18 19:35:22.750 +03:30 [DBG] Error Id Parameter: errorId
2019-11-18 19:35:47.664 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 19:35:47.670 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:35:47.670 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:35:47.676 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 19:35:47.694 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 19:35:47.694 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 19:35:47.709 +03:30 [DBG] Start discovery request
2019-11-18 19:35:47.964 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 19:35:47.964 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:35:47.964 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:35:47.965 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 19:35:47.966 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 19:35:47.966 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 19:35:47.973 +03:30 [DBG] Start key discovery request
2019-11-18 19:35:48.042 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 19:35:48.048 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 19:35:48.048 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 19:35:48.056 +03:30 [DBG] Start authorize request
2019-11-18 19:35:48.079 +03:30 [DBG] No user present in authorize request
2019-11-18 19:35:48.093 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:35:48.134 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:35:48.232 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:35:48.260 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"NOns6Xsa18C_ubAr2P08tdAPBsRQ6sZEEyRCNVoNJEP6x","UiLocales":null,"Nonce":"NOns6Xsa18C_ubAr2P08tdAPBsRQ6sZEEyRCNVoNJEP6x","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"NOns6Xsa18C_ubAr2P08tdAPBsRQ6sZEEyRCNVoNJEP6x","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"NOns6Xsa18C_ubAr2P08tdAPBsRQ6sZEEyRCNVoNJEP6x"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 19:35:48.341 +03:30 [INF] Showing login: User is not authenticated
2019-11-18 19:35:52.452 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:35:52.453 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:35:52.453 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:35:52.458 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:39.920 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 19:36:39.920 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:36:39.925 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:36:39.926 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 19:36:39.928 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 19:36:39.931 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 19:36:39.931 +03:30 [DBG] Start discovery request
2019-11-18 19:36:39.986 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 19:36:39.987 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:36:39.987 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:36:39.987 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 19:36:39.988 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 19:36:39.988 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 19:36:39.988 +03:30 [DBG] Start key discovery request
2019-11-18 19:36:40.044 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 19:36:40.045 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 19:36:40.045 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 19:36:40.045 +03:30 [DBG] Start authorize request
2019-11-18 19:36:40.045 +03:30 [DBG] No user present in authorize request
2019-11-18 19:36:40.045 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:36:40.046 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:40.046 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:36:40.046 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","UiLocales":null,"Nonce":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 19:36:40.046 +03:30 [INF] Showing login: User is not authenticated
2019-11-18 19:36:41.473 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:36:41.473 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:41.474 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:36:41.475 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:52.199 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-18 19:36:53.387 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:36:53.387 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:53.387 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:36:53.738 +03:30 [DBG] Augmenting SignInContext
2019-11-18 19:36:53.741 +03:30 [DBG] Adding idp claim with value: local
2019-11-18 19:36:53.741 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-18 19:36:53.741 +03:30 [DBG] Adding auth_time claim with value: 1574093213
2019-11-18 19:36:53.752 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-18 19:36:53.852 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRC84EQ6IP9:00000009","TimeStamp":"2019-11-18T16:06:53.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-18 19:36:53.855 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:53.884 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-18 19:36:53.885 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-18 19:36:53.885 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-18 19:36:53.896 +03:30 [DBG] Start authorize callback request
2019-11-18 19:36:53.901 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:36:53.901 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:36:53.901 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:53.902 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:36:53.902 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","UiLocales":null,"Nonce":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bcc2ef814a9e59d15e5668f1f75912f1","Raw":{"response_type":"id_token token","client_id":"angular","state":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 19:36:54.016 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-18 19:36:54.016 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-18 19:36:54.016 +03:30 [INF] Showing consent: User has not yet consented
2019-11-18 19:36:54.126 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:36:54.127 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:54.128 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:36:54.128 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:56.194 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-18 19:36:56.270 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:36:56.270 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:56.270 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:36:56.272 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRC84EQ6IP9:0000000B","TimeStamp":"2019-11-18T16:06:56.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-18 19:36:56.292 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:56.300 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-18 19:36:56.301 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-18 19:36:56.302 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-18 19:36:56.302 +03:30 [DBG] Start authorize callback request
2019-11-18 19:36:56.308 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:36:56.309 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:36:56.309 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:36:56.309 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:36:56.309 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","UiLocales":null,"Nonce":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bcc2ef814a9e59d15e5668f1f75912f1","Raw":{"response_type":"id_token token","client_id":"angular","state":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 19:36:56.357 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-18 19:36:56.358 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-18 19:36:56.367 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-18 19:36:56.373 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-18 19:36:56.379 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:36:56.416 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 19:36:56.433 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 19:36:56.434 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:36:56.755 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 19:36:56.755 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 19:36:56.766 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****GZug","$type":"Token"},{"TokenType":"access_token","TokenValue":"****B3yg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IP8:0000000A","TimeStamp":"2019-11-18T16:06:56.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 19:36:56.769 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"CdFoLx9DHV018PNM3jl4cctE7qcumoIW8wcqICGbV_PWc","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 19:36:56.794 +03:30 [DBG] Augmenting SignInContext
2019-11-18 19:36:56.795 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-18 19:38:32.812 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 19:38:32.813 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:38:32.813 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:38:32.813 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 19:38:32.814 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 19:38:32.814 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 19:38:32.814 +03:30 [DBG] Start discovery request
2019-11-18 19:38:32.905 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 19:38:32.905 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:38:32.905 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:38:32.905 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 19:38:32.905 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 19:38:32.906 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 19:38:32.906 +03:30 [DBG] Start key discovery request
2019-11-18 19:52:40.706 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 19:52:40.706 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:52:40.706 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:52:40.706 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 19:52:40.708 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 19:52:40.708 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 19:52:40.708 +03:30 [DBG] Start discovery request
2019-11-18 19:52:40.804 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 19:52:40.804 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:52:40.804 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:52:40.805 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 19:52:40.805 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 19:52:40.805 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 19:52:40.805 +03:30 [DBG] Start key discovery request
2019-11-18 19:52:40.865 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 19:52:40.868 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 19:52:40.900 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 19:52:40.901 +03:30 [DBG] Start authorize request
2019-11-18 19:52:40.901 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:52:40.901 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:52:40.901 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:52:40.902 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:52:40.902 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"zxepr2bFswKN7Ym9L4aHS8rBcAW8fYXmwuacrU6VCobEl","UiLocales":null,"Nonce":"zxepr2bFswKN7Ym9L4aHS8rBcAW8fYXmwuacrU6VCobEl","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bcc2ef814a9e59d15e5668f1f75912f1","Raw":{"response_type":"id_token token","client_id":"angular","state":"zxepr2bFswKN7Ym9L4aHS8rBcAW8fYXmwuacrU6VCobEl","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"zxepr2bFswKN7Ym9L4aHS8rBcAW8fYXmwuacrU6VCobEl"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 19:52:41.319 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 19:52:41.319 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 19:52:41.320 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 19:52:41.320 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:52:41.496 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 19:52:41.496 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 19:52:41.501 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****nFNg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****XKdA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPB:00000003","TimeStamp":"2019-11-18T16:22:41.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 19:52:41.502 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"zxepr2bFswKN7Ym9L4aHS8rBcAW8fYXmwuacrU6VCobEl","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 19:56:35.570 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 19:56:35.570 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:56:35.571 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:56:35.571 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 19:56:35.572 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 19:56:35.572 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 19:56:35.572 +03:30 [DBG] Start discovery request
2019-11-18 19:56:35.589 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 19:56:35.589 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:56:35.589 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:56:35.590 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 19:56:35.590 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 19:56:35.590 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 19:56:35.590 +03:30 [DBG] Start key discovery request
2019-11-18 19:56:35.651 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 19:56:35.652 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 19:56:35.652 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 19:56:35.652 +03:30 [DBG] Start authorize request
2019-11-18 19:56:35.652 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:56:35.652 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 19:56:35.652 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 19:56:35.653 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 19:56:35.653 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"Xchy3sXANgCoLGVtr6Oz5suWkH77Ctd0gKEdxYZyOa3c4","UiLocales":null,"Nonce":"Xchy3sXANgCoLGVtr6Oz5suWkH77Ctd0gKEdxYZyOa3c4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bcc2ef814a9e59d15e5668f1f75912f1","Raw":{"response_type":"id_token token","client_id":"angular","state":"Xchy3sXANgCoLGVtr6Oz5suWkH77Ctd0gKEdxYZyOa3c4","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"Xchy3sXANgCoLGVtr6Oz5suWkH77Ctd0gKEdxYZyOa3c4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 19:56:35.719 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 19:56:35.720 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 19:56:35.720 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 19:56:35.720 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 19:56:35.843 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 19:56:35.843 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 19:56:35.848 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****yFjg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8ATw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPC:00000003","TimeStamp":"2019-11-18T16:26:35.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 19:56:35.849 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"Xchy3sXANgCoLGVtr6Oz5suWkH77Ctd0gKEdxYZyOa3c4","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 19:56:39.551 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 19:56:39.551 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:56:39.551 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:56:39.551 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 19:56:39.553 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 19:56:39.553 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 19:56:39.553 +03:30 [DBG] Start discovery request
2019-11-18 19:56:39.579 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 19:56:39.579 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 19:56:39.579 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 19:56:39.580 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 19:56:39.580 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 19:56:39.580 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 19:56:39.580 +03:30 [DBG] Start key discovery request
2019-11-18 20:01:49.795 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 20:01:49.796 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:01:49.796 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:01:49.797 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 20:01:49.800 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 20:01:49.800 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 20:01:49.801 +03:30 [DBG] Start discovery request
2019-11-18 20:01:49.906 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 20:01:49.906 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:01:49.906 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:01:49.907 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 20:01:49.907 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 20:01:49.907 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 20:01:49.907 +03:30 [DBG] Start key discovery request
2019-11-18 20:01:50.008 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 20:01:50.010 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 20:01:50.010 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 20:01:50.010 +03:30 [DBG] Start authorize request
2019-11-18 20:01:50.010 +03:30 [DBG] No user present in authorize request
2019-11-18 20:01:50.010 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 20:01:50.010 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:01:50.010 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 20:01:50.011 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH","UiLocales":null,"Nonce":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 20:01:50.011 +03:30 [INF] Showing login: User is not authenticated
2019-11-18 20:01:52.030 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 20:01:52.030 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:01:52.031 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 20:01:52.031 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:01:58.461 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-18 20:01:59.601 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 20:01:59.604 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:01:59.604 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 20:01:59.786 +03:30 [DBG] Augmenting SignInContext
2019-11-18 20:01:59.786 +03:30 [DBG] Adding idp claim with value: local
2019-11-18 20:01:59.786 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-18 20:01:59.786 +03:30 [DBG] Adding auth_time claim with value: 1574094719
2019-11-18 20:01:59.787 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-18 20:01:59.851 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRC84EQ6IPD:00000005","TimeStamp":"2019-11-18T16:31:59.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-18 20:01:59.851 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:01:59.970 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-18 20:01:59.970 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-18 20:01:59.970 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-18 20:01:59.971 +03:30 [DBG] Start authorize callback request
2019-11-18 20:01:59.971 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:01:59.972 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 20:01:59.972 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:01:59.974 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 20:01:59.975 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH","UiLocales":null,"Nonce":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 20:02:00.057 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 20:02:00.057 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 20:02:00.057 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 20:02:00.058 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:02:00.176 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 20:02:00.177 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 20:02:00.181 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****NRVg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****o_Qw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPE:00000003","TimeStamp":"2019-11-18T16:32:00.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 20:02:00.181 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"2ZI10XA8SxbYVey1SRdd_XfzQtiPUvM7yS_IoGi1dYZJH","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 20:02:00.181 +03:30 [DBG] Augmenting SignInContext
2019-11-18 20:02:00.181 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-18 20:02:04.592 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 20:02:04.592 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:02:04.592 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:02:04.593 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 20:02:04.593 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 20:02:04.593 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 20:02:04.593 +03:30 [DBG] Start discovery request
2019-11-18 20:02:04.619 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 20:02:04.619 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:02:04.619 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:02:04.620 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 20:02:04.620 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 20:02:04.620 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 20:02:04.620 +03:30 [DBG] Start key discovery request
2019-11-18 20:02:04.663 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 20:02:04.663 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 20:02:04.663 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 20:02:04.664 +03:30 [DBG] Start authorize request
2019-11-18 20:02:04.664 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:02:04.664 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 20:02:04.664 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:02:04.664 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 20:02:04.665 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"8YNWAeS-xMVkDjq1ubnNAb7esWykRDvs3Gh4G_fB1olqs","UiLocales":null,"Nonce":"8YNWAeS-xMVkDjq1ubnNAb7esWykRDvs3Gh4G_fB1olqs","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"8YNWAeS-xMVkDjq1ubnNAb7esWykRDvs3Gh4G_fB1olqs","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"8YNWAeS-xMVkDjq1ubnNAb7esWykRDvs3Gh4G_fB1olqs"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 20:02:04.718 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 20:02:04.718 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 20:02:04.719 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 20:02:04.719 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:02:04.841 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 20:02:04.841 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 20:02:04.845 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1CBw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Tf4A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPD:00000007","TimeStamp":"2019-11-18T16:32:04.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 20:02:04.845 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"8YNWAeS-xMVkDjq1ubnNAb7esWykRDvs3Gh4G_fB1olqs","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 20:02:13.299 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 20:02:13.300 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:02:13.300 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:02:13.301 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 20:02:13.301 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 20:02:13.301 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 20:02:13.301 +03:30 [DBG] Start discovery request
2019-11-18 20:02:13.359 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 20:02:13.359 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:02:13.359 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:02:13.359 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 20:02:13.359 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 20:02:13.360 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 20:02:13.360 +03:30 [DBG] Start key discovery request
2019-11-18 20:07:05.742 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 20:07:05.744 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:07:05.744 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:07:05.744 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 20:07:05.745 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 20:07:05.745 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 20:07:05.745 +03:30 [DBG] Start discovery request
2019-11-18 20:07:05.910 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 20:07:05.910 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:07:05.910 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:07:05.911 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 20:07:05.911 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 20:07:05.911 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 20:07:05.911 +03:30 [DBG] Start key discovery request
2019-11-18 20:07:05.975 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 20:07:05.976 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 20:07:05.976 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 20:07:05.976 +03:30 [DBG] Start authorize request
2019-11-18 20:07:05.977 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:07:05.977 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 20:07:05.977 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:07:05.977 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 20:07:05.977 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"gu1J9moc-LB2Wx1jk575gsrg0XkgO_NHAoO4NUUYYOD8-","UiLocales":null,"Nonce":"gu1J9moc-LB2Wx1jk575gsrg0XkgO_NHAoO4NUUYYOD8-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"gu1J9moc-LB2Wx1jk575gsrg0XkgO_NHAoO4NUUYYOD8-","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"gu1J9moc-LB2Wx1jk575gsrg0XkgO_NHAoO4NUUYYOD8-"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 20:07:06.054 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 20:07:06.054 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 20:07:06.054 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 20:07:06.055 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:07:06.194 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 20:07:06.194 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 20:07:06.197 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****UAwA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AuFg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPF:00000003","TimeStamp":"2019-11-18T16:37:06.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 20:07:06.198 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"gu1J9moc-LB2Wx1jk575gsrg0XkgO_NHAoO4NUUYYOD8-","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 20:07:33.292 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 20:07:33.293 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:07:33.293 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:07:33.296 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 20:07:33.296 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 20:07:33.297 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 20:07:33.297 +03:30 [DBG] Start discovery request
2019-11-18 20:07:33.328 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 20:07:33.328 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:07:33.328 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:07:33.329 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 20:07:33.329 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 20:07:33.329 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 20:07:33.329 +03:30 [DBG] Start key discovery request
2019-11-18 20:07:33.373 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 20:07:33.373 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 20:07:33.374 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 20:07:33.374 +03:30 [DBG] Start authorize request
2019-11-18 20:07:33.374 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:07:33.374 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 20:07:33.374 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 20:07:33.374 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 20:07:33.375 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"IZbGnCVTaxpk0HPccCZ1lpQNVe3ShCRvYkfatOopCPyAD","UiLocales":null,"Nonce":"IZbGnCVTaxpk0HPccCZ1lpQNVe3ShCRvYkfatOopCPyAD","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"IZbGnCVTaxpk0HPccCZ1lpQNVe3ShCRvYkfatOopCPyAD","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"IZbGnCVTaxpk0HPccCZ1lpQNVe3ShCRvYkfatOopCPyAD"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 20:07:33.421 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 20:07:33.422 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 20:07:33.422 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 20:07:33.422 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 20:07:33.523 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 20:07:33.523 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 20:07:33.527 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****s8_g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****OiHg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPF:00000006","TimeStamp":"2019-11-18T16:37:33.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 20:07:33.528 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"IZbGnCVTaxpk0HPccCZ1lpQNVe3ShCRvYkfatOopCPyAD","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 20:07:35.755 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 20:07:35.755 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:07:35.755 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:07:35.756 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 20:07:35.757 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 20:07:35.757 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 20:07:35.757 +03:30 [DBG] Start discovery request
2019-11-18 20:07:35.787 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 20:07:35.788 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 20:07:35.788 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 20:07:35.788 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 20:07:35.788 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 20:07:35.788 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 20:07:35.788 +03:30 [DBG] Start key discovery request
2019-11-18 22:26:47.401 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:26:47.401 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:26:47.401 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:26:47.402 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:26:47.402 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:26:47.402 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:26:47.403 +03:30 [DBG] Start discovery request
2019-11-18 22:26:47.570 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:26:47.582 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:26:47.582 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:26:47.582 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:26:47.583 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:26:47.585 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:26:47.585 +03:30 [DBG] Start key discovery request
2019-11-18 22:26:47.954 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:26:47.955 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:26:47.955 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:26:47.955 +03:30 [DBG] Start authorize request
2019-11-18 22:26:47.955 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:26:47.955 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:26:47.955 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:26:47.956 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:26:47.956 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"GvuEnwRTR0RH44qq5k8QxZbftVsgyad3D5PvUCOTtqCKX","UiLocales":null,"Nonce":"GvuEnwRTR0RH44qq5k8QxZbftVsgyad3D5PvUCOTtqCKX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"GvuEnwRTR0RH44qq5k8QxZbftVsgyad3D5PvUCOTtqCKX","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"GvuEnwRTR0RH44qq5k8QxZbftVsgyad3D5PvUCOTtqCKX"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:26:47.957 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:26:47.958 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:26:47.958 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:26:47.958 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:26:48.260 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:26:48.261 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:26:48.266 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****odPg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****tXRg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPG:00000003","TimeStamp":"2019-11-18T18:56:48.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:26:48.267 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"GvuEnwRTR0RH44qq5k8QxZbftVsgyad3D5PvUCOTtqCKX","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 22:31:08.261 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:31:08.261 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:31:08.261 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:31:08.262 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:31:08.263 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:31:08.263 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:31:08.263 +03:30 [DBG] Start discovery request
2019-11-18 22:31:08.325 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:31:08.325 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:31:08.326 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:31:08.330 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:31:08.330 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:31:08.330 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:31:08.330 +03:30 [DBG] Start key discovery request
2019-11-18 22:31:08.381 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:31:08.381 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:31:08.381 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:31:08.381 +03:30 [DBG] Start authorize request
2019-11-18 22:31:08.382 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:31:08.382 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:31:08.382 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:31:08.382 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:31:08.382 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"h9w9fCW67gTcbMp0VrShwsT_4f-wRv-8CIFmRpGthHeI_","UiLocales":null,"Nonce":"h9w9fCW67gTcbMp0VrShwsT_4f-wRv-8CIFmRpGthHeI_","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"h9w9fCW67gTcbMp0VrShwsT_4f-wRv-8CIFmRpGthHeI_","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"h9w9fCW67gTcbMp0VrShwsT_4f-wRv-8CIFmRpGthHeI_"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:31:08.481 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:31:08.481 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:31:08.481 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:31:08.481 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:31:08.586 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:31:08.586 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:31:08.590 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ySXQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1TeQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPH:00000003","TimeStamp":"2019-11-18T19:01:08.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:31:08.590 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"h9w9fCW67gTcbMp0VrShwsT_4f-wRv-8CIFmRpGthHeI_","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 22:32:11.633 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:32:11.634 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:32:11.634 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:32:11.634 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:32:11.634 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:32:11.635 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:32:11.635 +03:30 [DBG] Start discovery request
2019-11-18 22:32:11.657 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:32:11.658 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:32:11.658 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:32:11.658 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:32:11.658 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:32:11.658 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:32:11.658 +03:30 [DBG] Start key discovery request
2019-11-18 22:32:11.680 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:32:11.681 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:32:11.681 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:32:11.682 +03:30 [DBG] Start authorize request
2019-11-18 22:32:11.682 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:32:11.682 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:32:11.682 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:32:11.682 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:32:11.682 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"Gyz16E2ryYiZAHBikz8WxvIzK1Tp5TvSihG4JLJlbQ515","UiLocales":null,"Nonce":"Gyz16E2ryYiZAHBikz8WxvIzK1Tp5TvSihG4JLJlbQ515","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"Gyz16E2ryYiZAHBikz8WxvIzK1Tp5TvSihG4JLJlbQ515","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"Gyz16E2ryYiZAHBikz8WxvIzK1Tp5TvSihG4JLJlbQ515"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:32:11.744 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:32:11.744 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:32:11.744 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:32:11.744 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:32:11.842 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:32:11.843 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:32:11.847 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2Nsg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gYdQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPI:00000003","TimeStamp":"2019-11-18T19:02:11.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:32:11.847 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"Gyz16E2ryYiZAHBikz8WxvIzK1Tp5TvSihG4JLJlbQ515","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 22:32:12.998 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:32:12.998 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:32:12.998 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:32:12.999 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:32:12.999 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:32:12.999 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:32:12.999 +03:30 [DBG] Start discovery request
2019-11-18 22:32:13.026 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:32:13.027 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:32:13.027 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:32:13.027 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:32:13.027 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:32:13.027 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:32:13.027 +03:30 [DBG] Start key discovery request
2019-11-18 22:37:12.422 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:37:12.422 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:37:12.422 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:37:12.423 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:37:12.423 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:37:12.423 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:37:12.423 +03:30 [DBG] Start discovery request
2019-11-18 22:37:12.516 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:37:12.517 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:37:12.517 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:37:12.517 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:37:12.517 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:37:12.517 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:37:12.518 +03:30 [DBG] Start key discovery request
2019-11-18 22:37:12.636 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:37:12.636 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:37:12.636 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:37:12.636 +03:30 [DBG] Start authorize request
2019-11-18 22:37:12.636 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:37:12.636 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:37:12.636 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:37:12.636 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:37:12.637 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"wnyKzVqQAgk4vIHBZLGOF7qrSEiXunNGV6tLg8Rn0jdag","UiLocales":null,"Nonce":"wnyKzVqQAgk4vIHBZLGOF7qrSEiXunNGV6tLg8Rn0jdag","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"wnyKzVqQAgk4vIHBZLGOF7qrSEiXunNGV6tLg8Rn0jdag","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"wnyKzVqQAgk4vIHBZLGOF7qrSEiXunNGV6tLg8Rn0jdag"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:37:12.712 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:37:12.712 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:37:12.712 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:37:12.712 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:37:12.882 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:37:12.882 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:37:12.887 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qhDQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CPYw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPJ:00000003","TimeStamp":"2019-11-18T19:07:12.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:37:12.887 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"wnyKzVqQAgk4vIHBZLGOF7qrSEiXunNGV6tLg8Rn0jdag","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 22:37:27.467 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:37:27.470 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:37:27.470 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:37:27.471 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:37:27.472 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:37:27.472 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:37:27.472 +03:30 [DBG] Start discovery request
2019-11-18 22:37:27.488 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:37:27.488 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:37:27.488 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:37:27.488 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:37:27.489 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:37:27.489 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:37:27.489 +03:30 [DBG] Start key discovery request
2019-11-18 22:37:27.515 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:37:27.515 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:37:27.515 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:37:27.515 +03:30 [DBG] Start authorize request
2019-11-18 22:37:27.515 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:37:27.515 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:37:27.516 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:37:27.516 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:37:27.516 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"cMwE-ns4kTWIuGrSN-CrZPmcUzjbHJtYgPjOPehnC3j8D","UiLocales":null,"Nonce":"cMwE-ns4kTWIuGrSN-CrZPmcUzjbHJtYgPjOPehnC3j8D","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"cMwE-ns4kTWIuGrSN-CrZPmcUzjbHJtYgPjOPehnC3j8D","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"cMwE-ns4kTWIuGrSN-CrZPmcUzjbHJtYgPjOPehnC3j8D"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:37:27.584 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:37:27.585 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:37:27.585 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:37:27.585 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:37:27.717 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:37:27.717 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:37:27.722 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Hzdg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IrhA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPJ:00000006","TimeStamp":"2019-11-18T19:07:27.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:37:27.723 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"cMwE-ns4kTWIuGrSN-CrZPmcUzjbHJtYgPjOPehnC3j8D","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 22:37:28.793 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:37:28.793 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:37:28.793 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:37:28.793 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:37:28.794 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:37:28.794 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:37:28.796 +03:30 [DBG] Start discovery request
2019-11-18 22:37:28.827 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:37:28.827 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:37:28.827 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:37:28.827 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:37:28.829 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:37:28.829 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:37:28.830 +03:30 [DBG] Start key discovery request
2019-11-18 22:50:33.032 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:50:33.032 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:50:33.032 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:50:33.032 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:50:33.033 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:50:33.033 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:50:33.033 +03:30 [DBG] Start discovery request
2019-11-18 22:50:33.127 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:50:33.127 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:50:33.128 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:50:33.128 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:50:33.129 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:50:33.135 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:50:33.135 +03:30 [DBG] Start key discovery request
2019-11-18 22:50:33.190 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:50:33.192 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:50:33.192 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:50:33.192 +03:30 [DBG] Start authorize request
2019-11-18 22:50:33.192 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:50:33.192 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:50:33.193 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:50:33.193 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:50:33.201 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"3KEUAO4H1MVTHk1cqAR5zm_y0FAHBOQpQhw5Z4qkv9v-a","UiLocales":null,"Nonce":"3KEUAO4H1MVTHk1cqAR5zm_y0FAHBOQpQhw5Z4qkv9v-a","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"3KEUAO4H1MVTHk1cqAR5zm_y0FAHBOQpQhw5Z4qkv9v-a","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"3KEUAO4H1MVTHk1cqAR5zm_y0FAHBOQpQhw5Z4qkv9v-a"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:50:33.473 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:50:33.473 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:50:33.473 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:50:33.473 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:50:33.721 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:50:33.722 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:50:33.727 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****gYtw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****EpPg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPK:00000003","TimeStamp":"2019-11-18T19:20:33.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:50:33.727 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"3KEUAO4H1MVTHk1cqAR5zm_y0FAHBOQpQhw5Z4qkv9v-a","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 22:50:36.651 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:50:36.651 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:50:36.651 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:50:36.652 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:50:36.652 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:50:36.652 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:50:36.653 +03:30 [DBG] Start discovery request
2019-11-18 22:50:36.684 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:50:36.684 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:50:36.684 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:50:36.684 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:50:36.684 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:50:36.684 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:50:36.684 +03:30 [DBG] Start key discovery request
2019-11-18 22:50:36.709 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:50:36.709 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:50:36.709 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:50:36.709 +03:30 [DBG] Start authorize request
2019-11-18 22:50:36.710 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:50:36.710 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:50:36.710 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:50:36.711 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:50:36.711 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"tamF26fpgKhwknMfNyfjF8mL68dfUm9NGVqDfuWrMcoTc","UiLocales":null,"Nonce":"tamF26fpgKhwknMfNyfjF8mL68dfUm9NGVqDfuWrMcoTc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"tamF26fpgKhwknMfNyfjF8mL68dfUm9NGVqDfuWrMcoTc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"tamF26fpgKhwknMfNyfjF8mL68dfUm9NGVqDfuWrMcoTc"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:50:36.762 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:50:36.762 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:50:36.762 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:50:36.763 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:50:36.892 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:50:36.892 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:50:36.897 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7GEg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KDlw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPK:00000006","TimeStamp":"2019-11-18T19:20:36.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:50:36.897 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"tamF26fpgKhwknMfNyfjF8mL68dfUm9NGVqDfuWrMcoTc","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 22:50:38.361 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:50:38.361 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:50:38.361 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:50:38.361 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:50:38.362 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:50:38.362 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:50:38.362 +03:30 [DBG] Start discovery request
2019-11-18 22:50:38.385 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:50:38.386 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:50:38.386 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:50:38.387 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:50:38.387 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:50:38.387 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:50:38.387 +03:30 [DBG] Start key discovery request
2019-11-18 22:58:41.079 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 22:58:41.080 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:58:41.080 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:58:41.081 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 22:58:41.082 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 22:58:41.082 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 22:58:41.082 +03:30 [DBG] Start discovery request
2019-11-18 22:58:41.259 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 22:58:41.259 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 22:58:41.259 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 22:58:41.259 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 22:58:41.260 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 22:58:41.260 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 22:58:41.260 +03:30 [DBG] Start key discovery request
2019-11-18 22:58:41.506 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 22:58:41.506 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 22:58:41.506 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 22:58:41.506 +03:30 [DBG] Start authorize request
2019-11-18 22:58:41.506 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:58:41.507 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 22:58:41.507 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 22:58:41.507 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 22:58:41.507 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"x8zDudpY1omlVn0KH666u6qa7y79N8aWIz9NM-61U63yY","UiLocales":null,"Nonce":"x8zDudpY1omlVn0KH666u6qa7y79N8aWIz9NM-61U63yY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"x8zDudpY1omlVn0KH666u6qa7y79N8aWIz9NM-61U63yY","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"x8zDudpY1omlVn0KH666u6qa7y79N8aWIz9NM-61U63yY"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 22:58:41.507 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 22:58:41.507 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 22:58:41.507 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 22:58:41.508 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 22:58:41.636 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 22:58:41.636 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 22:58:41.641 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****0wIg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****J5Gg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPL:00000003","TimeStamp":"2019-11-18T19:28:41.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 22:58:41.641 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"x8zDudpY1omlVn0KH666u6qa7y79N8aWIz9NM-61U63yY","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 23:16:37.656 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 23:16:37.667 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:37.667 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:37.667 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 23:16:37.668 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 23:16:37.668 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 23:16:37.668 +03:30 [DBG] Start discovery request
2019-11-18 23:16:37.699 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 23:16:37.699 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:37.700 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:37.700 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 23:16:37.700 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 23:16:37.700 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 23:16:37.700 +03:30 [DBG] Start key discovery request
2019-11-18 23:16:37.746 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 23:16:37.747 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 23:16:37.747 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 23:16:37.747 +03:30 [DBG] Start authorize request
2019-11-18 23:16:37.747 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 23:16:37.747 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 23:16:37.747 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 23:16:37.748 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 23:16:37.748 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"EK4V5KfypHwwyKLsyUnvPt7-DyDc9eAv4HzuPHwC1zKjG","UiLocales":null,"Nonce":"EK4V5KfypHwwyKLsyUnvPt7-DyDc9eAv4HzuPHwC1zKjG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"EK4V5KfypHwwyKLsyUnvPt7-DyDc9eAv4HzuPHwC1zKjG","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"EK4V5KfypHwwyKLsyUnvPt7-DyDc9eAv4HzuPHwC1zKjG"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 23:16:37.932 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 23:16:37.932 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 23:16:37.932 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 23:16:37.932 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 23:16:38.143 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 23:16:38.143 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 23:16:38.148 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ed1Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****adnQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPM:00000003","TimeStamp":"2019-11-18T19:46:38.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 23:16:38.149 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"EK4V5KfypHwwyKLsyUnvPt7-DyDc9eAv4HzuPHwC1zKjG","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 23:16:47.919 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 23:16:47.924 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:47.924 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:47.925 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 23:16:47.926 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 23:16:47.926 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 23:16:47.926 +03:30 [DBG] Start discovery request
2019-11-18 23:16:47.981 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 23:16:47.981 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:47.982 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:47.982 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 23:16:47.983 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 23:16:47.983 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 23:16:47.983 +03:30 [DBG] Start key discovery request
2019-11-18 23:16:48.034 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-18 23:16:48.034 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-18 23:16:48.035 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-18 23:16:48.035 +03:30 [DBG] Start authorize request
2019-11-18 23:16:48.035 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 23:16:48.035 +03:30 [DBG] Start authorize request protocol validation
2019-11-18 23:16:48.035 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-18 23:16:48.036 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-18 23:16:48.036 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"2ai7VAbjjYMG89Waf4MLbnU49uNFiQ_87f741zhvommjP","UiLocales":null,"Nonce":"2ai7VAbjjYMG89Waf4MLbnU49uNFiQ_87f741zhvommjP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ceadea4fd85c236758f077889eb36699","Raw":{"response_type":"id_token token","client_id":"angular","state":"2ai7VAbjjYMG89Waf4MLbnU49uNFiQ_87f741zhvommjP","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"2ai7VAbjjYMG89Waf4MLbnU49uNFiQ_87f741zhvommjP"},"$type":"AuthorizeRequestValidationLog"}
2019-11-18 23:16:48.102 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-18 23:16:48.102 +03:30 [DBG] Creating Implicit Flow response.
2019-11-18 23:16:48.103 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-18 23:16:48.103 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-18 23:16:48.204 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 23:16:48.205 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:48.205 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:48.205 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 23:16:48.206 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 23:16:48.206 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 23:16:48.207 +03:30 [DBG] Start discovery request
2019-11-18 23:16:48.290 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-18 23:16:48.291 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-18 23:16:48.300 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****phfA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qHAw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRC84EQ6IPM:00000006","TimeStamp":"2019-11-18T19:46:48.0000000Z","ProcessId":12896,"LocalIpAddress":"127.0.0.1:5944","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-18 23:16:48.300 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"2ai7VAbjjYMG89Waf4MLbnU49uNFiQ_87f741zhvommjP","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-18 23:16:48.439 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 23:16:48.439 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:48.439 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:48.439 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 23:16:48.440 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 23:16:48.440 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 23:16:48.441 +03:30 [DBG] Start key discovery request
2019-11-18 23:16:50.791 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-18 23:16:50.794 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:50.794 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:50.795 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-18 23:16:50.796 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-18 23:16:50.796 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-18 23:16:50.797 +03:30 [DBG] Start discovery request
2019-11-18 23:16:50.827 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-18 23:16:50.827 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-18 23:16:50.827 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-18 23:16:50.828 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-18 23:16:50.828 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-18 23:16:50.828 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-18 23:16:50.828 +03:30 [DBG] Start key discovery request
2019-11-19 00:20:54.594 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-19 00:20:54.708 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-19 00:20:54.745 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-19 00:20:54.746 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-19 00:20:54.747 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-19 00:20:54.747 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-19 00:20:54.748 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-19 00:20:54.748 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-19 00:27:12.021 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:27:12.039 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:12.040 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:12.159 +03:30 [DBG] Login Url: /Account/Login
2019-11-19 00:27:12.160 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-19 00:27:12.162 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-19 00:27:12.165 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-19 00:27:12.166 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-19 00:27:12.167 +03:30 [DBG] Error Url: /home/error
2019-11-19 00:27:12.168 +03:30 [DBG] Error Id Parameter: errorId
2019-11-19 00:27:12.197 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:27:13.037 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:27:13.040 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.043 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.046 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:27:13.209 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:27:13.209 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:27:13.211 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:27:13.215 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:27:13.222 +03:30 [DBG] Start discovery request
2019-11-19 00:27:13.222 +03:30 [DBG] Start discovery request
2019-11-19 00:27:13.452 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:27:13.455 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.459 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.460 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:27:13.465 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:27:13.467 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:27:13.475 +03:30 [DBG] Start key discovery request
2019-11-19 00:27:13.511 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:27:13.516 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.520 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.524 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:27:13.527 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:27:13.531 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:27:13.536 +03:30 [DBG] Start key discovery request
2019-11-19 00:27:13.543 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:27:13.545 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.548 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.550 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:27:13.551 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:27:13.552 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:27:13.557 +03:30 [DBG] Start discovery request
2019-11-19 00:27:13.570 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:27:13.576 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.578 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.582 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:27:13.584 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:27:13.584 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:27:13.587 +03:30 [DBG] Start key discovery request
2019-11-19 00:27:13.706 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:27:13.710 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.713 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.717 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:27:13.721 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:27:13.724 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:27:13.725 +03:30 [DBG] Start discovery request
2019-11-19 00:27:13.734 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:27:13.736 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.738 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.739 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:27:13.742 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:27:13.745 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:27:13.748 +03:30 [DBG] Start key discovery request
2019-11-19 00:27:13.872 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:27:13.875 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.878 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.879 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:27:13.884 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:27:13.888 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:27:13.891 +03:30 [DBG] Start discovery request
2019-11-19 00:27:13.899 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:27:13.901 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:13.904 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:13.905 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:27:13.907 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:27:13.910 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:27:13.912 +03:30 [DBG] Start key discovery request
2019-11-19 00:27:15.484 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 00:27:15.495 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 00:27:15.497 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 00:27:15.506 +03:30 [DBG] Start authorize request
2019-11-19 00:27:15.517 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:27:15.525 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 00:27:15.548 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:27:15.601 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 00:27:15.620 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb","UiLocales":null,"Nonce":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 00:27:15.702 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-19 00:27:15.707 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-19 00:27:15.708 +03:30 [INF] Showing consent: User has not yet consented
2019-11-19 00:27:16.315 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 00:27:16.315 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:27:16.320 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 00:27:16.325 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:27:19.981 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-19 00:27:20.060 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 00:27:20.061 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:27:20.066 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 00:27:20.191 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRCD7H142FO:00000003","TimeStamp":"2019-11-18T20:57:20.0000000Z","ProcessId":13992,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-19 00:27:20.236 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:27:20.245 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-19 00:27:20.248 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-19 00:27:20.250 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-19 00:27:20.261 +03:30 [DBG] Start authorize callback request
2019-11-19 00:27:20.268 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:27:20.269 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 00:27:20.273 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:27:20.276 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 00:27:20.279 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb","UiLocales":null,"Nonce":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 00:27:20.310 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-19 00:27:20.311 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-19 00:27:20.322 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-19 00:27:20.325 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-19 00:27:20.331 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:27:20.352 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 00:27:20.367 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 00:27:20.368 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:27:20.474 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 00:27:20.476 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 00:27:20.491 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****sxXA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vaDg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCD7H142FO:00000004","TimeStamp":"2019-11-18T20:57:20.0000000Z","ProcessId":13992,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 00:27:20.504 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"tW-k8uxhBXQdBEQAO-25Lu8BDrt1u4NjjT8xXnxl7Pdqb","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 00:27:24.918 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:27:24.922 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:24.925 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:24.926 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:27:24.928 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:27:24.929 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:27:24.933 +03:30 [DBG] Start discovery request
2019-11-19 00:27:24.947 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:27:24.948 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:27:24.952 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:27:24.957 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:27:24.959 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:27:24.960 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:27:24.965 +03:30 [DBG] Start key discovery request
2019-11-19 00:35:10.130 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:35:10.134 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:35:10.138 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:35:10.140 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:35:10.144 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:35:10.146 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:35:10.148 +03:30 [DBG] Start discovery request
2019-11-19 00:35:10.157 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:35:10.160 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:35:10.162 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:35:10.163 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:35:10.167 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:35:10.169 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:35:10.170 +03:30 [DBG] Start key discovery request
2019-11-19 00:35:10.192 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 00:35:10.196 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 00:35:10.199 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 00:35:10.201 +03:30 [DBG] Start authorize request
2019-11-19 00:35:10.202 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:35:10.209 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 00:35:10.210 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:35:10.212 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 00:35:10.214 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"4E4eJNh4rnnSU1bYd8jjlxmeMVjXy4zYvzvYrprKb8MIk","UiLocales":null,"Nonce":"4E4eJNh4rnnSU1bYd8jjlxmeMVjXy4zYvzvYrprKb8MIk","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"4E4eJNh4rnnSU1bYd8jjlxmeMVjXy4zYvzvYrprKb8MIk","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"4E4eJNh4rnnSU1bYd8jjlxmeMVjXy4zYvzvYrprKb8MIk"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 00:35:10.245 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 00:35:10.246 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 00:35:10.248 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 00:35:10.250 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:35:10.260 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 00:35:10.261 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 00:35:10.267 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****S7vQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****iKYw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCD7H142FQ:00000001","TimeStamp":"2019-11-18T21:05:10.0000000Z","ProcessId":13992,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 00:35:10.278 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"4E4eJNh4rnnSU1bYd8jjlxmeMVjXy4zYvzvYrprKb8MIk","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 00:35:18.833 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:35:18.836 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:35:18.840 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:35:18.842 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:35:18.844 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:35:18.848 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:35:18.850 +03:30 [DBG] Start discovery request
2019-11-19 00:35:18.863 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:35:18.865 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:35:18.868 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:35:18.872 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:35:18.874 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:35:18.875 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:35:18.879 +03:30 [DBG] Start key discovery request
2019-11-19 00:40:16.615 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:40:16.621 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:40:16.627 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:40:16.632 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:40:16.636 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:40:16.640 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:40:16.641 +03:30 [DBG] Start discovery request
2019-11-19 00:40:16.714 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:40:16.718 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:40:16.722 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:40:16.723 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:40:16.729 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:40:16.733 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:40:16.735 +03:30 [DBG] Start key discovery request
2019-11-19 00:40:16.777 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 00:40:16.785 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 00:40:16.787 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 00:40:16.788 +03:30 [DBG] Start authorize request
2019-11-19 00:40:16.790 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:40:16.795 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 00:40:16.804 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:40:16.806 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 00:40:16.809 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"O_14S-cr8B8Bhi5bIpFA0lxG3gjAq50ho3tzBkHz5ObMI","UiLocales":null,"Nonce":"O_14S-cr8B8Bhi5bIpFA0lxG3gjAq50ho3tzBkHz5ObMI","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"O_14S-cr8B8Bhi5bIpFA0lxG3gjAq50ho3tzBkHz5ObMI","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"O_14S-cr8B8Bhi5bIpFA0lxG3gjAq50ho3tzBkHz5ObMI"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 00:40:16.831 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 00:40:16.832 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 00:40:16.834 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 00:40:16.835 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:40:16.845 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 00:40:16.847 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 00:40:16.857 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CBPw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****fDvA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCD7H142FS:00000001","TimeStamp":"2019-11-18T21:10:16.0000000Z","ProcessId":13992,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 00:40:16.865 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"O_14S-cr8B8Bhi5bIpFA0lxG3gjAq50ho3tzBkHz5ObMI","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 00:40:23.329 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:40:23.332 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:40:23.335 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:40:23.336 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:40:23.340 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:40:23.345 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:40:23.347 +03:30 [DBG] Start discovery request
2019-11-19 00:40:23.355 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:40:23.358 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:40:23.359 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:40:23.361 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:40:23.365 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:40:23.367 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:40:23.370 +03:30 [DBG] Start key discovery request
2019-11-19 00:40:23.386 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 00:40:23.388 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 00:40:23.395 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 00:40:23.398 +03:30 [DBG] Start authorize request
2019-11-19 00:40:23.399 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:40:23.401 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 00:40:23.402 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 00:40:23.408 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 00:40:23.410 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"oTllokpwCiWguE4-rJrAzzT7oNpA-EzdcP44iy29qfZj5","UiLocales":null,"Nonce":"oTllokpwCiWguE4-rJrAzzT7oNpA-EzdcP44iy29qfZj5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"oTllokpwCiWguE4-rJrAzzT7oNpA-EzdcP44iy29qfZj5","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"oTllokpwCiWguE4-rJrAzzT7oNpA-EzdcP44iy29qfZj5"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 00:40:23.427 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 00:40:23.428 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 00:40:23.431 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 00:40:23.432 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 00:40:23.439 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 00:40:23.441 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 00:40:23.447 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****JlHQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YTGw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCD7H142FS:00000002","TimeStamp":"2019-11-18T21:10:23.0000000Z","ProcessId":13992,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 00:40:23.454 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"oTllokpwCiWguE4-rJrAzzT7oNpA-EzdcP44iy29qfZj5","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 00:40:27.207 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 00:40:27.209 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:40:27.212 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:40:27.213 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 00:40:27.215 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 00:40:27.216 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 00:40:27.221 +03:30 [DBG] Start discovery request
2019-11-19 00:40:27.230 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 00:40:27.231 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 00:40:27.235 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 00:40:27.236 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 00:40:27.240 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 00:40:27.243 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 00:40:27.246 +03:30 [DBG] Start key discovery request
2019-11-19 09:15:44.435 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-19 09:15:44.514 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-19 09:15:44.532 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-19 09:15:44.532 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-19 09:15:44.533 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-19 09:15:44.534 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-19 09:15:44.535 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-19 09:15:44.536 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-19 09:15:54.158 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 09:15:54.175 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 09:15:54.179 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 09:15:54.344 +03:30 [DBG] Login Url: /Account/Login
2019-11-19 09:15:54.345 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-19 09:15:54.348 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-19 09:15:54.350 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-19 09:15:54.352 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-19 09:15:54.355 +03:30 [DBG] Error Url: /home/error
2019-11-19 09:15:54.359 +03:30 [DBG] Error Id Parameter: errorId
2019-11-19 09:15:54.403 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 09:15:54.757 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 09:15:54.760 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 09:15:54.768 +03:30 [DBG] Start discovery request
2019-11-19 09:15:54.943 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 09:15:54.948 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 09:15:54.951 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 09:15:54.954 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 09:15:54.961 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 09:15:54.963 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 09:15:54.971 +03:30 [DBG] Start key discovery request
2019-11-19 09:15:55.966 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 09:15:55.978 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 09:15:55.980 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 09:15:55.990 +03:30 [DBG] Start authorize request
2019-11-19 09:15:56.007 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 09:15:56.019 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 09:15:56.049 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 09:15:56.120 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 09:15:56.145 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC","UiLocales":null,"Nonce":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 09:15:56.249 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-19 09:15:56.252 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-19 09:15:56.253 +03:30 [INF] Showing consent: User has not yet consented
2019-11-19 09:15:56.680 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 09:15:56.681 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 09:15:56.685 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 09:15:56.690 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 09:15:59.711 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-19 09:15:59.788 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 09:15:59.789 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 09:15:59.793 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 09:15:59.838 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRCMEUTLIAT:00000004","TimeStamp":"2019-11-19T05:45:59.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-19 09:15:59.873 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 09:15:59.884 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-19 09:15:59.887 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-19 09:15:59.889 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-19 09:15:59.901 +03:30 [DBG] Start authorize callback request
2019-11-19 09:15:59.907 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 09:15:59.909 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 09:15:59.912 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 09:15:59.916 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 09:15:59.918 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC","UiLocales":null,"Nonce":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 09:15:59.942 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-19 09:15:59.944 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-19 09:15:59.959 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-19 09:15:59.964 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-19 09:15:59.972 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 09:16:00.004 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 09:16:00.028 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 09:16:00.030 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 09:16:00.162 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 09:16:00.166 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 09:16:00.183 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****hgOw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ncNA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIAT:00000005","TimeStamp":"2019-11-19T05:46:00.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 09:16:00.193 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"M4FJxW4vkN51KCaBOmlKQ_iIE9QMsjlp3WSnLZ4nbAQoC","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 09:16:14.657 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 09:16:14.660 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 09:16:14.664 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 09:16:14.666 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 09:16:14.670 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 09:16:14.673 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 09:16:14.676 +03:30 [DBG] Start discovery request
2019-11-19 09:16:14.687 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 09:16:14.690 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 09:16:14.694 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 09:16:14.696 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 09:16:14.699 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 09:16:14.705 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 09:16:14.709 +03:30 [DBG] Start key discovery request
2019-11-19 14:38:09.038 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 14:38:09.051 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:38:09.055 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:38:09.057 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 14:38:09.062 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 14:38:09.065 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 14:38:09.070 +03:30 [DBG] Start discovery request
2019-11-19 14:38:09.118 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 14:38:09.137 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:38:09.141 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:38:09.143 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 14:38:09.148 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 14:38:09.159 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 14:38:09.161 +03:30 [DBG] Start key discovery request
2019-11-19 14:38:09.255 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 14:38:09.259 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 14:38:09.261 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 14:38:09.263 +03:30 [DBG] Start authorize request
2019-11-19 14:38:09.274 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 14:38:09.277 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 14:38:09.279 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 14:38:09.283 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 14:38:09.287 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"t4PMno3g8Ul3h_OSqoYPuBf2peknEojkNVhx2f0kYNKgJ","UiLocales":null,"Nonce":"t4PMno3g8Ul3h_OSqoYPuBf2peknEojkNVhx2f0kYNKgJ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"t4PMno3g8Ul3h_OSqoYPuBf2peknEojkNVhx2f0kYNKgJ","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"t4PMno3g8Ul3h_OSqoYPuBf2peknEojkNVhx2f0kYNKgJ"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 14:38:09.312 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 14:38:09.314 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 14:38:09.316 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 14:38:09.317 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 14:38:09.328 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 14:38:09.330 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 14:38:09.340 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****UAiw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****B3vQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIB1:00000001","TimeStamp":"2019-11-19T11:08:09.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 14:38:09.350 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"t4PMno3g8Ul3h_OSqoYPuBf2peknEojkNVhx2f0kYNKgJ","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 14:38:14.379 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 14:38:14.382 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:38:14.385 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:38:14.388 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 14:38:14.392 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 14:38:14.395 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 14:38:14.398 +03:30 [DBG] Start discovery request
2019-11-19 14:38:14.409 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 14:38:14.411 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:38:14.414 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:38:14.417 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 14:38:14.419 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 14:38:14.421 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 14:38:14.425 +03:30 [DBG] Start key discovery request
2019-11-19 14:38:14.441 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 14:38:14.444 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 14:38:14.447 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 14:38:14.449 +03:30 [DBG] Start authorize request
2019-11-19 14:38:14.450 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 14:38:14.452 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 14:38:14.456 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 14:38:14.461 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 14:38:14.463 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"bGcdQOxf1QoxikIdaRdJDEX3qS8PLZOW9SbK0vdIkRH0Q","UiLocales":null,"Nonce":"bGcdQOxf1QoxikIdaRdJDEX3qS8PLZOW9SbK0vdIkRH0Q","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"bGcdQOxf1QoxikIdaRdJDEX3qS8PLZOW9SbK0vdIkRH0Q","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"bGcdQOxf1QoxikIdaRdJDEX3qS8PLZOW9SbK0vdIkRH0Q"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 14:38:14.482 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 14:38:14.483 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 14:38:14.484 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 14:38:14.485 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 14:38:14.495 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 14:38:14.496 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 14:38:14.502 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AdKg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****e4fg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIB1:00000002","TimeStamp":"2019-11-19T11:08:14.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 14:38:14.513 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"bGcdQOxf1QoxikIdaRdJDEX3qS8PLZOW9SbK0vdIkRH0Q","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 14:38:17.410 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 14:38:17.414 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:38:17.418 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:38:17.420 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 14:38:17.423 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 14:38:17.427 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 14:38:17.432 +03:30 [DBG] Start discovery request
2019-11-19 14:38:17.445 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 14:38:17.448 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:38:17.452 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:38:17.453 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 14:38:17.458 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 14:38:17.461 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 14:38:17.463 +03:30 [DBG] Start key discovery request
2019-11-19 14:44:56.675 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 14:44:56.678 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:44:56.689 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:44:56.692 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 14:44:56.695 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 14:44:56.704 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 14:44:56.706 +03:30 [DBG] Start discovery request
2019-11-19 14:44:56.860 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 14:44:56.863 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 14:44:56.869 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 14:44:56.872 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 14:44:56.875 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 14:44:56.878 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 14:44:56.881 +03:30 [DBG] Start key discovery request
2019-11-19 14:44:56.914 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 14:44:56.918 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 14:44:56.919 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 14:44:56.923 +03:30 [DBG] Start authorize request
2019-11-19 14:44:56.924 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 14:44:56.928 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 14:44:56.931 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 14:44:56.936 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 14:44:56.940 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"ovPj1b7pC-jb5HmUkECGxxO2ZFyA2tjOKs9KJrNuyeXry","UiLocales":null,"Nonce":"ovPj1b7pC-jb5HmUkECGxxO2ZFyA2tjOKs9KJrNuyeXry","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"ovPj1b7pC-jb5HmUkECGxxO2ZFyA2tjOKs9KJrNuyeXry","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"ovPj1b7pC-jb5HmUkECGxxO2ZFyA2tjOKs9KJrNuyeXry"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 14:44:56.968 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 14:44:56.969 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 14:44:56.970 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 14:44:56.973 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 14:44:56.985 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 14:44:56.986 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 14:44:56.991 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****c7YQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gC-g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIB3:00000001","TimeStamp":"2019-11-19T11:14:56.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 14:44:57.000 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"ovPj1b7pC-jb5HmUkECGxxO2ZFyA2tjOKs9KJrNuyeXry","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 15:06:44.073 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 15:06:44.076 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:06:44.077 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:06:44.080 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 15:06:44.081 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 15:06:44.083 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 15:06:44.085 +03:30 [DBG] Start discovery request
2019-11-19 15:06:44.097 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 15:06:44.100 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:06:44.102 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:06:44.103 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 15:06:44.105 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 15:06:44.107 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 15:06:44.108 +03:30 [DBG] Start key discovery request
2019-11-19 15:06:44.123 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 15:06:44.125 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 15:06:44.128 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 15:06:44.129 +03:30 [DBG] Start authorize request
2019-11-19 15:06:44.130 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:06:44.131 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 15:06:44.132 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 15:06:44.133 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 15:06:44.135 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"a0rlULoSdyQDi2nOtm_aUQ2oEAPhUtRhw-VzOqgLSQOf2","UiLocales":null,"Nonce":"a0rlULoSdyQDi2nOtm_aUQ2oEAPhUtRhw-VzOqgLSQOf2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"a0rlULoSdyQDi2nOtm_aUQ2oEAPhUtRhw-VzOqgLSQOf2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"a0rlULoSdyQDi2nOtm_aUQ2oEAPhUtRhw-VzOqgLSQOf2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 15:06:44.151 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 15:06:44.152 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 15:06:44.153 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 15:06:44.154 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:06:44.162 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 15:06:44.163 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 15:06:44.168 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Sn0g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gVgg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIB5:00000001","TimeStamp":"2019-11-19T11:36:44.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 15:06:44.175 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"a0rlULoSdyQDi2nOtm_aUQ2oEAPhUtRhw-VzOqgLSQOf2","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 15:06:46.663 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 15:06:46.665 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:06:46.666 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:06:46.668 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 15:06:46.669 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 15:06:46.670 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 15:06:46.671 +03:30 [DBG] Start discovery request
2019-11-19 15:06:46.685 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 15:06:46.686 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:06:46.688 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:06:46.689 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 15:06:46.690 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 15:06:46.692 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 15:06:46.693 +03:30 [DBG] Start key discovery request
2019-11-19 15:14:26.071 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 15:14:26.083 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:14:26.085 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:14:26.087 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 15:14:26.090 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 15:14:26.093 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 15:14:26.097 +03:30 [DBG] Start discovery request
2019-11-19 15:14:26.216 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 15:14:26.253 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:14:26.256 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:14:26.268 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 15:14:26.270 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 15:14:26.271 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 15:14:26.272 +03:30 [DBG] Start key discovery request
2019-11-19 15:14:26.565 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 15:14:26.566 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 15:14:26.567 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 15:14:26.568 +03:30 [DBG] Start authorize request
2019-11-19 15:14:26.569 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:14:26.570 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 15:14:26.570 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 15:14:26.572 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 15:14:26.573 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"5xYsfusFaX4ATqE2uPjO1TR0Vr8mqEh5TNL0rcDOZezsQ","UiLocales":null,"Nonce":"5xYsfusFaX4ATqE2uPjO1TR0Vr8mqEh5TNL0rcDOZezsQ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"5xYsfusFaX4ATqE2uPjO1TR0Vr8mqEh5TNL0rcDOZezsQ","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"5xYsfusFaX4ATqE2uPjO1TR0Vr8mqEh5TNL0rcDOZezsQ"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 15:14:26.585 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 15:14:26.587 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 15:14:26.587 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 15:14:26.589 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:14:26.603 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 15:14:26.605 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 15:14:26.614 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3dQQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****azGQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIB7:00000001","TimeStamp":"2019-11-19T11:44:26.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 15:14:26.621 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"5xYsfusFaX4ATqE2uPjO1TR0Vr8mqEh5TNL0rcDOZezsQ","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 15:17:55.113 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 15:17:55.116 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:17:55.117 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:17:55.118 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 15:17:55.120 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 15:17:55.122 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 15:17:55.123 +03:30 [DBG] Start discovery request
2019-11-19 15:17:55.140 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 15:17:55.142 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:17:55.144 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:17:55.145 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 15:17:55.147 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 15:17:55.149 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 15:17:55.150 +03:30 [DBG] Start key discovery request
2019-11-19 15:17:55.299 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 15:17:55.305 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 15:17:55.306 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 15:17:55.307 +03:30 [DBG] Start authorize request
2019-11-19 15:17:55.308 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:17:55.311 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 15:17:55.313 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 15:17:55.316 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 15:17:55.318 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"P-gOc2AFG9orXUDi3I0FHf50nANV-JXmfssd1q3gUAxbn","UiLocales":null,"Nonce":"P-gOc2AFG9orXUDi3I0FHf50nANV-JXmfssd1q3gUAxbn","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"P-gOc2AFG9orXUDi3I0FHf50nANV-JXmfssd1q3gUAxbn","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"P-gOc2AFG9orXUDi3I0FHf50nANV-JXmfssd1q3gUAxbn"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 15:17:55.331 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 15:17:55.332 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 15:17:55.333 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 15:17:55.333 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:17:55.340 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 15:17:55.340 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 15:17:55.348 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****xOHw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****El1w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIB9:00000001","TimeStamp":"2019-11-19T11:47:55.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 15:17:55.356 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"P-gOc2AFG9orXUDi3I0FHf50nANV-JXmfssd1q3gUAxbn","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 15:18:08.849 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 15:18:08.851 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:18:08.852 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:18:08.853 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 15:18:08.855 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 15:18:08.856 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 15:18:08.858 +03:30 [DBG] Start discovery request
2019-11-19 15:18:08.876 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 15:18:08.877 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:18:08.879 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:18:08.879 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 15:18:08.881 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 15:18:08.883 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 15:18:08.884 +03:30 [DBG] Start key discovery request
2019-11-19 15:24:17.920 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 15:24:17.924 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:24:17.926 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:24:17.927 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 15:24:17.930 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 15:24:17.931 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 15:24:17.932 +03:30 [DBG] Start discovery request
2019-11-19 15:24:17.948 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 15:24:17.949 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:24:17.950 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:24:17.951 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 15:24:17.955 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 15:24:17.957 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 15:24:17.958 +03:30 [DBG] Start key discovery request
2019-11-19 15:24:18.080 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 15:24:18.082 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 15:24:18.084 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 15:24:18.085 +03:30 [DBG] Start authorize request
2019-11-19 15:24:18.086 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:24:18.087 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 15:24:18.088 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 15:24:18.090 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 15:24:18.091 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"sZXEEabEQWjkGjZR-9N0vthYDtCkwMm-I6xI--_RUx4SO","UiLocales":null,"Nonce":"sZXEEabEQWjkGjZR-9N0vthYDtCkwMm-I6xI--_RUx4SO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"sZXEEabEQWjkGjZR-9N0vthYDtCkwMm-I6xI--_RUx4SO","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"sZXEEabEQWjkGjZR-9N0vthYDtCkwMm-I6xI--_RUx4SO"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 15:24:18.106 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 15:24:18.107 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 15:24:18.107 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 15:24:18.108 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 15:24:18.115 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 15:24:18.116 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 15:24:18.122 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-N4Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****InhQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIBB:00000001","TimeStamp":"2019-11-19T11:54:18.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 15:24:18.127 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"sZXEEabEQWjkGjZR-9N0vthYDtCkwMm-I6xI--_RUx4SO","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 15:24:23.242 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 15:24:23.249 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:24:23.251 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:24:23.253 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 15:24:23.259 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 15:24:23.260 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 15:24:23.261 +03:30 [DBG] Start discovery request
2019-11-19 15:24:23.273 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 15:24:23.276 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 15:24:23.277 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 15:24:23.278 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 15:24:23.279 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 15:24:23.280 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 15:24:23.281 +03:30 [DBG] Start key discovery request
2019-11-19 16:11:31.156 +03:30 [WRN] Heartbeat took longer than ""00:00:01"" at ""2019-11-19T12:41:28.7533936+00:00"".
2019-11-19 16:57:46.930 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 16:57:46.942 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 16:57:46.944 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 16:57:46.946 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 16:57:46.952 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 16:57:46.955 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 16:57:46.973 +03:30 [DBG] Start discovery request
2019-11-19 16:57:47.128 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 16:57:47.132 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 16:57:47.137 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 16:57:47.138 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 16:57:47.146 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 16:57:47.151 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 16:57:47.164 +03:30 [DBG] Start key discovery request
2019-11-19 16:57:47.678 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 16:57:47.680 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 16:57:47.682 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 16:57:47.682 +03:30 [DBG] Start authorize request
2019-11-19 16:57:47.683 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 16:57:47.685 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 16:57:47.686 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 16:57:47.687 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 16:57:47.689 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"LBkQ7EauW1I5RcwpN61QGergennaCo5HCAs7zWPEBTUue","UiLocales":null,"Nonce":"LBkQ7EauW1I5RcwpN61QGergennaCo5HCAs7zWPEBTUue","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"LBkQ7EauW1I5RcwpN61QGergennaCo5HCAs7zWPEBTUue","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"LBkQ7EauW1I5RcwpN61QGergennaCo5HCAs7zWPEBTUue"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 16:57:47.700 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 16:57:47.702 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 16:57:47.703 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 16:57:47.705 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 16:57:47.713 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 16:57:47.714 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 16:57:47.721 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1QLQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TW-A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRCMEUTLIBD:00000001","TimeStamp":"2019-11-19T13:27:47.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 16:57:47.728 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"LBkQ7EauW1I5RcwpN61QGergennaCo5HCAs7zWPEBTUue","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 17:15:15.688 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 17:15:23.711 +03:30 [DBG] CORS request made for path: /grants/Revoke from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-19 17:15:23.731 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","Category":"Grants","Name":"Grants revoked","EventType":"Information","Id":4002,"Message":null,"ActivityId":"0HLRCMEUTLIBK:00000003","TimeStamp":"2019-11-19T13:45:23.0000000Z","ProcessId":9208,"LocalIpAddress":"127.0.0.1:5000","RemoteIpAddress":"127.0.0.1","$type":"GrantsRevokedEvent"}
2019-11-19 17:15:45.264 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-19 22:47:50.617 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-19 22:47:50.664 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-19 22:47:50.673 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-19 22:47:50.674 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-19 22:47:50.674 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-19 22:47:50.675 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-19 22:47:50.675 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-19 22:47:50.675 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-19 22:49:02.695 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2019-11-19 22:49:02.778 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-19 22:49:02.820 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-19 22:49:02.887 +03:30 [DBG] Login Url: /Account/Login
2019-11-19 22:49:02.890 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-19 22:49:02.892 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-19 22:49:02.894 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-19 22:49:02.896 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-19 22:49:02.902 +03:30 [DBG] Error Url: /home/error
2019-11-19 22:49:02.904 +03:30 [DBG] Error Id Parameter: errorId
2019-11-19 22:49:02.953 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 22:49:03.263 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 22:49:03.377 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 22:49:03.403 +03:30 [DBG] Start discovery request
2019-11-19 22:49:03.529 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2019-11-19 22:49:03.531 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-19 22:49:03.535 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-19 22:49:03.538 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 22:49:03.548 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 22:49:03.550 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 22:49:03.561 +03:30 [DBG] Start key discovery request
2019-11-19 22:49:03.614 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 22:49:03.642 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 22:49:03.645 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 22:49:03.657 +03:30 [DBG] Start authorize request
2019-11-19 22:49:03.675 +03:30 [DBG] No user present in authorize request
2019-11-19 22:49:03.692 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:03.724 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:03.798 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:03.829 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","UiLocales":null,"Nonce":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 22:49:03.894 +03:30 [INF] Showing login: User is not authenticated
2019-11-19 22:49:04.069 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:04.094 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:04.111 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:04.122 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:10.747 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-19 22:49:10.830 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:10.834 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:10.839 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:11.665 +03:30 [DBG] Augmenting SignInContext
2019-11-19 22:49:11.670 +03:30 [DBG] Adding idp claim with value: local
2019-11-19 22:49:11.670 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-19 22:49:11.672 +03:30 [DBG] Adding auth_time claim with value: 1574191151
2019-11-19 22:49:11.690 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-19 22:49:11.710 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRD4LB3QJDG:00000005","TimeStamp":"2019-11-19T19:19:11.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-19 22:49:11.725 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:11.762 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-19 22:49:11.767 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-19 22:49:11.769 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-19 22:49:11.779 +03:30 [DBG] Start authorize callback request
2019-11-19 22:49:11.786 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:49:11.787 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:11.790 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:11.792 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:11.796 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","UiLocales":null,"Nonce":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8c16b89a044691451fb4962db5570b5b","Raw":{"response_type":"id_token token","client_id":"angular","state":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 22:49:11.854 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-19 22:49:11.858 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-19 22:49:11.860 +03:30 [INF] Showing consent: User has not yet consented
2019-11-19 22:49:11.933 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:11.933 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:11.938 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:11.940 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:13.604 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-19 22:49:13.624 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:13.625 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:13.631 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:13.637 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRD4LB3QJDG:00000009","TimeStamp":"2019-11-19T19:19:13.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-19 22:49:13.664 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:13.674 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-19 22:49:13.676 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-19 22:49:13.680 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-19 22:49:13.682 +03:30 [DBG] Start authorize callback request
2019-11-19 22:49:13.691 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:49:13.692 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:13.695 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:13.699 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:13.702 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","UiLocales":null,"Nonce":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8c16b89a044691451fb4962db5570b5b","Raw":{"response_type":"id_token token","client_id":"angular","state":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 22:49:13.724 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-19 22:49:13.725 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-19 22:49:13.734 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-19 22:49:13.740 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-19 22:49:13.746 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:49:13.764 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 22:49:13.779 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 22:49:13.781 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:49:13.873 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 22:49:13.875 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 22:49:13.890 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Zdcg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****FzBw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRD4LB3QJDG:0000000A","TimeStamp":"2019-11-19T19:19:13.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 22:49:13.905 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"8yW0OGZDRlrOMj_7R4KqZ4JxoICFGQNlPlu1ugYQeWut3","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 22:49:13.931 +03:30 [DBG] Augmenting SignInContext
2019-11-19 22:49:13.932 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-19 22:49:45.635 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2019-11-19 22:49:45.638 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-19 22:49:45.641 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-19 22:49:45.644 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 22:49:45.655 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 22:49:45.660 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 22:49:45.667 +03:30 [DBG] Start discovery request
2019-11-19 22:49:45.732 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2019-11-19 22:49:45.736 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-19 22:49:45.742 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-19 22:49:45.746 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 22:49:45.748 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 22:49:45.753 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 22:49:45.759 +03:30 [DBG] Start key discovery request
2019-11-19 22:49:45.828 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 22:49:45.834 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 22:49:45.837 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 22:49:45.843 +03:30 [DBG] Start authorize request
2019-11-19 22:49:45.863 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:49:45.877 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:49:45.879 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:49:45.885 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:49:45.889 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"WoLS5mPcte7vwzc3w4qX78RCJb0aUddq0LGCtYo9DYJ0d","UiLocales":null,"Nonce":"WoLS5mPcte7vwzc3w4qX78RCJb0aUddq0LGCtYo9DYJ0d","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"8c16b89a044691451fb4962db5570b5b","Raw":{"response_type":"id_token token","client_id":"angular","state":"WoLS5mPcte7vwzc3w4qX78RCJb0aUddq0LGCtYo9DYJ0d","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"WoLS5mPcte7vwzc3w4qX78RCJb0aUddq0LGCtYo9DYJ0d"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 22:49:46.012 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 22:49:46.014 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 22:49:46.018 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 22:49:46.020 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:49:46.031 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 22:49:46.037 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 22:49:46.046 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****RQuQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8alA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRD4LB3QJDG:0000000B","TimeStamp":"2019-11-19T19:19:46.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 22:49:46.062 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"WoLS5mPcte7vwzc3w4qX78RCJb0aUddq0LGCtYo9DYJ0d","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 22:51:12.942 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 22:51:12.946 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 22:51:12.956 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 22:51:12.961 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 22:51:12.964 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 22:51:12.991 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 22:51:12.998 +03:30 [DBG] Start discovery request
2019-11-19 22:51:13.053 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 22:51:13.066 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 22:51:13.070 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 22:51:13.072 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 22:51:13.084 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 22:51:13.108 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 22:51:13.116 +03:30 [DBG] Start key discovery request
2019-11-19 22:51:13.145 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 22:51:13.151 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 22:51:13.154 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 22:51:13.160 +03:30 [DBG] Start authorize request
2019-11-19 22:51:13.162 +03:30 [DBG] No user present in authorize request
2019-11-19 22:51:13.163 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:51:13.167 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:51:13.170 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:51:13.188 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh","UiLocales":null,"Nonce":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 22:51:13.244 +03:30 [INF] Showing login: User is not authenticated
2019-11-19 22:51:13.262 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:51:13.262 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:51:13.266 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:51:13.270 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:51:18.403 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-19 22:51:18.412 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:51:18.413 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:51:18.416 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:51:18.438 +03:30 [DBG] Augmenting SignInContext
2019-11-19 22:51:18.439 +03:30 [DBG] Adding idp claim with value: local
2019-11-19 22:51:18.441 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-19 22:51:18.445 +03:30 [DBG] Adding auth_time claim with value: 1574191278
2019-11-19 22:51:18.448 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-19 22:51:18.452 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRD4LB3QJDK:00000003","TimeStamp":"2019-11-19T19:21:18.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-19 22:51:18.463 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:51:18.471 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-19 22:51:18.472 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-19 22:51:18.476 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-19 22:51:18.479 +03:30 [DBG] Start authorize callback request
2019-11-19 22:51:18.480 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:51:18.483 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:51:18.486 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:51:18.488 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:51:18.491 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh","UiLocales":null,"Nonce":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f93fe6be3d64c6e0452958f4d34ea64d","Raw":{"response_type":"id_token token","client_id":"angular","state":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 22:51:18.513 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 22:51:18.515 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 22:51:18.516 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 22:51:18.517 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:51:18.529 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 22:51:18.530 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 22:51:18.538 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Pqjg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IIGg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRD4LB3QJDK:00000004","TimeStamp":"2019-11-19T19:21:18.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 22:51:18.548 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"gY-Zsz-pfNlAHIWrsm1cBh86PNk_7ynj0mG0x9waCOqQh","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 22:51:18.555 +03:30 [DBG] Augmenting SignInContext
2019-11-19 22:51:18.557 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-19 22:53:46.562 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 22:53:46.564 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 22:53:46.569 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 22:53:46.574 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 22:53:46.578 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 22:53:46.581 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 22:53:46.583 +03:30 [DBG] Start discovery request
2019-11-19 22:53:46.636 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 22:53:46.641 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 22:53:46.684 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 22:53:46.685 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 22:53:46.689 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 22:53:46.692 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 22:53:46.698 +03:30 [DBG] Start key discovery request
2019-11-19 22:53:46.724 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 22:53:46.732 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 22:53:46.737 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 22:53:46.753 +03:30 [DBG] Start authorize request
2019-11-19 22:53:46.761 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:53:46.763 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 22:53:46.767 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 22:53:46.777 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 22:53:46.780 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"8fuk2RAEtIfwqnbIPwm-a1rkHIHKpnhxj_p-VnRWI-hoG","UiLocales":null,"Nonce":"8fuk2RAEtIfwqnbIPwm-a1rkHIHKpnhxj_p-VnRWI-hoG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f93fe6be3d64c6e0452958f4d34ea64d","Raw":{"response_type":"id_token token","client_id":"angular","state":"8fuk2RAEtIfwqnbIPwm-a1rkHIHKpnhxj_p-VnRWI-hoG","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"8fuk2RAEtIfwqnbIPwm-a1rkHIHKpnhxj_p-VnRWI-hoG"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 22:53:46.799 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 22:53:46.802 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 22:53:46.803 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 22:53:46.804 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 22:53:46.833 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 22:53:46.835 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 22:53:46.843 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****xFfw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vNDg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRD4LB3QJDM:00000001","TimeStamp":"2019-11-19T19:23:46.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 22:53:46.856 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"8fuk2RAEtIfwqnbIPwm-a1rkHIHKpnhxj_p-VnRWI-hoG","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-19 23:04:21.717 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-19 23:04:21.720 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 23:04:21.721 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 23:04:21.722 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-19 23:04:21.732 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-19 23:04:21.734 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-19 23:04:21.735 +03:30 [DBG] Start discovery request
2019-11-19 23:04:21.787 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-19 23:04:21.800 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-19 23:04:21.803 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-19 23:04:21.804 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-19 23:04:21.807 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-19 23:04:21.811 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-19 23:04:21.817 +03:30 [DBG] Start key discovery request
2019-11-19 23:04:21.973 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-19 23:04:21.974 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-19 23:04:21.977 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-19 23:04:21.978 +03:30 [DBG] Start authorize request
2019-11-19 23:04:21.979 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 23:04:21.980 +03:30 [DBG] Start authorize request protocol validation
2019-11-19 23:04:21.981 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-19 23:04:21.982 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-19 23:04:21.984 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"ewhW32p4iQNhUPioxOozKhqdgAIodpi01JjpuaSxeesS1","UiLocales":null,"Nonce":"ewhW32p4iQNhUPioxOozKhqdgAIodpi01JjpuaSxeesS1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb7ef8bbb62dcc132bb0292dee1c02bc","Raw":{"response_type":"id_token token","client_id":"angular","state":"ewhW32p4iQNhUPioxOozKhqdgAIodpi01JjpuaSxeesS1","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"ewhW32p4iQNhUPioxOozKhqdgAIodpi01JjpuaSxeesS1"},"$type":"AuthorizeRequestValidationLog"}
2019-11-19 23:04:21.995 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-19 23:04:21.996 +03:30 [DBG] Creating Implicit Flow response.
2019-11-19 23:04:21.996 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-19 23:04:21.997 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-19 23:04:22.019 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-19 23:04:22.020 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-19 23:04:22.027 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****FmAA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****GkpA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRD4LB3QJDP:00000001","TimeStamp":"2019-11-19T19:34:22.0000000Z","ProcessId":15984,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-19 23:04:22.032 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"ewhW32p4iQNhUPioxOozKhqdgAIodpi01JjpuaSxeesS1","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-20 19:22:28.171 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-20 19:22:28.298 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-20 19:22:28.311 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-20 19:22:28.311 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-20 19:22:28.312 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-20 19:22:28.312 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-20 19:22:28.313 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-20 19:22:28.314 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-20 19:25:11.126 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-20 19:25:11.198 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:11.199 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:11.821 +03:30 [DBG] Login Url: /Account/Login
2019-11-20 19:25:11.822 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-20 19:25:11.822 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-20 19:25:11.823 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-20 19:25:11.824 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-20 19:25:11.824 +03:30 [DBG] Error Url: /home/error
2019-11-20 19:25:11.825 +03:30 [DBG] Error Id Parameter: errorId
2019-11-20 19:25:11.847 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-20 19:25:14.322 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-20 19:25:14.323 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-20 19:25:14.327 +03:30 [DBG] Start discovery request
2019-11-20 19:25:14.776 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-20 19:25:14.778 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.779 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-20 19:25:14.779 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.780 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.781 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-20 19:25:14.782 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.784 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-20 19:25:14.784 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-20 19:25:14.785 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-20 19:25:14.787 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-20 19:25:14.788 +03:30 [DBG] Start discovery request
2019-11-20 19:25:14.789 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-20 19:25:14.796 +03:30 [DBG] Start key discovery request
2019-11-20 19:25:14.797 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-20 19:25:14.798 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.801 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.802 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-20 19:25:14.803 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-20 19:25:14.804 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-20 19:25:14.805 +03:30 [DBG] Start discovery request
2019-11-20 19:25:14.811 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-20 19:25:14.814 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.815 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.822 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-20 19:25:14.825 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-20 19:25:14.827 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-20 19:25:14.828 +03:30 [DBG] Start discovery request
2019-11-20 19:25:14.833 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-20 19:25:14.837 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.840 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.841 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-20 19:25:14.842 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-20 19:25:14.843 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-20 19:25:14.844 +03:30 [DBG] Start discovery request
2019-11-20 19:25:14.893 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-20 19:25:14.893 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-20 19:25:14.896 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.897 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.899 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.904 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-20 19:25:14.907 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.910 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-20 19:25:14.915 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-20 19:25:14.917 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-20 19:25:14.920 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-20 19:25:14.921 +03:30 [DBG] Start key discovery request
2019-11-20 19:25:14.922 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-20 19:25:14.923 +03:30 [DBG] Start discovery request
2019-11-20 19:25:14.928 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-20 19:25:14.928 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-20 19:25:14.933 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.933 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.936 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-20 19:25:14.938 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-20 19:25:14.938 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-20 19:25:14.940 +03:30 [DBG] Start key discovery request
2019-11-20 19:25:14.944 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-20 19:25:14.960 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.963 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.964 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-20 19:25:14.967 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-20 19:25:14.967 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-20 19:25:14.969 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-20 19:25:14.970 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-20 19:25:14.971 +03:30 [DBG] Start key discovery request
2019-11-20 19:25:14.977 +03:30 [DBG] Start authorize request
2019-11-20 19:25:14.977 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-20 19:25:14.978 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.979 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.980 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-20 19:25:14.981 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-20 19:25:14.982 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-20 19:25:14.982 +03:30 [DBG] Start key discovery request
2019-11-20 19:25:14.989 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-20 19:25:14.990 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:14.991 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:14.992 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-20 19:25:14.993 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-20 19:25:14.994 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-20 19:25:14.995 +03:30 [DBG] No user present in authorize request
2019-11-20 19:25:14.995 +03:30 [DBG] Start key discovery request
2019-11-20 19:25:15.006 +03:30 [DBG] Start authorize request protocol validation
2019-11-20 19:25:15.044 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-20 19:25:15.100 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-20 19:25:15.117 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"oH-j12lUf0-CMhmuJoKrWdJiqLCC3zj6ODK-ZxYsGbUKP","UiLocales":null,"Nonce":"oH-j12lUf0-CMhmuJoKrWdJiqLCC3zj6ODK-ZxYsGbUKP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"oH-j12lUf0-CMhmuJoKrWdJiqLCC3zj6ODK-ZxYsGbUKP","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"oH-j12lUf0-CMhmuJoKrWdJiqLCC3zj6ODK-ZxYsGbUKP"},"$type":"AuthorizeRequestValidationLog"}
2019-11-20 19:25:15.209 +03:30 [INF] Showing login: User is not authenticated
2019-11-20 19:25:16.124 +03:30 [DBG] Start authorize request protocol validation
2019-11-20 19:25:16.125 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-20 19:25:16.127 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-20 19:25:16.131 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-20 19:25:22.539 +03:30 [DBG] Start authorize request protocol validation
2019-11-20 19:25:22.549 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-20 19:25:22.553 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-20 19:25:22.555 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-20 19:25:37.404 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-20 19:25:37.405 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:37.406 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:37.408 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-20 19:25:37.410 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-20 19:25:37.412 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-20 19:25:37.414 +03:30 [DBG] Start discovery request
2019-11-20 19:25:37.468 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-20 19:25:37.477 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-20 19:25:37.479 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-20 19:25:37.486 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-20 19:25:37.525 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-20 19:25:37.557 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-20 19:25:37.559 +03:30 [DBG] Start key discovery request
2019-11-20 19:25:37.616 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-20 19:25:37.617 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-20 19:25:37.661 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-20 19:25:37.685 +03:30 [DBG] Start authorize request
2019-11-20 19:25:37.702 +03:30 [DBG] No user present in authorize request
2019-11-20 19:25:37.703 +03:30 [DBG] Start authorize request protocol validation
2019-11-20 19:25:37.704 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-20 19:25:37.706 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-20 19:25:37.708 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"TbBZ93nQkEEIqk8BmuxOkXzX3Yqo64bckxtDwfNXWvWy5","UiLocales":null,"Nonce":"TbBZ93nQkEEIqk8BmuxOkXzX3Yqo64bckxtDwfNXWvWy5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"TbBZ93nQkEEIqk8BmuxOkXzX3Yqo64bckxtDwfNXWvWy5","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"TbBZ93nQkEEIqk8BmuxOkXzX3Yqo64bckxtDwfNXWvWy5"},"$type":"AuthorizeRequestValidationLog"}
2019-11-20 19:25:37.720 +03:30 [INF] Showing login: User is not authenticated
2019-11-20 19:25:37.727 +03:30 [DBG] Start authorize request protocol validation
2019-11-20 19:25:37.728 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-20 19:25:37.729 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-20 19:25:37.732 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-21 23:04:39.517 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.OperationCanceledException: The operation was canceled.
   at System.Threading.CancellationToken.ThrowOperationCanceledException()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(String userId, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(String userId)
   at Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SecurityStampValidator`1.ValidateAsync(CookieValidatePrincipalContext context)
   at Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-21 23:04:40.394 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.OperationCanceledException: The operation was canceled.
   at System.Threading.CancellationToken.ThrowOperationCanceledException()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(String userId, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(String userId)
   at Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SecurityStampValidator`1.ValidateAsync(CookieValidatePrincipalContext context)
   at Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-28 16:13:19.248 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 16:13:19.395 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 16:13:19.443 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 16:13:19.443 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 16:13:19.443 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 16:13:19.443 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 16:13:19.443 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 16:13:19.443 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 16:13:21.967 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 16:13:21.970 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 16:13:21.970 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 16:13:21.970 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 16:13:21.971 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 16:13:21.971 +03:30 [DBG] Error Url: /home/error
2019-11-28 16:13:21.971 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 16:13:33.739 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-11-28 16:15:21.533 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 16:15:56.105 +03:30 [ERR] An error occurred using the connection to database 'Security' on server '192.168.195.17,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
2019-11-28 16:15:56.876 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
2019-11-28 16:15:56.896 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
2019-11-28 16:16:33.152 +03:30 [ERR] An exception occurred while calculating the database error page content. Skipping display of the database error page.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
2019-11-28 16:16:33.172 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseSqlServer' call. ---> System.Data.SqlClient.SqlException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   --- End of inner exception stack trace ---
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(String userName)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 107
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-28 16:17:00.453 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 16:17:30.677 +03:30 [DBG] Augmenting SignInContext
2019-11-28 16:17:30.682 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 16:17:30.682 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 16:17:30.683 +03:30 [DBG] Adding auth_time claim with value: 1574945250
2019-11-28 16:17:30.704 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 16:17:30.913 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK026C86RM:00000002","TimeStamp":"2019-11-28T12:47:30.0000000Z","ProcessId":15656,"LocalIpAddress":"127.0.0.1:40083","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-28 16:24:39.856 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 16:24:39.908 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 16:24:39.918 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 16:24:39.918 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 16:24:39.918 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 16:24:39.918 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 16:24:39.918 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 16:24:39.918 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 16:24:41.018 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2019-11-28 16:24:41.053 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:24:41.053 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:24:41.212 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 16:24:41.212 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 16:24:41.212 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 16:24:41.213 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 16:24:41.213 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 16:24:41.213 +03:30 [DBG] Error Url: /home/error
2019-11-28 16:24:41.213 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 16:24:41.254 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:24:41.916 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:24:41.916 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:24:41.956 +03:30 [DBG] Start discovery request
2019-11-28 16:24:42.261 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2019-11-28 16:24:42.261 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:24:42.261 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:24:42.264 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:24:42.265 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:24:42.265 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:24:42.278 +03:30 [DBG] Start key discovery request
2019-11-28 16:24:42.329 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:24:42.344 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:24:42.344 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:24:42.350 +03:30 [DBG] Start authorize request
2019-11-28 16:24:42.424 +03:30 [DBG] No user present in authorize request
2019-11-28 16:24:42.445 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:24:42.472 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:24:42.571 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:24:42.589 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","UiLocales":null,"Nonce":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:24:42.629 +03:30 [INF] Showing login: User is not authenticated
2019-11-28 16:24:42.758 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:24:42.759 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:24:42.759 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:24:42.763 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:24:50.815 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 16:24:50.870 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:24:50.871 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:24:50.871 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:24:51.671 +03:30 [DBG] Augmenting SignInContext
2019-11-28 16:24:51.674 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 16:24:51.674 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 16:24:51.675 +03:30 [DBG] Adding auth_time claim with value: 1574945691
2019-11-28 16:24:51.688 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 16:24:51.821 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK08GV2VCB:00000005","TimeStamp":"2019-11-28T12:54:51.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-28 16:24:51.823 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:24:51.858 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 16:24:51.860 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 16:24:51.860 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 16:24:51.870 +03:30 [DBG] Start authorize callback request
2019-11-28 16:24:51.874 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:24:51.874 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:24:51.874 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:24:51.874 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:24:51.875 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","UiLocales":null,"Nonce":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:24:51.944 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 16:24:51.944 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 16:24:51.944 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 16:24:51.990 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:24:51.990 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:24:51.991 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:24:51.991 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:25:01.056 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 16:25:01.102 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:25:01.102 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:25:01.103 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:25:01.104 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK08GV2VCD:00000003","TimeStamp":"2019-11-28T12:55:01.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-28 16:25:01.138 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:25:01.148 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 16:25:01.148 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 16:25:01.149 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 16:25:01.149 +03:30 [DBG] Start authorize callback request
2019-11-28 16:25:01.153 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:25:01.154 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:25:01.154 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:25:01.154 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:25:01.154 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","UiLocales":null,"Nonce":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:25:01.158 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 16:25:01.158 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 16:25:01.168 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 16:25:01.170 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 16:25:01.174 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:25:01.193 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:25:01.216 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:25:01.217 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:25:01.391 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:25:01.392 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-28 16:25:01.404 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Nrkg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****f5Tg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK08GV2VCC:00000004","TimeStamp":"2019-11-28T12:55:01.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:25:01.406 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"KY3kxQwi3e4fn15WFw_ru8JHFXEXrtZAgGrPScwHyDu-l","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 16:25:01.427 +03:30 [DBG] Augmenting SignInContext
2019-11-28 16:25:01.428 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 16:25:54.512 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 16:25:54.512 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 16:25:54.512 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 16:25:54.512 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:25:54.514 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:25:54.514 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:25:54.514 +03:30 [DBG] Start discovery request
2019-11-28 16:25:54.606 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 16:25:54.606 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 16:25:54.607 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 16:25:54.607 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:25:54.607 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:25:54.608 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:25:54.608 +03:30 [DBG] Start key discovery request
2019-11-28 16:26:14.160 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:26:14.161 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:26:14.161 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:26:14.161 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:26:15.252 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:26:15.253 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:26:15.253 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:26:15.254 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:27:20.394 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2019-11-28 16:27:20.396 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:27:20.396 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:27:20.397 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:27:20.398 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:27:20.398 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:27:20.398 +03:30 [DBG] Start discovery request
2019-11-28 16:27:20.627 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2019-11-28 16:27:20.627 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:27:20.627 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:27:20.627 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:27:20.627 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:27:20.628 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:27:20.628 +03:30 [DBG] Start key discovery request
2019-11-28 16:27:20.874 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:27:20.875 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:27:20.875 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:27:20.875 +03:30 [DBG] Start authorize request
2019-11-28 16:27:20.875 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:27:20.875 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:27:20.875 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:27:20.876 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:27:20.876 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"aUXfboBjRUB5QOFAtF2CRs4Ir2AgPHikh9aTjGyz4vqR4","UiLocales":null,"Nonce":"aUXfboBjRUB5QOFAtF2CRs4Ir2AgPHikh9aTjGyz4vqR4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"aUXfboBjRUB5QOFAtF2CRs4Ir2AgPHikh9aTjGyz4vqR4","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"aUXfboBjRUB5QOFAtF2CRs4Ir2AgPHikh9aTjGyz4vqR4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:27:21.160 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 16:27:21.160 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:27:21.161 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:27:21.161 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:27:21.295 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:27:21.295 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-28 16:27:21.300 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****iHeg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qbOA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK08GV2VCH:00000003","TimeStamp":"2019-11-28T12:57:21.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:27:21.301 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"aUXfboBjRUB5QOFAtF2CRs4Ir2AgPHikh9aTjGyz4vqR4","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 16:27:59.798 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2019-11-28 16:27:59.798 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:27:59.798 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:27:59.798 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:27:59.800 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:27:59.800 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:27:59.800 +03:30 [DBG] Start discovery request
2019-11-28 16:27:59.877 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2019-11-28 16:27:59.877 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:27:59.877 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:27:59.878 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:27:59.878 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:27:59.878 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:27:59.879 +03:30 [DBG] Start key discovery request
2019-11-28 16:27:59.900 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:27:59.900 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:27:59.900 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:27:59.900 +03:30 [DBG] Start authorize request
2019-11-28 16:27:59.901 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:27:59.901 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:27:59.901 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:27:59.901 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:27:59.901 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"pz6IOVwILU7fGYqMF1nG3bxPBNMdGVXtQvFxWMZCWQNRO","UiLocales":null,"Nonce":"pz6IOVwILU7fGYqMF1nG3bxPBNMdGVXtQvFxWMZCWQNRO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d65d4659094bc81b512b3a7c31704814","Raw":{"response_type":"id_token token","client_id":"angular","state":"pz6IOVwILU7fGYqMF1nG3bxPBNMdGVXtQvFxWMZCWQNRO","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"pz6IOVwILU7fGYqMF1nG3bxPBNMdGVXtQvFxWMZCWQNRO"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:27:59.973 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 16:27:59.974 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:27:59.974 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:27:59.975 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:28:00.171 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:28:00.171 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-28 16:28:00.177 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****0PvA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BQ_Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK08GV2VCH:00000006","TimeStamp":"2019-11-28T12:58:00.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:28:00.177 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"pz6IOVwILU7fGYqMF1nG3bxPBNMdGVXtQvFxWMZCWQNRO","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 16:28:00.178 +03:30 [DBG] Augmenting SignInContext
2019-11-28 16:28:00.178 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 16:31:03.875 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2019-11-28 16:31:03.876 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:31:03.876 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:31:03.877 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:31:03.877 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:31:03.878 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:31:03.879 +03:30 [DBG] Start discovery request
2019-11-28 16:31:04.042 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2019-11-28 16:31:04.042 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:31:04.042 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:31:04.043 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:31:04.043 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:31:04.043 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:31:04.043 +03:30 [DBG] Start key discovery request
2019-11-28 16:31:04.281 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:31:04.282 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:31:04.282 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:31:04.282 +03:30 [DBG] Start authorize request
2019-11-28 16:31:04.283 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:31:04.283 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:31:04.283 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:31:04.283 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:31:04.283 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"R3BomP6PyRLDxqyJemY3GKAprsx0EFeuYrihg9_Z4_0Xf","UiLocales":null,"Nonce":"R3BomP6PyRLDxqyJemY3GKAprsx0EFeuYrihg9_Z4_0Xf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d65d4659094bc81b512b3a7c31704814","Raw":{"response_type":"id_token token","client_id":"angular","state":"R3BomP6PyRLDxqyJemY3GKAprsx0EFeuYrihg9_Z4_0Xf","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"R3BomP6PyRLDxqyJemY3GKAprsx0EFeuYrihg9_Z4_0Xf"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:31:04.390 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 16:31:04.390 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:31:04.391 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:31:04.391 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:31:04.565 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:31:04.565 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-28 16:31:04.571 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****V3Hw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wdwg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK08GV2VCI:00000003","TimeStamp":"2019-11-28T13:01:04.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:31:04.571 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"R3BomP6PyRLDxqyJemY3GKAprsx0EFeuYrihg9_Z4_0Xf","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 16:32:33.767 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2019-11-28 16:32:33.770 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:32:33.770 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:32:33.771 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:32:33.771 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:32:33.771 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:32:33.771 +03:30 [DBG] Start discovery request
2019-11-28 16:32:33.909 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2019-11-28 16:32:33.909 +03:30 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2019-11-28 16:32:33.909 +03:30 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2019-11-28 16:32:33.910 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:32:33.910 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:32:33.910 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:32:33.910 +03:30 [DBG] Start key discovery request
2019-11-28 16:32:34.015 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:32:34.016 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:32:34.016 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:32:34.016 +03:30 [DBG] Start authorize request
2019-11-28 16:32:34.016 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:32:34.016 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:32:34.016 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:32:34.016 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:32:34.017 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"ownVdJAmhSjW5DJtEqVtlSYazw-GPMy-QAKOkX_y0BCX3","UiLocales":null,"Nonce":"ownVdJAmhSjW5DJtEqVtlSYazw-GPMy-QAKOkX_y0BCX3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d65d4659094bc81b512b3a7c31704814","Raw":{"response_type":"id_token token","client_id":"angular","state":"ownVdJAmhSjW5DJtEqVtlSYazw-GPMy-QAKOkX_y0BCX3","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"ownVdJAmhSjW5DJtEqVtlSYazw-GPMy-QAKOkX_y0BCX3"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:32:34.127 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 16:32:34.127 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:32:34.128 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:32:34.128 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:32:34.282 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:32:34.283 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-28 16:32:34.289 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****870Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****q66Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK08GV2VCJ:00000003","TimeStamp":"2019-11-28T13:02:34.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:32:34.289 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"ownVdJAmhSjW5DJtEqVtlSYazw-GPMy-QAKOkX_y0BCX3","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 16:38:10.505 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 16:38:10.508 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:38:10.508 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:38:10.510 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:38:10.511 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:38:10.511 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:38:10.511 +03:30 [DBG] Start discovery request
2019-11-28 16:38:10.596 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 16:38:10.603 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:38:10.604 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:38:10.609 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:38:10.610 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:38:10.610 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:38:10.610 +03:30 [DBG] Start key discovery request
2019-11-28 16:38:10.661 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:38:10.661 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:38:10.662 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:38:10.662 +03:30 [DBG] Start authorize request
2019-11-28 16:38:10.662 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:38:10.662 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:38:10.662 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:38:10.662 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:38:10.663 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6r69kV1g37RxIpt4vHnNl6L0a4LwFPQyhx36NyUiOO_Jy","UiLocales":null,"Nonce":"6r69kV1g37RxIpt4vHnNl6L0a4LwFPQyhx36NyUiOO_Jy","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"6r69kV1g37RxIpt4vHnNl6L0a4LwFPQyhx36NyUiOO_Jy","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"6r69kV1g37RxIpt4vHnNl6L0a4LwFPQyhx36NyUiOO_Jy"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:38:10.755 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 16:38:10.756 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:38:10.756 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:38:10.756 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:38:10.914 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:38:10.914 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-28 16:38:10.919 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DX1g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vcLA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK08GV2VCK:00000003","TimeStamp":"2019-11-28T13:08:10.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:38:10.919 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"6r69kV1g37RxIpt4vHnNl6L0a4LwFPQyhx36NyUiOO_Jy","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 16:46:27.752 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 16:46:27.762 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:46:27.762 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:46:27.763 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:46:27.763 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:46:27.763 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:46:27.763 +03:30 [DBG] Start discovery request
2019-11-28 16:46:27.791 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 16:46:27.791 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:46:27.791 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:46:27.792 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:46:27.792 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:46:27.792 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:46:27.792 +03:30 [DBG] Start key discovery request
2019-11-28 16:46:27.850 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:46:27.851 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:46:27.851 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:46:27.851 +03:30 [DBG] Start authorize request
2019-11-28 16:46:27.851 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:46:27.851 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:46:27.851 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:46:27.852 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:46:27.852 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"7xf9HJldtcXPFPwrFME9pM-fp2FOvP5mCfyp0jwayTiyL","UiLocales":null,"Nonce":"7xf9HJldtcXPFPwrFME9pM-fp2FOvP5mCfyp0jwayTiyL","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d65d4659094bc81b512b3a7c31704814","Raw":{"response_type":"id_token token","client_id":"angular","state":"7xf9HJldtcXPFPwrFME9pM-fp2FOvP5mCfyp0jwayTiyL","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"7xf9HJldtcXPFPwrFME9pM-fp2FOvP5mCfyp0jwayTiyL"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:46:27.924 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 16:46:27.924 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:46:27.925 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:46:27.925 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:46:28.084 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:46:28.084 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-28 16:46:28.090 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XIBw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ccyg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK08GV2VCL:00000003","TimeStamp":"2019-11-28T13:16:28.0000000Z","ProcessId":16000,"LocalIpAddress":"127.0.0.1:11899","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:46:28.090 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"7xf9HJldtcXPFPwrFME9pM-fp2FOvP5mCfyp0jwayTiyL","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 16:46:43.081 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 16:46:43.081 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:46:43.081 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:46:43.081 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:46:43.085 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:46:43.085 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:46:43.085 +03:30 [DBG] Start discovery request
2019-11-28 16:46:43.133 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 16:46:43.133 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:46:43.133 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:46:43.134 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:46:43.134 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:46:43.134 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:46:43.134 +03:30 [DBG] Start key discovery request
2019-11-28 16:55:04.073 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 16:55:04.139 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 16:55:04.154 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 16:55:04.155 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 16:55:04.155 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 16:55:04.155 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 16:55:04.155 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 16:55:04.155 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 16:55:04.723 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 16:55:04.726 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 16:55:04.726 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 16:55:04.726 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 16:55:04.726 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 16:55:04.727 +03:30 [DBG] Error Url: /home/error
2019-11-28 16:55:04.728 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 16:57:11.042 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 16:57:11.046 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:57:11.046 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:57:11.050 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:57:11.063 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:57:11.064 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:57:11.070 +03:30 [DBG] Start discovery request
2019-11-28 16:57:11.203 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 16:57:11.203 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:57:11.203 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:57:11.203 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:57:11.205 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:57:11.205 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:57:11.213 +03:30 [DBG] Start key discovery request
2019-11-28 16:57:36.688 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 16:57:36.689 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:57:36.689 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:57:36.689 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 16:57:36.747 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 16:57:36.747 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 16:57:36.748 +03:30 [DBG] Start discovery request
2019-11-28 16:57:36.891 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 16:57:36.891 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 16:57:36.891 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 16:57:36.892 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 16:57:36.892 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 16:57:36.893 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 16:57:36.893 +03:30 [DBG] Start key discovery request
2019-11-28 16:57:37.042 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 16:57:37.054 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 16:57:37.054 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 16:57:37.060 +03:30 [DBG] Start authorize request
2019-11-28 16:57:37.082 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:57:37.092 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:57:37.135 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:57:37.236 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:57:37.271 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2","UiLocales":null,"Nonce":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d65d4659094bc81b512b3a7c31704814","Raw":{"response_type":"id_token token","client_id":"angular","state":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:57:37.507 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 16:57:37.507 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 16:57:37.507 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 16:57:37.690 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:57:37.691 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:57:37.692 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:57:37.695 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:57:41.783 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 16:57:41.883 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:57:41.883 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:57:41.884 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:57:41.904 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK0PGI1G59:00000008","TimeStamp":"2019-11-28T13:27:41.0000000Z","ProcessId":14136,"LocalIpAddress":"127.0.0.1:42015","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-28 16:57:41.923 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:57:41.937 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 16:57:41.938 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 16:57:41.939 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 16:57:41.948 +03:30 [DBG] Start authorize callback request
2019-11-28 16:57:41.955 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:57:41.955 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 16:57:41.955 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 16:57:41.955 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 16:57:41.955 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2","UiLocales":null,"Nonce":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d65d4659094bc81b512b3a7c31704814","Raw":{"response_type":"id_token token","client_id":"angular","state":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 16:57:42.015 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 16:57:42.015 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 16:57:42.025 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 16:57:42.027 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 16:57:42.034 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:57:42.055 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 16:57:42.073 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 16:57:42.073 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 16:57:42.345 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 16:57:42.469 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****i2BA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dczg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK0PGI1G59:00000009","TimeStamp":"2019-11-28T13:27:42.0000000Z","ProcessId":14136,"LocalIpAddress":"127.0.0.1:42015","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 16:57:42.472 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"33MJzUGJkA9vjpshDnsb1PNz-reKkp6edWzxCu1Y5-xp2","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:03:30.229 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 17:03:30.283 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 17:03:30.296 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 17:03:30.296 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 17:03:30.296 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 17:03:30.296 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 17:03:30.296 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 17:03:30.296 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 17:03:30.810 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 17:03:30.812 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 17:03:30.812 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 17:03:30.813 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 17:03:30.813 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 17:03:30.813 +03:30 [DBG] Error Url: /home/error
2019-11-28 17:03:30.813 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 17:04:33.525 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:04:33.530 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:04:33.530 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:04:33.533 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:04:33.539 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:04:33.540 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:04:33.545 +03:30 [DBG] Start discovery request
2019-11-28 17:04:33.648 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:04:33.648 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:04:33.648 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:04:33.649 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:04:33.650 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:04:33.650 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:04:33.655 +03:30 [DBG] Start key discovery request
2019-11-28 17:11:10.782 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 17:11:10.832 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 17:11:10.843 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 17:11:10.843 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 17:11:10.844 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 17:11:10.844 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 17:11:10.844 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 17:11:10.844 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 17:11:11.503 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 17:11:11.506 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 17:11:11.506 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 17:11:11.506 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 17:11:11.506 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 17:11:11.506 +03:30 [DBG] Error Url: /home/error
2019-11-28 17:11:11.506 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 17:11:47.952 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:11:47.958 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:11:47.958 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:11:47.971 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:11:48.074 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:11:48.075 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:11:48.158 +03:30 [DBG] Start discovery request
2019-11-28 17:11:48.264 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:11:48.265 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:11:48.265 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:11:48.266 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:11:48.269 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:11:48.269 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:11:48.276 +03:30 [DBG] Start key discovery request
2019-11-28 17:11:49.725 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:11:49.729 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:11:49.730 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:11:49.734 +03:30 [DBG] Start authorize request
2019-11-28 17:11:49.745 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:11:49.752 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:11:49.777 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:11:49.847 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:11:49.869 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX","UiLocales":null,"Nonce":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:11:49.926 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:11:49.926 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:11:49.926 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 17:11:50.095 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:11:50.095 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:11:50.095 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:11:50.098 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:12:02.966 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:12:03.085 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:12:03.086 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:12:03.086 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:12:03.108 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK12GMB4BR:00000004","TimeStamp":"2019-11-28T13:42:03.0000000Z","ProcessId":16872,"LocalIpAddress":"127.0.0.1:14855","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-28 17:12:03.128 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:12:03.140 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:12:03.141 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:12:03.141 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:12:03.150 +03:30 [DBG] Start authorize callback request
2019-11-28 17:12:03.157 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:12:03.157 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:12:03.158 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:12:03.158 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:12:03.158 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX","UiLocales":null,"Nonce":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:12:03.240 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:12:03.240 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:12:03.251 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 17:12:03.253 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 17:12:03.258 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:12:03.281 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:12:03.295 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:12:03.296 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:12:03.540 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:12:03.655 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****OmNQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****UEng","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK12GMB4BS:00000005","TimeStamp":"2019-11-28T13:42:03.0000000Z","ProcessId":16872,"LocalIpAddress":"127.0.0.1:14855","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:12:03.658 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"OOCv4ZCFq-IZ2cGvpqBogOVfEPZprVf3RdK3HXkeFWekX","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:12:31.856 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:12:31.856 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:12:31.856 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:12:31.857 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:12:31.858 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:12:31.858 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:12:31.858 +03:30 [DBG] Start discovery request
2019-11-28 17:12:31.939 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:12:31.954 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:12:31.954 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:12:31.955 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:12:31.955 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:12:31.955 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:12:31.955 +03:30 [DBG] Start key discovery request
2019-11-28 17:14:28.786 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 17:14:28.851 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 17:14:28.861 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 17:14:28.861 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 17:14:28.862 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 17:14:28.862 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 17:14:28.862 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 17:14:28.862 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 17:14:29.403 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 17:14:29.405 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 17:14:29.406 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 17:14:29.406 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 17:14:29.406 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 17:14:29.406 +03:30 [DBG] Error Url: /home/error
2019-11-28 17:14:29.406 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 17:15:02.534 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:15:02.543 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:15:02.543 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:15:02.572 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:15:02.604 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:15:02.605 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:15:02.613 +03:30 [DBG] Start discovery request
2019-11-28 17:15:02.775 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:15:02.775 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:15:02.775 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:15:02.775 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:15:02.777 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:15:02.779 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:15:02.787 +03:30 [DBG] Start key discovery request
2019-11-28 17:15:02.845 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:15:02.850 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:15:02.850 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:15:02.857 +03:30 [DBG] Start authorize request
2019-11-28 17:15:02.873 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:15:02.880 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:15:02.929 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:15:02.998 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:15:03.017 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq","UiLocales":null,"Nonce":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:15:03.964 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:15:03.964 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:15:03.965 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 17:15:04.351 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:15:04.352 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:15:04.353 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:15:04.356 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:15:08.192 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:15:08.340 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:15:08.341 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:15:08.341 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:15:08.366 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK14BLBSH7:00000004","TimeStamp":"2019-11-28T13:45:08.0000000Z","ProcessId":17660,"LocalIpAddress":"127.0.0.1:5950","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-28 17:15:08.399 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:15:08.410 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:15:08.411 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:15:08.411 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:15:08.421 +03:30 [DBG] Start authorize callback request
2019-11-28 17:15:08.428 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:15:08.428 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:15:08.429 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:15:08.429 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:15:08.430 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq","UiLocales":null,"Nonce":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:15:08.514 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:15:08.514 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:15:08.533 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 17:15:08.540 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 17:15:08.547 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:15:08.576 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:15:08.595 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:15:08.596 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:15:09.021 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:15:09.129 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Oe9Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bCow","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK14BLBSH6:00000005","TimeStamp":"2019-11-28T13:45:09.0000000Z","ProcessId":17660,"LocalIpAddress":"127.0.0.1:5950","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:15:09.132 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"5taVQoVTRHFU1bsYXc_bKqb8q57AJpuKUXiN3DXjW4mcq","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:15:22.578 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:15:22.578 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:15:22.579 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:15:22.579 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:15:22.580 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:15:22.581 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:15:22.581 +03:30 [DBG] Start discovery request
2019-11-28 17:15:22.625 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:15:22.625 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:15:22.625 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:15:22.625 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:15:22.626 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:15:22.626 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:15:22.626 +03:30 [DBG] Start key discovery request
2019-11-28 17:15:43.433 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:15:43.434 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:15:43.434 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:15:43.434 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:15:43.435 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:15:43.435 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:15:43.435 +03:30 [DBG] Start discovery request
2019-11-28 17:15:43.740 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:15:43.743 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:15:43.743 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:15:43.744 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:15:43.745 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:15:43.745 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:15:43.745 +03:30 [DBG] Start key discovery request
2019-11-28 17:15:43.858 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:15:43.858 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:15:43.858 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:15:43.858 +03:30 [DBG] Start authorize request
2019-11-28 17:15:43.858 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:15:43.858 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:15:43.859 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:15:43.861 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:15:43.861 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"1gKVIloaRiB4yYsevbKc9ETfxloIIz7E6MYcnz5RzNmSw","UiLocales":null,"Nonce":"1gKVIloaRiB4yYsevbKc9ETfxloIIz7E6MYcnz5RzNmSw","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ea3ba7bf97add24b65ff3049090fd76f","Raw":{"response_type":"id_token token","client_id":"angular","state":"1gKVIloaRiB4yYsevbKc9ETfxloIIz7E6MYcnz5RzNmSw","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"1gKVIloaRiB4yYsevbKc9ETfxloIIz7E6MYcnz5RzNmSw"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:15:43.955 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 17:15:43.955 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:15:43.956 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:15:43.956 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:15:44.100 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:15:44.226 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****V5ng","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6c5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK14BLBSH7:00000007","TimeStamp":"2019-11-28T13:45:44.0000000Z","ProcessId":17660,"LocalIpAddress":"127.0.0.1:5950","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:15:44.226 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"1gKVIloaRiB4yYsevbKc9ETfxloIIz7E6MYcnz5RzNmSw","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:16:19.688 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:16:19.689 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:16:19.689 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:16:19.689 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:16:19.690 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:16:19.690 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:16:19.690 +03:30 [DBG] Start discovery request
2019-11-28 17:16:19.743 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:16:19.743 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:16:19.743 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:16:19.744 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:16:19.744 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:16:19.745 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:16:19.745 +03:30 [DBG] Start key discovery request
2019-11-28 17:16:19.762 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:16:19.890 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:16:19.890 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:16:19.890 +03:30 [DBG] Start authorize request
2019-11-28 17:16:19.891 +03:30 [DBG] No user present in authorize request
2019-11-28 17:16:19.891 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:16:19.893 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:16:19.893 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:16:19.894 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6","UiLocales":null,"Nonce":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:16:19.894 +03:30 [INF] Showing login: User is not authenticated
2019-11-28 17:16:23.891 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:16:23.893 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:16:23.893 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:16:23.897 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:16:34.408 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:16:46.180 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:16:46.181 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:16:46.181 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:16:46.445 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:16:46.450 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 17:16:46.450 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 17:16:46.450 +03:30 [DBG] Adding auth_time claim with value: 1574948806
2019-11-28 17:16:46.467 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:16:46.509 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK14BLBSH9:00000002","TimeStamp":"2019-11-28T13:46:46.0000000Z","ProcessId":17660,"LocalIpAddress":"127.0.0.1:5950","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-28 17:16:46.509 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:16:46.530 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:16:46.531 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:16:46.531 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:16:46.531 +03:30 [DBG] Start authorize callback request
2019-11-28 17:16:46.531 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:16:46.532 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:16:46.532 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:16:46.532 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:16:46.532 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6","UiLocales":null,"Nonce":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"844f84d832e499f1557ba4797c8f2906","Raw":{"response_type":"id_token token","client_id":"angular","state":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:16:46.582 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 17:16:46.582 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:16:46.582 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:16:46.583 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:16:46.710 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:16:46.821 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_KRA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****h1-A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK14BLBSH6:0000000B","TimeStamp":"2019-11-28T13:46:46.0000000Z","ProcessId":17660,"LocalIpAddress":"127.0.0.1:5950","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:16:46.821 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"-p0Tqy2eoKAaa2Hv8VXvH1_8i4IsutWiwBLcWJv5EtAv6","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:16:46.827 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:16:46.828 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:17:01.613 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:17:01.614 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:17:01.614 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:17:01.614 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:17:01.615 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:17:01.615 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:17:01.615 +03:30 [DBG] Start discovery request
2019-11-28 17:17:01.637 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:17:01.637 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:17:01.637 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:17:01.638 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:17:01.638 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:17:01.638 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:17:01.638 +03:30 [DBG] Start key discovery request
2019-11-28 17:20:56.628 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 17:20:56.683 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 17:20:56.694 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 17:20:56.694 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 17:20:56.694 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 17:20:56.694 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 17:20:56.694 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 17:20:56.694 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 17:20:57.274 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 17:20:57.278 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 17:20:57.279 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 17:20:57.279 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 17:20:57.279 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 17:20:57.279 +03:30 [DBG] Error Url: /home/error
2019-11-28 17:20:57.279 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 17:21:18.254 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:21:18.260 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:21:18.260 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:21:18.265 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:21:18.310 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:21:18.311 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:21:18.315 +03:30 [DBG] Start discovery request
2019-11-28 17:21:18.373 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:21:18.373 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:21:18.373 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:21:18.374 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:21:18.374 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:21:18.375 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:21:18.380 +03:30 [DBG] Start key discovery request
2019-11-28 17:21:18.411 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:21:18.421 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:21:18.422 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:21:18.427 +03:30 [DBG] Start authorize request
2019-11-28 17:21:18.441 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:21:18.447 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:21:18.468 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:21:18.537 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:21:18.560 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","UiLocales":null,"Nonce":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"844f84d832e499f1557ba4797c8f2906","Raw":{"response_type":"id_token token","client_id":"angular","state":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:21:19.440 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:21:19.440 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:21:19.440 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 17:21:19.599 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:21:19.600 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:21:19.600 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:21:19.602 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:21:21.936 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:21:22.023 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:21:22.023 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:21:22.023 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:21:22.046 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK17V8PBVR:00000004","TimeStamp":"2019-11-28T13:51:22.0000000Z","ProcessId":5160,"LocalIpAddress":"127.0.0.1:25775","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-28 17:21:22.072 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:21:22.080 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:21:22.083 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:21:22.083 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:21:22.093 +03:30 [DBG] Start authorize callback request
2019-11-28 17:21:22.101 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:21:22.101 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:21:22.101 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:21:22.101 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:21:22.101 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","UiLocales":null,"Nonce":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"844f84d832e499f1557ba4797c8f2906","Raw":{"response_type":"id_token token","client_id":"angular","state":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:21:22.189 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:21:22.189 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:21:22.196 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 17:21:22.199 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 17:21:22.205 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:21:22.227 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:21:22.240 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:21:22.241 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:21:22.681 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:21:22.815 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6mfw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****blqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK17V8PBVQ:00000005","TimeStamp":"2019-11-28T13:51:22.0000000Z","ProcessId":5160,"LocalIpAddress":"127.0.0.1:25775","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:21:22.820 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:21:37.207 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:21:37.207 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:21:37.207 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:21:37.208 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:21:37.209 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:21:37.209 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:21:37.209 +03:30 [DBG] Start discovery request
2019-11-28 17:21:37.258 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:21:37.258 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:21:37.258 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:21:37.258 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:21:37.258 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:21:37.259 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:21:37.259 +03:30 [DBG] Start key discovery request
2019-11-28 17:22:13.347 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:22:13.445 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-28 17:22:13.447 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-28 17:22:13.449 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-28 17:22:13.450 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRK17V8PBVQ:00000009","TimeStamp":"2019-11-28T13:52:13.0000000Z","ProcessId":5160,"LocalIpAddress":"127.0.0.1:25775","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-28 17:22:13.593 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-28 17:22:13.601 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-28 17:22:13.601 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-28 17:22:13.630 +03:30 [DBG] Processing signout callback request
2019-11-28 17:22:13.654 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:22:13.655 +03:30 [DBG] No client front-channel logout URLs
2019-11-28 17:22:13.655 +03:30 [DBG] No client back-channel logout URLs
2019-11-28 17:22:13.658 +03:30 [INF] Successful signout callback.
2019-11-28 17:22:13.658 +03:30 [DBG] No client front-channel iframe urls
2019-11-28 17:22:13.658 +03:30 [DBG] No client back-channel iframe urls
2019-11-28 17:22:19.757 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:22:19.757 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:22:19.759 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:22:19.760 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:22:19.761 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:22:19.761 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:22:19.761 +03:30 [DBG] Start discovery request
2019-11-28 17:22:19.860 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:22:19.861 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:22:19.861 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:22:19.861 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:22:19.861 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:22:19.861 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:22:19.861 +03:30 [DBG] Start key discovery request
2019-11-28 17:22:19.982 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:22:20.005 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:22:20.005 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:22:20.005 +03:30 [DBG] Start authorize request
2019-11-28 17:22:20.007 +03:30 [DBG] No user present in authorize request
2019-11-28 17:22:20.007 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:22:20.053 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:22:20.053 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:22:20.053 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab","UiLocales":null,"Nonce":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:22:20.054 +03:30 [INF] Showing login: User is not authenticated
2019-11-28 17:22:41.396 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:22:41.410 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:22:41.411 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:22:41.411 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:22:41.412 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:22:41.412 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:22:41.412 +03:30 [DBG] Start discovery request
2019-11-28 17:22:41.436 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:22:41.438 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:22:41.438 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:22:41.438 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:22:41.438 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:22:41.438 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:22:41.438 +03:30 [DBG] Start key discovery request
2019-11-28 17:22:41.455 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:22:41.455 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:22:41.455 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:22:41.458 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:22:46.751 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:23:00.617 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:23:00.618 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:23:00.619 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:23:07.807 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:23:07.810 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 17:23:07.810 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 17:23:07.810 +03:30 [DBG] Adding auth_time claim with value: 1574949187
2019-11-28 17:23:07.818 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:24:03.122 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK17V8PBVR:0000000C","TimeStamp":"2019-11-28T13:54:03.0000000Z","ProcessId":5160,"LocalIpAddress":"127.0.0.1:25775","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-28 17:24:08.791 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:24:47.587 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:24:47.588 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:24:47.588 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:24:47.588 +03:30 [DBG] Start authorize callback request
2019-11-28 17:24:47.589 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:24:47.589 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:24:47.589 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:24:47.589 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:24:47.589 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab","UiLocales":null,"Nonce":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:24:47.640 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 17:24:47.640 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:24:47.640 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:24:47.641 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:24:47.768 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:24:47.893 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lAMA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aVeQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK17V8PBVR:0000000D","TimeStamp":"2019-11-28T13:54:47.0000000Z","ProcessId":5160,"LocalIpAddress":"127.0.0.1:25775","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:24:47.893 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"uCyPl9bmE7eS_nyU4XpPaUyOoKKAYSF74KKQLkN1U9Jab","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:24:47.900 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:24:47.900 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:25:06.078 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:25:06.079 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:25:06.079 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:25:06.079 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:25:07.568 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:25:07.607 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:25:07.607 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:25:07.608 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:25:07.608 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK17V8PBVR:0000000F","TimeStamp":"2019-11-28T13:55:07.0000000Z","ProcessId":5160,"LocalIpAddress":"127.0.0.1:25775","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-28 17:25:07.609 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:25:07.627 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:25:07.627 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:25:07.627 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:25:07.627 +03:30 [DBG] Start authorize callback request
2019-11-28 17:25:07.628 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:25:07.628 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:25:07.628 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:25:07.629 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:25:07.629 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","UiLocales":null,"Nonce":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"844f84d832e499f1557ba4797c8f2906","Raw":{"response_type":"id_token token","client_id":"angular","state":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:25:07.673 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 17:25:07.674 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:25:07.674 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:25:07.674 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:25:07.784 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:25:07.884 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****V4Kg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KkcQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK17V8PBVR:00000010","TimeStamp":"2019-11-28T13:55:07.0000000Z","ProcessId":5160,"LocalIpAddress":"127.0.0.1:25775","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:25:07.884 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"6vDcvvzdBhdI52PQOnk9wnEqx5w8nkFUj1Jgc9LLA6Th0","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:25:50.092 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 17:25:50.156 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 17:25:50.168 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 17:25:50.168 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 17:25:50.168 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 17:25:50.169 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 17:25:50.169 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 17:25:50.169 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 17:25:50.804 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 17:25:50.807 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 17:25:50.808 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 17:25:50.808 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 17:25:50.808 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 17:25:50.808 +03:30 [DBG] Error Url: /home/error
2019-11-28 17:25:50.808 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 17:27:01.733 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:27:01.738 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:27:01.739 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:27:01.745 +03:30 [DBG] Start discovery request
2019-11-28 17:27:35.653 +03:30 [DBG] Request path /connect/token matched to endpoint type Token
2019-11-28 17:27:35.662 +03:30 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-11-28 17:27:35.662 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-11-28 17:27:35.767 +03:30 [WRN] Invalid HTTP request for token endpoint
2019-11-28 17:27:37.659 +03:30 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-11-28 17:27:37.661 +03:30 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-11-28 17:27:37.661 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-11-28 17:27:37.670 +03:30 [DBG] Start userinfo request
2019-11-28 17:27:37.675 +03:30 [DBG] Bearer token not found
2019-11-28 17:27:37.676 +03:30 [ERR] No access token found.
2019-11-28 17:27:58.730 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:27:58.831 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-28 17:27:58.832 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-28 17:27:58.833 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-28 17:27:58.860 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRK1AMNVMH8:00000006","TimeStamp":"2019-11-28T13:57:58.0000000Z","ProcessId":21620,"LocalIpAddress":"127.0.0.1:8869","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-28 17:27:58.969 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-28 17:27:58.973 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-28 17:27:58.973 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-28 17:27:58.981 +03:30 [DBG] Processing signout callback request
2019-11-28 17:27:59.027 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:27:59.028 +03:30 [DBG] No client front-channel logout URLs
2019-11-28 17:27:59.028 +03:30 [DBG] No client back-channel logout URLs
2019-11-28 17:27:59.028 +03:30 [INF] Successful signout callback.
2019-11-28 17:27:59.028 +03:30 [DBG] No client front-channel iframe urls
2019-11-28 17:27:59.028 +03:30 [DBG] No client back-channel iframe urls
2019-11-28 17:28:27.612 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:28:27.627 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:28:27.627 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:28:27.629 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:28:27.629 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:28:27.629 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:28:27.630 +03:30 [DBG] Start discovery request
2019-11-28 17:28:27.680 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:28:27.680 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:28:27.680 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:28:27.681 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:28:27.682 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:28:27.682 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:28:27.689 +03:30 [DBG] Start key discovery request
2019-11-28 17:28:27.768 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:28:27.770 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:28:27.770 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:28:27.775 +03:30 [DBG] Start authorize request
2019-11-28 17:28:27.782 +03:30 [DBG] No user present in authorize request
2019-11-28 17:28:27.788 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:28:27.794 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:28:27.847 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:28:27.865 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","UiLocales":null,"Nonce":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:28:27.896 +03:30 [INF] Showing login: User is not authenticated
2019-11-28 17:28:32.983 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:28:32.983 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:28:32.984 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:28:32.988 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:29:13.817 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:29:22.566 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:29:22.567 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:29:22.568 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:29:33.508 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:29:33.511 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 17:29:33.511 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 17:29:33.511 +03:30 [DBG] Adding auth_time claim with value: 1574949573
2019-11-28 17:29:33.519 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:29:40.854 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK1AMNVMHB:00000001","TimeStamp":"2019-11-28T13:59:40.0000000Z","ProcessId":21620,"LocalIpAddress":"127.0.0.1:8869","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-28 17:29:49.784 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:30:02.230 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:30:02.231 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:30:02.231 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:30:02.238 +03:30 [DBG] Start authorize callback request
2019-11-28 17:30:02.243 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:30:02.243 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:30:02.243 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:30:02.243 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:30:02.243 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","UiLocales":null,"Nonce":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4d0bf7be0bb1be11e366db6a96c61d78","Raw":{"response_type":"id_token token","client_id":"angular","state":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:30:02.326 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:30:02.326 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:30:02.326 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 17:30:02.402 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:30:02.402 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:30:02.402 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:30:02.402 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:30:05.489 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:30:05.646 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:30:05.647 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:30:05.648 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:30:05.650 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK1AMNVMHC:00000004","TimeStamp":"2019-11-28T14:00:05.0000000Z","ProcessId":21620,"LocalIpAddress":"127.0.0.1:8869","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-28 17:30:05.674 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:30:05.688 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:30:05.688 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:30:05.689 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:30:05.689 +03:30 [DBG] Start authorize callback request
2019-11-28 17:30:05.692 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:30:05.692 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:30:05.692 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:30:05.692 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:30:05.692 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","UiLocales":null,"Nonce":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4d0bf7be0bb1be11e366db6a96c61d78","Raw":{"response_type":"id_token token","client_id":"angular","state":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:30:05.756 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:30:05.756 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:30:05.767 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 17:30:05.770 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 17:30:05.777 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:30:05.803 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:30:05.822 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:30:05.822 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:30:06.042 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:30:06.160 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1G4A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gLYA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK1AMNVMHC:00000005","TimeStamp":"2019-11-28T14:00:06.0000000Z","ProcessId":21620,"LocalIpAddress":"127.0.0.1:8869","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:30:06.162 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"bSi_GjYW2RYb8VFBFa2dztetyNMnI6BQVQGhB0bcosjp7","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:30:06.177 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:30:06.177 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:30:25.834 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:30:25.837 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:30:25.837 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:30:25.838 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:30:25.839 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:30:25.839 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:30:25.840 +03:30 [DBG] Start discovery request
2019-11-28 17:30:25.914 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:30:25.915 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:30:25.915 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:30:25.916 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:30:25.916 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:30:25.916 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:30:25.916 +03:30 [DBG] Start key discovery request
2019-11-28 17:32:26.874 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 17:32:26.931 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 17:32:26.945 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 17:32:26.946 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 17:32:26.946 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 17:32:26.946 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 17:32:26.946 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 17:32:26.946 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 17:32:27.589 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 17:32:27.592 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 17:32:27.592 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 17:32:27.592 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 17:32:27.592 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 17:32:27.592 +03:30 [DBG] Error Url: /home/error
2019-11-28 17:32:27.592 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 17:33:47.033 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:33:47.038 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:33:47.038 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:33:47.042 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:33:47.051 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:33:47.051 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:33:47.056 +03:30 [DBG] Start discovery request
2019-11-28 17:33:47.131 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:33:47.131 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:33:47.132 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:33:47.133 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:33:47.134 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:33:47.134 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:33:47.139 +03:30 [DBG] Start key discovery request
2019-11-28 17:33:47.179 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:33:47.185 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:33:47.185 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:33:47.191 +03:30 [DBG] Start authorize request
2019-11-28 17:33:47.205 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:33:47.218 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:33:47.255 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:33:47.321 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:33:47.348 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4","UiLocales":null,"Nonce":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4d0bf7be0bb1be11e366db6a96c61d78","Raw":{"response_type":"id_token token","client_id":"angular","state":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:33:48.134 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:33:48.135 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:33:48.135 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 17:33:48.271 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:33:48.271 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:33:48.272 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:33:48.274 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:33:50.182 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:33:50.269 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:33:50.269 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:33:50.269 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:33:50.288 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK1ECVTQGS:00000006","TimeStamp":"2019-11-28T14:03:50.0000000Z","ProcessId":23276,"LocalIpAddress":"127.0.0.1:6910","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-28 17:33:50.308 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:33:50.322 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:33:50.322 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:33:50.323 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:33:50.330 +03:30 [DBG] Start authorize callback request
2019-11-28 17:33:50.336 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:33:50.336 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:33:50.336 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:33:50.336 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:33:50.337 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4","UiLocales":null,"Nonce":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4d0bf7be0bb1be11e366db6a96c61d78","Raw":{"response_type":"id_token token","client_id":"angular","state":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:33:50.428 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:33:50.429 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:33:50.436 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 17:33:50.438 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 17:33:50.443 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:33:50.462 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:33:50.474 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:33:50.476 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:33:50.906 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:33:51.032 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vwlQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Rr-w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK1ECVTQGS:00000007","TimeStamp":"2019-11-28T14:03:51.0000000Z","ProcessId":23276,"LocalIpAddress":"127.0.0.1:6910","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:33:51.036 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"HYwXUKYE6tWJrUjiodxfedbwD2SeiZkF1Rod0v_yTwvU4","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:34:03.906 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:34:03.906 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:34:03.906 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:34:03.907 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:34:03.907 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:34:03.907 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:34:03.907 +03:30 [DBG] Start discovery request
2019-11-28 17:34:03.958 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:34:03.959 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:34:03.959 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:34:03.959 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:34:03.960 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:34:03.960 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:34:03.960 +03:30 [DBG] Start key discovery request
2019-11-28 17:34:30.091 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:34:30.170 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-28 17:34:30.171 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-28 17:34:30.171 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-28 17:34:30.172 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRK1ECVTQGS:0000000B","TimeStamp":"2019-11-28T14:04:30.0000000Z","ProcessId":23276,"LocalIpAddress":"127.0.0.1:6910","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-28 17:34:30.246 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-28 17:34:30.276 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-28 17:34:30.276 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-28 17:34:30.285 +03:30 [DBG] Processing signout callback request
2019-11-28 17:34:30.303 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:34:30.305 +03:30 [DBG] No client front-channel logout URLs
2019-11-28 17:34:30.305 +03:30 [DBG] No client back-channel logout URLs
2019-11-28 17:34:30.306 +03:30 [INF] Successful signout callback.
2019-11-28 17:34:30.306 +03:30 [DBG] No client front-channel iframe urls
2019-11-28 17:34:30.306 +03:30 [DBG] No client back-channel iframe urls
2019-11-28 17:34:44.385 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:34:44.385 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:34:44.385 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:34:44.385 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:34:44.386 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:34:44.386 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:34:44.386 +03:30 [DBG] Start discovery request
2019-11-28 17:34:44.396 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:34:44.396 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:34:44.396 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:34:44.396 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:34:44.397 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:34:44.397 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:34:44.398 +03:30 [DBG] Start key discovery request
2019-11-28 17:34:44.420 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:34:44.421 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:34:44.421 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:34:44.421 +03:30 [DBG] Start authorize request
2019-11-28 17:34:44.422 +03:30 [DBG] No user present in authorize request
2019-11-28 17:34:44.422 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:34:44.423 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:34:44.423 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:34:44.423 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY","UiLocales":null,"Nonce":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:34:44.423 +03:30 [INF] Showing login: User is not authenticated
2019-11-28 17:35:17.877 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:35:17.877 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:35:17.878 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:35:17.881 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:35:54.407 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:36:30.484 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:36:30.484 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:36:30.484 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:36:57.039 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:36:57.043 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 17:36:57.044 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 17:36:57.044 +03:30 [DBG] Adding auth_time claim with value: 1574950017
2019-11-28 17:36:57.053 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:37:04.012 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK1ECVTQGS:00000011","TimeStamp":"2019-11-28T14:07:04.0000000Z","ProcessId":23276,"LocalIpAddress":"127.0.0.1:6910","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-28 17:37:15.448 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:37:38.801 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:37:38.801 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:37:38.802 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:37:38.802 +03:30 [DBG] Start authorize callback request
2019-11-28 17:37:38.802 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:37:38.802 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:37:38.803 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:37:38.803 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:37:38.803 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY","UiLocales":null,"Nonce":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bb86c597741328b0e3484429e6765463","Raw":{"response_type":"id_token token","client_id":"angular","state":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:37:38.847 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 17:37:38.848 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:37:38.848 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:37:38.848 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:37:38.997 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:37:39.185 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4UfQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CQNQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK1ECVTQGS:00000012","TimeStamp":"2019-11-28T14:07:39.0000000Z","ProcessId":23276,"LocalIpAddress":"127.0.0.1:6910","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:37:39.185 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"pAhK1dR30r7m7n6kg1AEEEscWRBAtHpzaaatmDUuXwMVY","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:37:39.195 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:37:39.196 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:37:50.481 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:37:50.481 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:37:50.481 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:37:50.482 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:37:50.484 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:37:50.484 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:37:50.484 +03:30 [DBG] Start discovery request
2019-11-28 17:37:50.557 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:37:50.557 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:37:50.557 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:37:50.558 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:37:50.558 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:37:50.558 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:37:50.559 +03:30 [DBG] Start key discovery request
2019-11-28 17:40:33.703 +03:30 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:40:48.833 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:40:48.833 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 17:40:48.833 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 17:40:48.833 +03:30 [DBG] Adding auth_time claim with value: 1574950248
2019-11-28 17:40:48.833 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:41:22.563 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK1ECVTQGT:00000001","TimeStamp":"2019-11-28T14:11:22.0000000Z","ProcessId":23276,"LocalIpAddress":"127.0.0.1:6910","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-28 17:41:59.788 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 17:41:59.837 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 17:41:59.849 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 17:41:59.849 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 17:41:59.849 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 17:41:59.849 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 17:41:59.849 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 17:41:59.850 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 17:42:00.478 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 17:42:00.481 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 17:42:00.481 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 17:42:00.481 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 17:42:00.481 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 17:42:00.482 +03:30 [DBG] Error Url: /home/error
2019-11-28 17:42:00.482 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 17:43:23.697 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:43:23.805 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-28 17:43:23.807 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-28 17:43:23.808 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-28 17:43:23.833 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRK1JNNHQ1M:00000003","TimeStamp":"2019-11-28T14:13:23.0000000Z","ProcessId":20028,"LocalIpAddress":"127.0.0.1:19860","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-28 17:43:30.058 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 17:43:30.066 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:43:30.066 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:43:30.067 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:43:30.072 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:43:30.072 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:43:30.079 +03:30 [DBG] Start discovery request
2019-11-28 17:43:30.147 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 17:43:30.147 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 17:43:30.148 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 17:43:30.148 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:43:30.149 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:43:30.149 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:43:30.156 +03:30 [DBG] Start key discovery request
2019-11-28 17:43:30.199 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 17:43:30.203 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 17:43:30.203 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 17:43:30.208 +03:30 [DBG] Start authorize request
2019-11-28 17:43:30.217 +03:30 [DBG] No user present in authorize request
2019-11-28 17:43:30.223 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:43:30.262 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:43:30.372 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:43:30.396 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","UiLocales":null,"Nonce":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:43:30.420 +03:30 [INF] Showing login: User is not authenticated
2019-11-28 17:43:43.502 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:43:43.502 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:43:43.503 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:44:26.969 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:47:09.090 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:47:11.564 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:47:11.565 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:47:11.565 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:47:24.113 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:47:24.116 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 17:47:24.117 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 17:47:24.117 +03:30 [DBG] Adding auth_time claim with value: 1574950644
2019-11-28 17:47:24.125 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:47:42.968 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK1JNNHQ1M:00000008","TimeStamp":"2019-11-28T14:17:42.0000000Z","ProcessId":20028,"LocalIpAddress":"127.0.0.1:19860","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-28 17:48:09.707 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:49:13.705 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:49:13.706 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:49:13.706 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:49:13.715 +03:30 [DBG] Start authorize callback request
2019-11-28 17:49:13.721 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:49:13.721 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:49:13.721 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:49:13.721 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:49:13.722 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","UiLocales":null,"Nonce":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b77301f148d47dedcea048cf3ddb142b","Raw":{"response_type":"id_token token","client_id":"angular","state":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:49:13.823 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:49:13.823 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:49:13.823 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 17:49:13.896 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:49:13.896 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:49:13.896 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:49:13.896 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:49:19.002 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 17:49:19.056 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:49:19.056 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:49:19.057 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:49:19.059 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK1JNNHQ1M:0000000B","TimeStamp":"2019-11-28T14:19:19.0000000Z","ProcessId":20028,"LocalIpAddress":"127.0.0.1:19860","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-28 17:49:19.074 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:49:19.083 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 17:49:19.085 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 17:49:19.085 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 17:49:19.085 +03:30 [DBG] Start authorize callback request
2019-11-28 17:49:19.091 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:49:19.092 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 17:49:19.092 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 17:49:19.092 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 17:49:19.092 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","UiLocales":null,"Nonce":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b77301f148d47dedcea048cf3ddb142b","Raw":{"response_type":"id_token token","client_id":"angular","state":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 17:49:19.142 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 17:49:19.142 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 17:49:19.149 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 17:49:19.154 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 17:49:19.158 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:49:19.180 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 17:49:19.195 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 17:49:19.196 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 17:49:19.486 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 17:49:19.648 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****W0lw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7VMQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK1JNNHQ1M:0000000C","TimeStamp":"2019-11-28T14:19:19.0000000Z","ProcessId":20028,"LocalIpAddress":"127.0.0.1:19860","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 17:49:19.651 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"6qBrdUjnxWB1C2RvMNlJHSUAjLwA3w8lKusXdQEZ6yFyx","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 17:49:19.676 +03:30 [DBG] Augmenting SignInContext
2019-11-28 17:49:19.677 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 17:49:27.653 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 17:49:27.654 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:49:27.656 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:49:27.656 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 17:49:27.657 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 17:49:27.657 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 17:49:27.657 +03:30 [DBG] Start discovery request
2019-11-28 17:49:27.737 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 17:49:27.737 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 17:49:27.737 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 17:49:27.738 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 17:49:27.751 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 17:49:27.751 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 17:49:27.751 +03:30 [DBG] Start key discovery request
2019-11-28 18:27:53.101 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 18:27:53.152 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 18:27:53.163 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 18:27:53.163 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 18:27:53.163 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 18:27:53.164 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 18:27:53.164 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 18:27:53.164 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 18:27:53.975 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 18:27:53.977 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 18:27:53.978 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 18:27:53.978 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 18:27:53.978 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 18:27:53.978 +03:30 [DBG] Error Url: /home/error
2019-11-28 18:27:53.978 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 18:29:17.130 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-28 18:29:17.182 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-28 18:29:17.198 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-28 18:29:17.198 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-28 18:29:17.198 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-28 18:29:17.198 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-28 18:29:17.199 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-28 18:29:17.199 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-28 18:29:17.838 +03:30 [DBG] Login Url: /Account/Login
2019-11-28 18:29:17.840 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-28 18:29:17.840 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-28 18:29:17.840 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-28 18:29:17.841 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-28 18:29:17.841 +03:30 [DBG] Error Url: /home/error
2019-11-28 18:29:17.841 +03:30 [DBG] Error Id Parameter: errorId
2019-11-28 18:29:29.636 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 18:29:29.640 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 18:29:29.640 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 18:29:29.644 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 18:29:29.650 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 18:29:29.650 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 18:29:29.654 +03:30 [DBG] Start discovery request
2019-11-28 18:29:29.721 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 18:29:29.721 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 18:29:29.721 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 18:29:29.722 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 18:29:29.723 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 18:29:29.723 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 18:29:29.729 +03:30 [DBG] Start key discovery request
2019-11-28 18:29:29.766 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 18:29:29.772 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 18:29:29.772 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 18:29:29.782 +03:30 [DBG] Start authorize request
2019-11-28 18:29:29.800 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 18:29:29.810 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:29:29.840 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:29:29.898 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:29:29.919 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN","UiLocales":null,"Nonce":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b77301f148d47dedcea048cf3ddb142b","Raw":{"response_type":"id_token token","client_id":"angular","state":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 18:29:30.096 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 18:29:30.096 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 18:29:30.097 +03:30 [INF] Showing consent: User has not yet consented
2019-11-28 18:29:30.286 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:29:30.287 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:29:30.287 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:29:30.289 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:29:32.469 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 18:29:32.561 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:29:32.561 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:29:32.562 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:29:32.587 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK2E5AK6H8:00000004","TimeStamp":"2019-11-28T14:59:32.0000000Z","ProcessId":19856,"LocalIpAddress":"127.0.0.1:34517","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-28 18:29:32.607 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:29:32.616 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 18:29:32.617 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 18:29:32.617 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 18:29:32.625 +03:30 [DBG] Start authorize callback request
2019-11-28 18:29:32.635 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 18:29:32.636 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:29:32.636 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:29:32.636 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:29:32.637 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN","UiLocales":null,"Nonce":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b77301f148d47dedcea048cf3ddb142b","Raw":{"response_type":"id_token token","client_id":"angular","state":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 18:29:32.689 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-28 18:29:32.689 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-28 18:29:32.697 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-28 18:29:32.699 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-28 18:29:32.703 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 18:29:32.723 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 18:29:32.740 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 18:29:32.741 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 18:29:33.028 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 18:29:33.135 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****kACA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CIow","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK2E5AK6H7:00000004","TimeStamp":"2019-11-28T14:59:33.0000000Z","ProcessId":19856,"LocalIpAddress":"127.0.0.1:34517","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 18:29:33.137 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"WH47ZXw9xbA6JztQYxTRrSad8v5NQojHtr9Pw6wPopBTN","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 18:29:52.946 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 18:29:52.946 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 18:29:52.948 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 18:29:52.948 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 18:29:52.949 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 18:29:52.949 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 18:29:52.949 +03:30 [DBG] Start discovery request
2019-11-28 18:29:53.002 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 18:29:53.002 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 18:29:53.002 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 18:29:53.004 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 18:29:53.004 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 18:29:53.005 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 18:29:53.005 +03:30 [DBG] Start key discovery request
2019-11-28 18:30:11.395 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 18:30:11.457 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-28 18:30:11.458 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-28 18:30:11.459 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-28 18:30:11.460 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRK2E5AK6H7:00000006","TimeStamp":"2019-11-28T15:00:11.0000000Z","ProcessId":19856,"LocalIpAddress":"127.0.0.1:34517","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-28 18:30:11.537 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-28 18:30:11.543 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-28 18:30:11.543 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-28 18:30:11.552 +03:30 [DBG] Processing signout callback request
2019-11-28 18:30:11.572 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:30:11.573 +03:30 [DBG] No client front-channel logout URLs
2019-11-28 18:30:11.573 +03:30 [DBG] No client back-channel logout URLs
2019-11-28 18:30:11.573 +03:30 [INF] Successful signout callback.
2019-11-28 18:30:11.573 +03:30 [DBG] No client front-channel iframe urls
2019-11-28 18:30:11.573 +03:30 [DBG] No client back-channel iframe urls
2019-11-28 18:30:13.422 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 18:30:13.422 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 18:30:13.423 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 18:30:13.423 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 18:30:13.424 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 18:30:13.424 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 18:30:13.424 +03:30 [DBG] Start discovery request
2019-11-28 18:30:13.445 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 18:30:13.445 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 18:30:13.446 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 18:30:13.446 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 18:30:13.446 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 18:30:13.446 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 18:30:13.447 +03:30 [DBG] Start key discovery request
2019-11-28 18:30:53.347 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 18:30:53.349 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 18:30:53.349 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 18:30:53.349 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 18:30:53.352 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 18:30:53.352 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 18:30:53.352 +03:30 [DBG] Start discovery request
2019-11-28 18:30:53.404 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 18:30:53.405 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 18:30:53.405 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 18:30:53.405 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 18:30:53.405 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 18:30:53.405 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 18:30:53.406 +03:30 [DBG] Start key discovery request
2019-11-28 18:31:29.450 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-28 18:31:29.450 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 18:31:29.450 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 18:31:29.451 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 18:31:29.452 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 18:31:29.453 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 18:31:29.453 +03:30 [DBG] Start discovery request
2019-11-28 18:31:29.554 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-28 18:31:29.554 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-28 18:31:29.554 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-28 18:31:29.555 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 18:31:29.556 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 18:31:29.556 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 18:31:29.556 +03:30 [DBG] Start key discovery request
2019-11-28 18:31:29.588 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-28 18:31:29.589 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-28 18:31:29.589 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-28 18:31:29.590 +03:30 [DBG] Start authorize request
2019-11-28 18:31:29.590 +03:30 [DBG] No user present in authorize request
2019-11-28 18:31:29.590 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:31:29.591 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:31:29.594 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:31:29.594 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO","UiLocales":null,"Nonce":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 18:31:29.594 +03:30 [INF] Showing login: User is not authenticated
2019-11-28 18:31:35.084 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:31:35.084 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:31:35.086 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:31:35.090 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:31:43.283 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-28 18:31:44.656 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:31:44.656 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:31:44.658 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:31:44.895 +03:30 [DBG] Augmenting SignInContext
2019-11-28 18:31:44.903 +03:30 [DBG] Adding idp claim with value: local
2019-11-28 18:31:44.903 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-28 18:31:44.903 +03:30 [DBG] Adding auth_time claim with value: 1574953304
2019-11-28 18:31:44.912 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 18:31:44.963 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK2E5AK6H7:0000000D","TimeStamp":"2019-11-28T15:01:44.0000000Z","ProcessId":19856,"LocalIpAddress":"127.0.0.1:34517","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-28 18:31:44.963 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:31:45.019 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-28 18:31:45.019 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-28 18:31:45.019 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-28 18:31:45.019 +03:30 [DBG] Start authorize callback request
2019-11-28 18:31:45.019 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 18:31:45.020 +03:30 [DBG] Start authorize request protocol validation
2019-11-28 18:31:45.020 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-28 18:31:45.020 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-28 18:31:45.020 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO","UiLocales":null,"Nonce":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"a6e05b75261ab0e5ef4442c8a43c2b95","Raw":{"response_type":"id_token token","client_id":"angular","state":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO"},"$type":"AuthorizeRequestValidationLog"}
2019-11-28 18:31:45.077 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-28 18:31:45.079 +03:30 [DBG] Creating Implicit Flow response.
2019-11-28 18:31:45.079 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-28 18:31:45.079 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-28 18:31:45.264 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-28 18:31:45.441 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Ky2g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kXlA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK2E5AK6H8:0000000E","TimeStamp":"2019-11-28T15:01:45.0000000Z","ProcessId":19856,"LocalIpAddress":"127.0.0.1:34517","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-28 18:31:45.442 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"V2FIbYNtqfxMG0O2dbfTD0A3jLUML0xQJHFvjGrahlfIO","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-28 18:31:45.457 +03:30 [DBG] Augmenting SignInContext
2019-11-28 18:31:45.458 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-28 18:31:55.523 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-28 18:31:55.528 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 18:31:55.528 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 18:31:55.531 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-28 18:31:55.531 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-28 18:31:55.532 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-28 18:31:55.532 +03:30 [DBG] Start discovery request
2019-11-28 18:31:55.584 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-28 18:31:55.584 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-28 18:31:55.584 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-28 18:31:55.585 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-28 18:31:55.586 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-28 18:31:55.586 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-28 18:31:55.586 +03:30 [DBG] Start key discovery request
2019-11-29 00:04:21.231 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 00:04:21.281 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 00:04:21.292 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 00:04:21.292 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 00:04:21.292 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 00:04:21.292 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 00:04:21.292 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 00:04:21.292 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 00:04:21.880 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 00:04:21.882 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 00:04:21.882 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 00:04:21.882 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 00:04:21.882 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 00:04:21.882 +03:30 [DBG] Error Url: /home/error
2019-11-29 00:04:21.883 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 00:04:58.342 +03:30 [INF] AuthenticationScheme: Identity.Application was challenged.
2019-11-29 00:05:16.392 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 00:05:16.401 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:05:16.401 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:05:16.402 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 00:05:16.425 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 00:05:16.425 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 00:05:16.450 +03:30 [DBG] Start discovery request
2019-11-29 00:05:16.658 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 00:05:16.658 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:05:16.662 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:05:16.662 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 00:05:16.663 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 00:05:16.663 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 00:05:16.670 +03:30 [DBG] Start key discovery request
2019-11-29 00:05:16.792 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 00:05:16.803 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 00:05:16.803 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 00:05:16.813 +03:30 [DBG] Start authorize request
2019-11-29 00:05:16.840 +03:30 [DBG] No user present in authorize request
2019-11-29 00:05:16.863 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:05:16.902 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:17.053 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:05:17.088 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","UiLocales":null,"Nonce":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:05:17.165 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 00:05:19.954 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:05:19.954 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:19.955 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:05:19.957 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:28.156 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:05:29.876 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:05:29.876 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:29.877 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:05:30.919 +03:30 [DBG] Augmenting SignInContext
2019-11-29 00:05:30.922 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 00:05:30.922 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 00:05:30.923 +03:30 [DBG] Adding auth_time claim with value: 1574973330
2019-11-29 00:05:30.938 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 00:05:31.030 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK89CPF9BF:00000005","TimeStamp":"2019-11-28T20:35:31.0000000Z","ProcessId":13648,"LocalIpAddress":"127.0.0.1:33135","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 00:05:31.033 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:31.078 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 00:05:31.079 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 00:05:31.079 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 00:05:31.087 +03:30 [DBG] Start authorize callback request
2019-11-29 00:05:31.091 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:05:31.091 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:05:31.091 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:31.092 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:05:31.092 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","UiLocales":null,"Nonce":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"076ca141bbeb561d8ca48c22adfa4bb5","Raw":{"response_type":"id_token token","client_id":"angular","state":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:05:31.219 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 00:05:31.219 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 00:05:31.219 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 00:05:31.290 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:05:31.290 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:31.291 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:05:31.291 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:32.852 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:05:32.940 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:05:32.940 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:32.940 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:05:32.943 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK89CPF9BF:00000007","TimeStamp":"2019-11-28T20:35:32.0000000Z","ProcessId":13648,"LocalIpAddress":"127.0.0.1:33135","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-29 00:05:32.971 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:33.006 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 00:05:33.006 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 00:05:33.006 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 00:05:33.007 +03:30 [DBG] Start authorize callback request
2019-11-29 00:05:33.013 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:05:33.013 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:05:33.014 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:05:33.014 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:05:33.014 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","UiLocales":null,"Nonce":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"076ca141bbeb561d8ca48c22adfa4bb5","Raw":{"response_type":"id_token token","client_id":"angular","state":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:05:33.076 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 00:05:33.077 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 00:05:33.086 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-29 00:05:33.089 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-29 00:05:33.097 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:05:33.127 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 00:05:33.150 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 00:05:33.151 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:05:33.501 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 00:05:33.623 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****HD7g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zMnw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK89CPF9BG:00000008","TimeStamp":"2019-11-28T20:35:33.0000000Z","ProcessId":13648,"LocalIpAddress":"127.0.0.1:33135","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 00:05:33.625 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"Hcig6CG6Nqv-VA5AodGqpvWlkiEGh0tI-pmJ-h8DsGjeK","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 00:05:33.646 +03:30 [DBG] Augmenting SignInContext
2019-11-29 00:05:33.646 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 00:06:47.939 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 00:06:47.943 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 00:06:47.943 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 00:06:47.944 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 00:06:47.944 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 00:06:47.944 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 00:06:47.944 +03:30 [DBG] Start discovery request
2019-11-29 00:06:48.032 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 00:06:48.033 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 00:06:48.033 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 00:06:48.033 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 00:06:48.034 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 00:06:48.034 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 00:06:48.034 +03:30 [DBG] Start key discovery request
2019-11-29 00:21:44.928 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 00:21:44.980 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 00:21:44.991 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 00:21:44.992 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 00:21:44.992 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 00:21:44.992 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 00:21:44.992 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 00:21:44.992 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 00:21:45.523 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 00:21:45.525 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 00:21:45.525 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 00:21:45.525 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 00:21:45.525 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 00:21:45.526 +03:30 [DBG] Error Url: /home/error
2019-11-29 00:21:45.526 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 00:29:27.454 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 00:29:27.499 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 00:29:27.509 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 00:29:27.509 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 00:29:27.509 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 00:29:27.509 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 00:29:27.509 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 00:29:27.509 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 00:29:33.977 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 00:29:33.980 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 00:29:33.980 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 00:29:33.980 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 00:29:33.981 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 00:29:33.981 +03:30 [DBG] Error Url: /home/error
2019-11-29 00:29:33.981 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 00:29:46.619 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:29:46.727 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 00:29:46.728 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 00:29:46.730 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 00:29:46.754 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRK8NDLJRA1:00000002","TimeStamp":"2019-11-28T20:59:46.0000000Z","ProcessId":12344,"LocalIpAddress":"127.0.0.1:23125","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-29 00:29:46.891 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 00:29:46.901 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 00:29:46.902 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 00:29:46.908 +03:30 [DBG] Processing signout callback request
2019-11-29 00:29:46.959 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:29:46.960 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 00:29:46.960 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 00:29:46.960 +03:30 [INF] Successful signout callback.
2019-11-29 00:29:46.960 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 00:29:46.960 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 00:30:02.100 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 00:30:02.109 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:30:02.110 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:30:02.129 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 00:30:02.133 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 00:30:02.141 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 00:30:02.158 +03:30 [DBG] Start discovery request
2019-11-29 00:30:02.321 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 00:30:02.322 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:30:02.322 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:30:02.322 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 00:30:02.323 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 00:30:02.323 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 00:30:02.330 +03:30 [DBG] Start key discovery request
2019-11-29 00:30:02.484 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 00:30:02.490 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 00:30:02.491 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 00:30:02.498 +03:30 [DBG] Start authorize request
2019-11-29 00:30:02.513 +03:30 [DBG] No user present in authorize request
2019-11-29 00:30:02.542 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:30:02.553 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:02.665 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:30:02.685 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","UiLocales":null,"Nonce":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:30:02.708 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 00:30:06.057 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:30:06.057 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:06.058 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:30:06.062 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:15.460 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:30:20.375 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:30:20.375 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:20.376 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:30:21.505 +03:30 [DBG] Augmenting SignInContext
2019-11-29 00:30:21.508 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 00:30:21.508 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 00:30:21.508 +03:30 [DBG] Adding auth_time claim with value: 1574974821
2019-11-29 00:30:21.519 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 00:30:21.590 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK8NDLJRA1:00000009","TimeStamp":"2019-11-28T21:00:21.0000000Z","ProcessId":12344,"LocalIpAddress":"127.0.0.1:23125","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 00:30:21.592 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:21.637 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 00:30:21.638 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 00:30:21.639 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 00:30:21.647 +03:30 [DBG] Start authorize callback request
2019-11-29 00:30:21.651 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:30:21.651 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:30:21.651 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:21.652 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:30:21.652 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","UiLocales":null,"Nonce":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"81858ad79715bede4cc85dd0665bb6d1","Raw":{"response_type":"id_token token","client_id":"angular","state":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:30:21.775 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 00:30:21.775 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 00:30:21.775 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 00:30:21.854 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:30:21.854 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:21.855 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:30:21.855 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:31.456 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:30:31.522 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:30:31.522 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:31.523 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:30:31.525 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK8NDLJRA1:0000000D","TimeStamp":"2019-11-28T21:00:31.0000000Z","ProcessId":12344,"LocalIpAddress":"127.0.0.1:23125","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-29 00:30:31.546 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:31.564 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 00:30:31.564 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 00:30:31.564 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 00:30:31.565 +03:30 [DBG] Start authorize callback request
2019-11-29 00:30:31.567 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:30:31.567 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:30:31.567 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:30:31.567 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:30:31.567 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","UiLocales":null,"Nonce":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"81858ad79715bede4cc85dd0665bb6d1","Raw":{"response_type":"id_token token","client_id":"angular","state":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","redirect_uri":"http://localhost:4200/","scope":"openid profile orders","nonce":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:30:31.639 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 00:30:31.640 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 00:30:31.649 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-29 00:30:31.652 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-29 00:30:31.657 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:30:31.680 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 00:30:31.697 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 00:30:31.698 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:30:31.988 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 00:30:32.137 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lQ0g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Xt8A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK8NDLJRA1:0000000E","TimeStamp":"2019-11-28T21:00:32.0000000Z","ProcessId":12344,"LocalIpAddress":"127.0.0.1:23125","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 00:30:32.140 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"n91o571ooQO_kjJ34Ggxn4AmIFf8ITfFkgttsNVLD54tv","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 00:30:32.163 +03:30 [DBG] Augmenting SignInContext
2019-11-29 00:30:32.163 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 00:34:12.636 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 00:34:12.689 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 00:34:12.704 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 00:34:12.704 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 00:34:12.704 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 00:34:12.704 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 00:34:12.704 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 00:34:12.704 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 00:34:13.264 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 00:34:13.266 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 00:34:13.266 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 00:34:13.266 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 00:34:13.266 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 00:34:13.266 +03:30 [DBG] Error Url: /home/error
2019-11-29 00:34:13.266 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 00:39:40.143 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:39:40.260 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 00:39:40.262 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 00:39:40.262 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 00:39:40.287 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRK8Q2LEEGK:00000002","TimeStamp":"2019-11-28T21:09:40.0000000Z","ProcessId":5860,"LocalIpAddress":"127.0.0.1:12903","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-29 00:39:40.376 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 00:39:40.386 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 00:39:40.386 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 00:39:40.393 +03:30 [DBG] Processing signout callback request
2019-11-29 00:39:40.456 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:39:40.456 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 00:39:40.456 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 00:39:40.456 +03:30 [INF] Successful signout callback.
2019-11-29 00:39:40.456 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 00:39:40.456 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 00:39:52.058 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 00:39:52.066 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:39:52.067 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:39:52.070 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 00:39:52.074 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 00:39:52.074 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 00:39:52.079 +03:30 [DBG] Start discovery request
2019-11-29 00:39:52.152 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 00:39:52.153 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:39:52.153 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:39:52.153 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 00:39:52.154 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 00:39:52.154 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 00:39:52.160 +03:30 [DBG] Start key discovery request
2019-11-29 00:39:52.237 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 00:39:52.240 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 00:39:52.240 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 00:39:52.244 +03:30 [DBG] Start authorize request
2019-11-29 00:39:52.254 +03:30 [DBG] No user present in authorize request
2019-11-29 00:39:52.261 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:39:52.270 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:39:52.360 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:39:52.384 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY","UiLocales":null,"Nonce":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:39:52.407 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 00:39:54.755 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:39:54.755 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:39:54.756 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:39:54.760 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:40:03.440 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:40:04.551 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:40:04.552 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:40:04.552 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:40:05.624 +03:30 [DBG] Augmenting SignInContext
2019-11-29 00:40:05.628 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 00:40:05.628 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 00:40:05.628 +03:30 [DBG] Adding auth_time claim with value: 1574975405
2019-11-29 00:40:05.641 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 00:40:05.709 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRK8Q2LEEGK:00000009","TimeStamp":"2019-11-28T21:10:05.0000000Z","ProcessId":5860,"LocalIpAddress":"127.0.0.1:12903","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-29 00:40:05.711 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:40:05.751 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 00:40:05.752 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 00:40:05.752 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 00:40:05.762 +03:30 [DBG] Start authorize callback request
2019-11-29 00:40:05.767 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:40:05.767 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:40:05.767 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:40:05.768 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:40:05.768 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY","UiLocales":null,"Nonce":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd6181ad4e237f32f6ea3a4e7199cfb6","Raw":{"response_type":"id_token token","client_id":"angular","state":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"7h3atFRUJFbVz0q8317ypMUxTdSsvV73SAlODn5-qS9PY"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:40:12.366 +03:30 [INF] {"Details":"System.NotImplementedException: The method or operation is not implemented.\r\n   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\\InHand\\Desktop\\Microservices\\Final Project\\eShop\\src\\Services\\Identity\\Identity.API\\Services\\ProfileService.cs:line 39\r\n   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeInteractionResponseGenerator.cs:line 122\r\n   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeInteractionResponseGenerator.cs:line 83\r\n   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeEndpointBase.cs:line 81\r\n   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeCallbackEndpoint.cs:line 71\r\n   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeCallbackEndpoint.cs:line 81\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"The method or operation is not implemented.","ActivityId":"0HLRK8Q2LEEGK:0000000A","TimeStamp":"2019-11-28T21:10:12.0000000Z","ProcessId":5860,"LocalIpAddress":"127.0.0.1:12903","RemoteIpAddress":"127.0.0.1","$type":"UnhandledExceptionEvent"}
2019-11-29 00:40:12.366 +03:30 [FTL] Unhandled exception: The method or operation is not implemented.
System.NotImplementedException: The method or operation is not implemented.
   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 39
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 122
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 83
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 71
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 81
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
2019-11-29 00:40:12.389 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NotImplementedException: The method or operation is not implemented.
   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 39
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 122
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 83
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 71
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 81
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-29 00:40:23.849 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 00:40:23.908 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 00:40:23.921 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 00:40:23.922 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 00:40:23.922 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 00:40:23.922 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 00:40:23.922 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 00:40:23.922 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 00:40:24.508 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 00:40:24.510 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 00:40:24.510 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 00:40:24.510 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 00:40:24.511 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 00:40:24.511 +03:30 [DBG] Error Url: /home/error
2019-11-29 00:40:24.511 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 00:42:40.509 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 00:42:40.574 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 00:42:40.588 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 00:42:40.588 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 00:42:40.588 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 00:42:40.589 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 00:42:40.589 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 00:42:40.589 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 00:42:41.275 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 00:42:41.278 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 00:42:41.278 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 00:42:41.278 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 00:42:41.278 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 00:42:41.278 +03:30 [DBG] Error Url: /home/error
2019-11-29 00:42:41.278 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 00:43:46.910 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 00:43:46.914 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:43:46.914 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:43:46.917 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 00:43:46.926 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 00:43:46.927 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 00:43:46.933 +03:30 [DBG] Start discovery request
2019-11-29 00:43:46.998 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 00:43:46.998 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:43:46.999 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:43:46.999 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 00:43:47.000 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 00:43:47.000 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 00:43:47.007 +03:30 [DBG] Start key discovery request
2019-11-29 00:43:47.063 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 00:43:47.068 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 00:43:47.068 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 00:43:47.076 +03:30 [DBG] Start authorize request
2019-11-29 00:43:47.092 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:43:47.099 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:43:47.122 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:43:47.181 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:43:47.199 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","UiLocales":null,"Nonce":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd6181ad4e237f32f6ea3a4e7199cfb6","Raw":{"response_type":"id_token token","client_id":"angular","state":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:43:48.001 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 00:43:48.001 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 00:43:48.001 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 00:43:48.184 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 00:43:48.184 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:43:48.184 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:43:48.185 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 00:43:48.185 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 00:43:48.185 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 00:43:48.186 +03:30 [DBG] Start discovery request
2019-11-29 00:43:48.222 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:43:48.223 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:43:48.223 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:43:48.228 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:43:48.251 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 00:43:48.279 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:43:48.279 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:43:48.280 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 00:43:48.281 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 00:43:48.281 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 00:43:48.281 +03:30 [DBG] Start key discovery request
2019-11-29 00:43:50.266 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 00:43:50.390 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:43:50.390 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:43:50.390 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:43:50.411 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRK8UQ2BDKA:00000003","TimeStamp":"2019-11-28T21:13:50.0000000Z","ProcessId":25692,"LocalIpAddress":"127.0.0.1:45705","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-29 00:43:50.434 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:43:50.445 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 00:43:50.446 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 00:43:50.446 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 00:43:50.457 +03:30 [DBG] Start authorize callback request
2019-11-29 00:43:50.462 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:43:50.462 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:43:50.462 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:43:50.463 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:43:50.463 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","UiLocales":null,"Nonce":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd6181ad4e237f32f6ea3a4e7199cfb6","Raw":{"response_type":"id_token token","client_id":"angular","state":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:43:50.554 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 00:43:50.554 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 00:43:50.561 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-29 00:43:50.563 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-29 00:43:50.569 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:43:50.594 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 00:43:50.616 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 00:43:50.617 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:44:51.213 +03:30 [INF] {"Details":"System.ArgumentNullException: Value cannot be null.\r\nParameter name: value\r\n   at System.Security.Claims.Claim..ctor(String type, String value, String valueType, String issuer, String originalIssuer, ClaimsIdentity subject, String propertyKey, String propertyValue)\r\n   at System.Security.Claims.Claim..ctor(String type, String value)\r\n   at Identity.API.Services.ProfileService.GetClaimsFromUser(ApplicationUser user) in E:\\InHand\\Desktop\\Microservices\\Final Project\\eShop\\src\\Services\\Identity\\Identity.API\\Services\\ProfileService.cs:line 100\r\n   at Identity.API.Services.ProfileService.GetProfileDataAsync(ProfileDataRequestContext context) in E:\\InHand\\Desktop\\Microservices\\Final Project\\eShop\\src\\Services\\Identity\\Identity.API\\Services\\ProfileService.cs:line 32\r\n   at IdentityServer4.Services.DefaultClaimsService.GetAccessTokenClaimsAsync(ClaimsPrincipal subject, Resources resources, ValidatedRequest request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Services\\Default\\DefaultClaimsService.cs:line 212\r\n   at IdentityServer4.Services.DefaultTokenService.CreateAccessTokenAsync(TokenCreationRequest request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Services\\Default\\DefaultTokenService.cs:line 159\r\n   at IdentityServer4.ResponseHandling.AuthorizeResponseGenerator.CreateImplicitFlowResponseAsync(ValidatedAuthorizeRequest request, String authorizationCode) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeResponseGenerator.cs:line 154\r\n   at IdentityServer4.ResponseHandling.AuthorizeResponseGenerator.CreateResponseAsync(ValidatedAuthorizeRequest request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeResponseGenerator.cs:line 81\r\n   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeEndpointBase.cs:line 99\r\n   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeCallbackEndpoint.cs:line 71\r\n   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeCallbackEndpoint.cs:line 81\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Value cannot be null.\r\nParameter name: value","ActivityId":"0HLRK8UQ2BDK8:00000006","TimeStamp":"2019-11-28T21:14:51.0000000Z","ProcessId":25692,"LocalIpAddress":"127.0.0.1:45705","RemoteIpAddress":"127.0.0.1","$type":"UnhandledExceptionEvent"}
2019-11-29 00:44:51.213 +03:30 [FTL] Unhandled exception: Value cannot be null.
Parameter name: value
System.ArgumentNullException: Value cannot be null.
Parameter name: value
   at System.Security.Claims.Claim..ctor(String type, String value, String valueType, String issuer, String originalIssuer, ClaimsIdentity subject, String propertyKey, String propertyValue)
   at System.Security.Claims.Claim..ctor(String type, String value)
   at Identity.API.Services.ProfileService.GetClaimsFromUser(ApplicationUser user) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 100
   at Identity.API.Services.ProfileService.GetProfileDataAsync(ProfileDataRequestContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 32
   at IdentityServer4.Services.DefaultClaimsService.GetAccessTokenClaimsAsync(ClaimsPrincipal subject, Resources resources, ValidatedRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Services\Default\DefaultClaimsService.cs:line 212
   at IdentityServer4.Services.DefaultTokenService.CreateAccessTokenAsync(TokenCreationRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Services\Default\DefaultTokenService.cs:line 159
   at IdentityServer4.ResponseHandling.AuthorizeResponseGenerator.CreateImplicitFlowResponseAsync(ValidatedAuthorizeRequest request, String authorizationCode) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeResponseGenerator.cs:line 154
   at IdentityServer4.ResponseHandling.AuthorizeResponseGenerator.CreateResponseAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeResponseGenerator.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 99
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 71
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 81
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
2019-11-29 00:44:51.222 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null.
Parameter name: value
   at System.Security.Claims.Claim..ctor(String type, String value, String valueType, String issuer, String originalIssuer, ClaimsIdentity subject, String propertyKey, String propertyValue)
   at System.Security.Claims.Claim..ctor(String type, String value)
   at Identity.API.Services.ProfileService.GetClaimsFromUser(ApplicationUser user) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 100
   at Identity.API.Services.ProfileService.GetProfileDataAsync(ProfileDataRequestContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 32
   at IdentityServer4.Services.DefaultClaimsService.GetAccessTokenClaimsAsync(ClaimsPrincipal subject, Resources resources, ValidatedRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Services\Default\DefaultClaimsService.cs:line 212
   at IdentityServer4.Services.DefaultTokenService.CreateAccessTokenAsync(TokenCreationRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Services\Default\DefaultTokenService.cs:line 159
   at IdentityServer4.ResponseHandling.AuthorizeResponseGenerator.CreateImplicitFlowResponseAsync(ValidatedAuthorizeRequest request, String authorizationCode) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeResponseGenerator.cs:line 154
   at IdentityServer4.ResponseHandling.AuthorizeResponseGenerator.CreateResponseAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeResponseGenerator.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 99
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 71
   at IdentityServer4.Endpoints.AuthorizeCallbackEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeCallbackEndpoint.cs:line 81
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-29 00:44:53.046 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 00:44:53.046 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 00:44:53.047 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 00:44:53.047 +03:30 [DBG] Start authorize callback request
2019-11-29 00:44:53.048 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:44:53.048 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 00:44:53.048 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 00:44:53.048 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 00:44:53.048 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","UiLocales":null,"Nonce":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd6181ad4e237f32f6ea3a4e7199cfb6","Raw":{"response_type":"id_token token","client_id":"angular","state":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 00:44:53.232 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-29 00:44:53.232 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 00:44:53.232 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 00:44:53.232 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 00:44:54.804 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 00:44:54.908 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 00:44:56.076 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 00:44:56.090 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****J46g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****l_NA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRK8UQ2BDK8:00000007","TimeStamp":"2019-11-28T21:14:56.0000000Z","ProcessId":25692,"LocalIpAddress":"127.0.0.1:45705","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 00:44:56.093 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"0LlFe080woHJeYu-XnbQPV3DhRgdLgqGZjTas26bi8zh0","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 00:44:56.123 +03:30 [DBG] Augmenting SignInContext
2019-11-29 00:44:56.138 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 00:44:59.461 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 00:44:59.461 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:44:59.462 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:44:59.462 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 00:44:59.462 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 00:44:59.462 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 00:44:59.462 +03:30 [DBG] Start discovery request
2019-11-29 00:44:59.481 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 00:44:59.481 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 00:44:59.481 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 00:44:59.481 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 00:44:59.481 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 00:44:59.481 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 00:44:59.481 +03:30 [DBG] Start key discovery request
2019-11-29 11:17:39.460 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 11:17:39.545 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 11:17:39.560 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 11:17:39.560 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 11:17:39.561 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 11:17:39.561 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 11:17:39.561 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 11:17:39.561 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 11:17:40.666 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 11:17:40.669 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 11:17:40.669 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 11:17:40.669 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 11:17:40.669 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 11:17:40.669 +03:30 [DBG] Error Url: /home/error
2019-11-29 11:17:40.669 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 11:17:51.997 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 11:17:52.165 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 11:17:52.166 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 11:17:52.167 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 11:17:52.234 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKK1KEJLJU:00000002","TimeStamp":"2019-11-29T07:47:52.0000000Z","ProcessId":24820,"LocalIpAddress":"127.0.0.1:39090","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-29 11:17:52.370 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 11:17:52.381 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 11:17:52.381 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 11:17:52.388 +03:30 [DBG] Processing signout callback request
2019-11-29 11:17:52.436 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:17:52.436 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 11:17:52.436 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 11:17:52.436 +03:30 [INF] Successful signout callback.
2019-11-29 11:17:52.436 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 11:17:52.436 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 11:18:03.198 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 11:18:03.206 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:18:03.206 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:18:03.208 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:18:03.210 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:18:03.210 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:18:03.216 +03:30 [DBG] Start discovery request
2019-11-29 11:18:03.280 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 11:18:03.280 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:18:03.280 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:18:03.280 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:18:03.281 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:18:03.281 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:18:03.289 +03:30 [DBG] Start key discovery request
2019-11-29 11:18:03.325 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 11:18:03.328 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 11:18:03.328 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 11:18:03.336 +03:30 [DBG] Start authorize request
2019-11-29 11:18:03.343 +03:30 [DBG] No user present in authorize request
2019-11-29 11:18:03.349 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:18:03.356 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:03.412 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:18:03.429 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","UiLocales":null,"Nonce":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 11:18:03.452 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 11:18:05.743 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:18:05.743 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:05.744 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:18:05.748 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:15.735 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 11:18:17.231 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:18:17.232 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:17.233 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:18:17.492 +03:30 [DBG] Augmenting SignInContext
2019-11-29 11:18:17.495 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 11:18:17.495 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 11:18:17.496 +03:30 [DBG] Adding auth_time claim with value: 1575013697
2019-11-29 11:18:17.506 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 11:18:17.544 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKK1KEJLJU:00000005","TimeStamp":"2019-11-29T07:48:17.0000000Z","ProcessId":24820,"LocalIpAddress":"127.0.0.1:39090","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 11:18:17.545 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:17.569 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 11:18:17.570 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 11:18:17.570 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 11:18:17.577 +03:30 [DBG] Start authorize callback request
2019-11-29 11:18:17.582 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:18:17.582 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:18:17.582 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:17.582 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:18:17.583 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","UiLocales":null,"Nonce":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3510111eccc500709a8fe07352ba336c","Raw":{"response_type":"id_token token","client_id":"angular","state":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 11:18:17.666 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 11:18:17.666 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 11:18:17.666 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 11:18:17.743 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:18:17.744 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:17.744 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:18:17.744 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:19.669 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 11:18:19.731 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:18:19.731 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:19.731 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:18:19.734 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders"],"GrantedScopes":["openid","profile","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRKK1KEJLJT:00000007","TimeStamp":"2019-11-29T07:48:19.0000000Z","ProcessId":24820,"LocalIpAddress":"127.0.0.1:39090","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-29 11:18:19.750 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:19.769 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 11:18:19.769 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 11:18:19.769 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 11:18:19.769 +03:30 [DBG] Start authorize callback request
2019-11-29 11:18:19.772 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:18:19.773 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:18:19.773 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:18:19.773 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:18:19.773 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders","State":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","UiLocales":null,"Nonce":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3510111eccc500709a8fe07352ba336c","Raw":{"response_type":"id_token token","client_id":"angular","state":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders","nonce":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 11:18:19.816 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 11:18:19.816 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 11:18:19.822 +03:30 [INF] User consented to scopes: ["openid","profile","orders"]
2019-11-29 11:18:19.825 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","orders"]
2019-11-29 11:18:19.830 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:18:19.847 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 11:18:19.862 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 11:18:19.862 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:18:24.475 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:18:24.576 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 11:18:28.013 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:18:28.026 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****JHRA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****y_jg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKK1KEJLJU:00000007","TimeStamp":"2019-11-29T07:48:28.0000000Z","ProcessId":24820,"LocalIpAddress":"127.0.0.1:39090","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 11:18:28.029 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"nMWbvmTutNf9g3IcQ42YknzumDH2IyaIYmDBka68LbQNy","Scope":"openid profile orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 11:18:28.045 +03:30 [DBG] Augmenting SignInContext
2019-11-29 11:18:28.046 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 11:18:43.935 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 11:18:43.935 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:18:43.935 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:18:43.936 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:18:43.937 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:18:43.937 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:18:43.937 +03:30 [DBG] Start discovery request
2019-11-29 11:18:43.971 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 11:18:43.971 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:18:43.971 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:18:43.972 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:18:43.972 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:18:43.972 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:18:43.972 +03:30 [DBG] Start key discovery request
2019-11-29 11:18:55.301 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 11:18:55.301 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:18:55.301 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:18:55.302 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:18:55.302 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:18:55.303 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:18:55.303 +03:30 [DBG] Start discovery request
2019-11-29 11:18:55.354 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 11:18:55.354 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:18:55.354 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:18:55.355 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:18:55.355 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:18:55.355 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:18:55.356 +03:30 [DBG] Start key discovery request
2019-11-29 11:21:13.080 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 11:21:13.133 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 11:21:13.147 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 11:21:13.147 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 11:21:13.147 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 11:21:13.147 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 11:21:13.147 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 11:21:13.147 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 11:21:13.620 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 11:21:13.630 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:21:13.630 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:21:13.728 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 11:21:13.728 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 11:21:13.729 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 11:21:13.729 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 11:21:13.729 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 11:21:13.729 +03:30 [DBG] Error Url: /home/error
2019-11-29 11:21:13.729 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 11:21:13.793 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:21:13.950 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:21:13.952 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:21:13.969 +03:30 [DBG] Start discovery request
2019-11-29 11:21:14.088 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 11:21:14.089 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:21:14.089 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:21:14.089 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:21:14.090 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:21:14.091 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:21:14.095 +03:30 [DBG] Start key discovery request
2019-11-29 11:21:15.043 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 11:21:15.060 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 11:21:15.061 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 11:21:15.066 +03:30 [DBG] Start authorize request
2019-11-29 11:21:15.083 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:21:15.093 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:21:15.125 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:21:15.213 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:21:15.238 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq","UiLocales":null,"Nonce":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 11:21:15.301 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 11:21:15.301 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 11:21:15.302 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 11:21:15.583 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:21:15.583 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:21:15.583 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:21:15.585 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:21:24.743 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 11:21:24.804 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:21:24.804 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:21:24.805 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:21:24.817 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders","email","address","phone"],"GrantedScopes":["openid","profile","address","email","phone","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRKK3K20AB7:00000006","TimeStamp":"2019-11-29T07:51:24.0000000Z","ProcessId":15632,"LocalIpAddress":"127.0.0.1:44271","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2019-11-29 11:21:24.837 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:21:24.848 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 11:21:24.849 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 11:21:24.849 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 11:21:24.863 +03:30 [DBG] Start authorize callback request
2019-11-29 11:21:24.869 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:21:24.869 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:21:24.869 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:21:24.869 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:21:24.870 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq","UiLocales":null,"Nonce":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 11:21:24.886 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 11:21:24.886 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 11:21:24.898 +03:30 [INF] User consented to scopes: ["openid","profile","address","email","phone","orders"]
2019-11-29 11:21:24.901 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","email","address","phone","orders"]
2019-11-29 11:21:24.907 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:21:24.935 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 11:21:24.951 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 11:21:24.951 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:21:24.963 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:21:25.078 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 11:21:25.079 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:21:25.088 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_VLg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****maaQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKK3K20AB7:00000007","TimeStamp":"2019-11-29T07:51:25.0000000Z","ProcessId":15632,"LocalIpAddress":"127.0.0.1:44271","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 11:21:25.090 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"LieJh0btA57yzarER9HVRaFKNi0A6Z5qd5L5RgyUf4Yhq","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 11:21:46.825 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 11:21:46.825 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:21:46.825 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:21:46.825 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:21:46.827 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:21:46.828 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:21:46.828 +03:30 [DBG] Start discovery request
2019-11-29 11:21:46.875 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 11:21:46.875 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:21:46.875 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:21:46.875 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:21:46.876 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:21:46.876 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:21:46.876 +03:30 [DBG] Start key discovery request
2019-11-29 11:24:35.776 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 11:24:35.777 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:24:35.777 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:24:35.778 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:24:35.779 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:24:35.780 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:24:35.780 +03:30 [DBG] Start discovery request
2019-11-29 11:24:35.858 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 11:24:35.858 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:24:35.858 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:24:35.858 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:24:35.858 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:24:35.859 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:24:35.859 +03:30 [DBG] Start key discovery request
2019-11-29 11:26:48.196 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 11:26:48.196 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:26:48.196 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:26:48.197 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:26:48.197 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:26:48.198 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:26:48.198 +03:30 [DBG] Start discovery request
2019-11-29 11:26:48.465 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 11:26:48.466 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:26:48.466 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:26:48.466 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:26:48.468 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:26:48.468 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:26:48.468 +03:30 [DBG] Start key discovery request
2019-11-29 11:26:48.595 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 11:26:48.596 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 11:26:48.597 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 11:26:48.597 +03:30 [DBG] Start authorize request
2019-11-29 11:26:48.598 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:26:48.598 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:26:48.598 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:26:48.598 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:26:48.598 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"fGXNfnxmliBvvknVwoMDhkOWaT7fptfLCKY-MFSndu9FW","UiLocales":null,"Nonce":"fGXNfnxmliBvvknVwoMDhkOWaT7fptfLCKY-MFSndu9FW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"fGXNfnxmliBvvknVwoMDhkOWaT7fptfLCKY-MFSndu9FW","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"fGXNfnxmliBvvknVwoMDhkOWaT7fptfLCKY-MFSndu9FW"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 11:26:48.615 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-29 11:26:48.615 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 11:26:48.615 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 11:26:48.615 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:26:48.616 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:26:48.622 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 11:26:48.622 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:26:48.628 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****SJiQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****t9Wg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKK3K20AB9:00000003","TimeStamp":"2019-11-29T07:56:48.0000000Z","ProcessId":15632,"LocalIpAddress":"127.0.0.1:44271","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 11:26:48.628 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"fGXNfnxmliBvvknVwoMDhkOWaT7fptfLCKY-MFSndu9FW","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 11:28:30.674 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 11:28:30.676 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:28:30.677 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:28:30.679 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:28:30.680 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:28:30.680 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:28:30.680 +03:30 [DBG] Start discovery request
2019-11-29 11:28:30.711 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 11:28:30.712 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 11:28:30.712 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 11:28:30.712 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:28:30.712 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:28:30.712 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:28:30.712 +03:30 [DBG] Start key discovery request
2019-11-29 11:28:30.753 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 11:28:30.757 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 11:28:30.757 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 11:28:30.757 +03:30 [DBG] Start authorize request
2019-11-29 11:28:30.757 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:28:30.757 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 11:28:30.757 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 11:28:30.758 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 11:28:30.758 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"L67zzncfEvpfWJmntbU1DPeMeyilAv0fAjXNK6RxLD8KT","UiLocales":null,"Nonce":"L67zzncfEvpfWJmntbU1DPeMeyilAv0fAjXNK6RxLD8KT","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"L67zzncfEvpfWJmntbU1DPeMeyilAv0fAjXNK6RxLD8KT","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"L67zzncfEvpfWJmntbU1DPeMeyilAv0fAjXNK6RxLD8KT"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 11:28:30.766 +03:30 [DBG] Consent found in consent store is same as current request, consent is not required
2019-11-29 11:28:30.766 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 11:28:30.766 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 11:28:30.766 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 11:28:30.767 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:28:30.772 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 11:28:30.772 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 11:28:30.777 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mjTQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****hKKg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKK3K20ABA:00000003","TimeStamp":"2019-11-29T07:58:30.0000000Z","ProcessId":15632,"LocalIpAddress":"127.0.0.1:44271","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 11:28:30.778 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"L67zzncfEvpfWJmntbU1DPeMeyilAv0fAjXNK6RxLD8KT","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 11:29:02.241 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 11:29:02.242 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:29:02.242 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:29:02.242 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:29:02.242 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:29:02.243 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:29:02.243 +03:30 [DBG] Start discovery request
2019-11-29 11:29:02.454 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 11:29:02.454 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:29:02.454 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:29:02.456 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:29:02.456 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:29:02.456 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:29:02.456 +03:30 [DBG] Start key discovery request
2019-11-29 11:29:43.991 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 11:29:43.993 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:29:43.994 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:29:43.994 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 11:29:43.995 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 11:29:43.995 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 11:29:43.996 +03:30 [DBG] Start discovery request
2019-11-29 11:29:44.041 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 11:29:44.041 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 11:29:44.042 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 11:29:44.043 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 11:29:44.043 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 11:29:44.043 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 11:29:44.044 +03:30 [DBG] Start key discovery request
2019-11-29 12:17:01.030 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 12:17:01.080 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 12:17:01.090 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 12:17:01.090 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 12:17:01.090 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 12:17:01.090 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 12:17:01.090 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 12:17:01.090 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 12:17:01.796 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 12:17:01.801 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 12:17:01.801 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 12:17:01.801 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 12:17:01.801 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 12:17:01.801 +03:30 [DBG] Error Url: /home/error
2019-11-29 12:17:01.801 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 12:17:48.006 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:17:48.110 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 12:17:48.111 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 12:17:48.112 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 12:17:48.137 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKL2PRPCUF:00000003","TimeStamp":"2019-11-29T08:47:48.0000000Z","ProcessId":13024,"LocalIpAddress":"127.0.0.1:2117","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-29 12:17:48.227 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 12:17:48.239 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 12:17:48.240 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 12:17:48.250 +03:30 [DBG] Processing signout callback request
2019-11-29 12:17:48.304 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:17:48.305 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 12:17:48.305 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 12:17:48.305 +03:30 [INF] Successful signout callback.
2019-11-29 12:17:48.305 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 12:17:48.305 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 12:19:55.959 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:19:55.964 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:19:55.964 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:19:55.965 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:19:55.968 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:19:55.968 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:19:55.973 +03:30 [DBG] Start discovery request
2019-11-29 12:19:56.068 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:19:56.068 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:19:56.068 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:19:56.069 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:19:56.069 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:19:56.070 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:19:56.076 +03:30 [DBG] Start key discovery request
2019-11-29 12:19:56.183 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 12:19:56.186 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 12:19:56.187 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 12:19:56.195 +03:30 [DBG] Start authorize request
2019-11-29 12:19:56.200 +03:30 [DBG] No user present in authorize request
2019-11-29 12:19:56.206 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:19:56.213 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:19:56.312 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:19:56.334 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","UiLocales":null,"Nonce":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:19:56.357 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 12:19:59.222 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:19:59.222 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:19:59.223 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:19:59.227 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:07.156 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:20:08.270 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:20:08.271 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:08.271 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:20:08.550 +03:30 [DBG] Augmenting SignInContext
2019-11-29 12:20:08.554 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 12:20:08.554 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 12:20:08.554 +03:30 [DBG] Adding auth_time claim with value: 1575017408
2019-11-29 12:20:08.561 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 12:20:08.603 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKL2PRPCUH:00000007","TimeStamp":"2019-11-29T08:50:08.0000000Z","ProcessId":13024,"LocalIpAddress":"127.0.0.1:2117","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-29 12:20:08.605 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:08.631 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 12:20:08.632 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 12:20:08.632 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 12:20:08.642 +03:30 [DBG] Start authorize callback request
2019-11-29 12:20:08.648 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:20:08.648 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:20:08.648 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:08.649 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:20:08.649 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","UiLocales":null,"Nonce":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"313f5e2c4525991f14654b97732768d5","Raw":{"response_type":"id_token token","client_id":"angular","state":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:20:08.749 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 12:20:08.751 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 12:20:08.752 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 12:20:08.928 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:20:08.928 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:08.929 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:20:08.929 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:11.843 +03:30 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:20:11.903 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:20:11.904 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:11.904 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:20:11.906 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RequestedScopes":["openid","profile","orders","email","address","phone"],"GrantedScopes":["openid","profile","address","email","phone","orders"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLRKL2PRPCUH:0000000C","TimeStamp":"2019-11-29T08:50:11.0000000Z","ProcessId":13024,"LocalIpAddress":"127.0.0.1:2117","RemoteIpAddress":"127.0.0.1","$type":"ConsentGrantedEvent"}
2019-11-29 12:20:11.923 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:11.938 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 12:20:11.938 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 12:20:11.938 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 12:20:11.938 +03:30 [DBG] Start authorize callback request
2019-11-29 12:20:11.942 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:20:11.942 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:20:11.942 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:20:11.942 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:20:11.943 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","UiLocales":null,"Nonce":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"313f5e2c4525991f14654b97732768d5","Raw":{"response_type":"id_token token","client_id":"angular","state":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:20:11.992 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 12:20:11.992 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 12:20:12.001 +03:30 [INF] User consented to scopes: ["openid","profile","address","email","phone","orders"]
2019-11-29 12:20:12.004 +03:30 [DBG] User indicated to remember consent for scopes: ["openid","profile","email","address","phone","orders"]
2019-11-29 12:20:12.009 +03:30 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:20:12.035 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 12:20:12.055 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 12:20:12.055 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:20:15.887 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 12:20:15.988 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 12:20:15.988 +03:30 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-11-29 12:20:15.999 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****kt4A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****lBMg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKL2PRPCUH:0000000D","TimeStamp":"2019-11-29T08:50:15.0000000Z","ProcessId":13024,"LocalIpAddress":"127.0.0.1:2117","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 12:20:16.002 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"ddTHXy3_DZXE19iykKprnspAcqoFo7tRMLl8_8gUZZtP2","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 12:20:16.019 +03:30 [DBG] Augmenting SignInContext
2019-11-29 12:20:16.019 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 12:20:28.411 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:20:28.411 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:20:28.411 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:20:28.412 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:20:28.413 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:20:28.413 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:20:28.413 +03:30 [DBG] Start discovery request
2019-11-29 12:20:28.468 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:20:28.468 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:20:28.468 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:20:28.469 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:20:28.470 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:20:28.470 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:20:28.470 +03:30 [DBG] Start key discovery request
2019-11-29 12:21:20.592 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 12:21:20.592 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 12:21:20.592 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 12:21:20.593 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:21:20.594 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:21:20.595 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:21:20.595 +03:30 [DBG] Start discovery request
2019-11-29 12:21:20.701 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 12:21:20.701 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 12:21:20.701 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 12:21:20.702 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:21:20.702 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:21:20.702 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:21:20.702 +03:30 [DBG] Start key discovery request
2019-11-29 12:27:16.341 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 12:27:16.398 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 12:27:16.409 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 12:27:16.409 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 12:27:16.409 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 12:27:16.409 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 12:27:16.409 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 12:27:16.410 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 12:27:16.914 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 12:27:16.918 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 12:27:16.918 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 12:27:16.918 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 12:27:16.918 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 12:27:16.918 +03:30 [DBG] Error Url: /home/error
2019-11-29 12:27:16.918 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 12:27:38.386 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:27:38.390 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:27:38.390 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:27:38.394 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:27:38.402 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:27:38.402 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:27:38.409 +03:30 [DBG] Start discovery request
2019-11-29 12:27:38.510 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:27:38.511 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:27:38.511 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:27:38.511 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:27:38.512 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:27:38.512 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:27:38.521 +03:30 [DBG] Start key discovery request
2019-11-29 12:27:58.276 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:27:58.276 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:27:58.277 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:27:58.277 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:27:58.278 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:27:58.278 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:27:58.279 +03:30 [DBG] Start discovery request
2019-11-29 12:27:58.315 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:27:58.317 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:27:58.317 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:27:58.317 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:27:58.318 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:27:58.318 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:27:58.318 +03:30 [DBG] Start key discovery request
2019-11-29 12:27:58.443 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 12:27:58.447 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 12:27:58.447 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 12:27:58.455 +03:30 [DBG] Start authorize request
2019-11-29 12:27:58.462 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:27:58.471 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:27:58.492 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:27:58.575 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:27:58.609 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"hJlZk944Mwfus4tAwkmPG0eNfvOqQMx8ULGCQxQS438w8","UiLocales":null,"Nonce":"hJlZk944Mwfus4tAwkmPG0eNfvOqQMx8ULGCQxQS438w8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"313f5e2c4525991f14654b97732768d5","Raw":{"response_type":"id_token token","client_id":"angular","state":"hJlZk944Mwfus4tAwkmPG0eNfvOqQMx8ULGCQxQS438w8","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"hJlZk944Mwfus4tAwkmPG0eNfvOqQMx8ULGCQxQS438w8"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:27:59.576 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 12:27:59.576 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 12:27:59.576 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 12:28:06.660 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:28:06.773 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 12:28:06.776 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 12:28:06.777 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 12:28:06.800 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKL8H6BI71:00000005","TimeStamp":"2019-11-29T08:58:06.0000000Z","ProcessId":13644,"LocalIpAddress":"127.0.0.1:7183","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-29 12:28:06.869 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 12:28:06.874 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 12:28:06.874 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 12:28:06.882 +03:30 [DBG] Processing signout callback request
2019-11-29 12:28:06.899 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:28:06.899 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 12:28:06.900 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 12:28:06.900 +03:30 [INF] Successful signout callback.
2019-11-29 12:28:06.900 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 12:28:06.900 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 12:28:13.563 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:28:13.563 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:28:13.567 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:28:13.567 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:28:13.567 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:28:13.567 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:28:13.568 +03:30 [DBG] Start discovery request
2019-11-29 12:28:13.592 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:28:13.593 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:28:13.593 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:28:13.594 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:28:13.594 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:28:13.594 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:28:13.594 +03:30 [DBG] Start key discovery request
2019-11-29 12:28:13.716 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 12:28:13.717 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 12:28:13.717 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 12:28:13.718 +03:30 [DBG] Start authorize request
2019-11-29 12:28:13.718 +03:30 [DBG] No user present in authorize request
2019-11-29 12:28:13.718 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:28:13.724 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:28:13.724 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:28:13.725 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme","UiLocales":null,"Nonce":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:28:13.725 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 12:28:16.473 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:28:16.473 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:28:16.474 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:28:16.477 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:28:23.080 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:28:25.991 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:28:25.992 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:28:25.993 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:28:26.493 +03:30 [DBG] Augmenting SignInContext
2019-11-29 12:28:26.496 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 12:28:26.497 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 12:28:26.497 +03:30 [DBG] Adding auth_time claim with value: 1575017906
2019-11-29 12:28:26.507 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 12:28:26.558 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKL8H6BI71:00000009","TimeStamp":"2019-11-29T08:58:26.0000000Z","ProcessId":13644,"LocalIpAddress":"127.0.0.1:7183","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-29 12:28:26.560 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:28:26.586 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 12:28:26.587 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 12:28:26.587 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 12:28:26.596 +03:30 [DBG] Start authorize callback request
2019-11-29 12:28:26.602 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:28:26.602 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:28:26.602 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:28:26.602 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:28:26.602 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme","UiLocales":null,"Nonce":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4f273046423d294a925fe16f40f04734","Raw":{"response_type":"id_token token","client_id":"angular","state":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"Gu22tim-_C03S-VFI7kfFno6K0pO4GyGqR7-_u_rgBgme"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:28:26.692 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 12:28:26.692 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 12:28:26.692 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 12:29:23.486 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 12:29:23.537 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 12:29:23.549 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 12:29:23.549 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 12:29:23.549 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 12:29:23.549 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 12:29:23.549 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 12:29:23.549 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 12:29:24.213 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 12:29:24.215 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 12:29:24.216 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 12:29:24.216 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 12:29:24.216 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 12:29:24.216 +03:30 [DBG] Error Url: /home/error
2019-11-29 12:29:24.216 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 12:29:44.357 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:29:44.468 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 12:29:44.469 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 12:29:44.470 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 12:29:44.498 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKL9N49GOG:00000002","TimeStamp":"2019-11-29T08:59:44.0000000Z","ProcessId":7060,"LocalIpAddress":"127.0.0.1:38974","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-29 12:30:06.481 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:30:06.490 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:30:06.490 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:30:06.492 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:30:06.498 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:30:06.498 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:30:06.506 +03:30 [DBG] Start discovery request
2019-11-29 12:30:06.589 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:30:06.589 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:30:06.589 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:30:06.589 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:30:06.590 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:30:06.590 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:30:06.595 +03:30 [DBG] Start key discovery request
2019-11-29 12:30:06.648 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 12:30:06.654 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 12:30:06.654 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 12:30:06.659 +03:30 [DBG] Start authorize request
2019-11-29 12:30:06.665 +03:30 [DBG] No user present in authorize request
2019-11-29 12:30:06.678 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:30:06.707 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:30:06.760 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:30:06.774 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","UiLocales":null,"Nonce":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:30:06.789 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 12:30:09.706 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:30:09.707 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:30:09.707 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:30:09.713 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:30:18.117 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:30:18.180 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:30:18.180 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:30:18.180 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:30:19.336 +03:30 [DBG] Augmenting SignInContext
2019-11-29 12:30:19.339 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 12:30:19.339 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 12:30:19.339 +03:30 [DBG] Adding auth_time claim with value: 1575018019
2019-11-29 12:30:19.348 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 12:30:19.416 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKL9N49GOF:00000005","TimeStamp":"2019-11-29T09:00:19.0000000Z","ProcessId":7060,"LocalIpAddress":"127.0.0.1:38974","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-29 12:30:19.419 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:30:19.507 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 12:30:19.508 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 12:30:19.508 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 12:30:19.518 +03:30 [DBG] Start authorize callback request
2019-11-29 12:30:19.525 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:30:19.525 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:30:19.525 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:30:19.525 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:30:19.526 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","UiLocales":null,"Nonce":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b1086d4ac7f338ead4d4149e2effe789","Raw":{"response_type":"id_token token","client_id":"angular","state":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:30:19.644 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 12:30:19.645 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 12:30:19.647 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 12:31:44.106 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:31:44.106 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:31:44.106 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:31:44.107 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:31:44.107 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:31:44.107 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:31:44.108 +03:30 [DBG] Start discovery request
2019-11-29 12:31:44.177 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:31:44.178 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:31:44.178 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:31:44.178 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:31:44.178 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:31:44.179 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:31:44.179 +03:30 [DBG] Start key discovery request
2019-11-29 12:31:44.518 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 12:31:44.518 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 12:31:44.518 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 12:31:44.518 +03:30 [DBG] Start authorize request
2019-11-29 12:31:44.518 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:31:44.518 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:31:44.519 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:31:44.519 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:31:44.519 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"pSVAzNi2Y-byJMi20UZsfAQAHbZ0GUGaYJA0RL7gzPHWr","UiLocales":null,"Nonce":"pSVAzNi2Y-byJMi20UZsfAQAHbZ0GUGaYJA0RL7gzPHWr","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"pSVAzNi2Y-byJMi20UZsfAQAHbZ0GUGaYJA0RL7gzPHWr","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"pSVAzNi2Y-byJMi20UZsfAQAHbZ0GUGaYJA0RL7gzPHWr"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:31:44.520 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 12:31:44.520 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 12:31:44.520 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 12:31:55.477 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 12:31:55.477 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:31:55.477 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:31:55.479 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 12:31:55.479 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 12:31:55.479 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 12:31:55.479 +03:30 [DBG] Start discovery request
2019-11-29 12:31:55.509 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 12:31:55.509 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 12:31:55.509 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 12:31:55.510 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 12:31:55.510 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 12:31:55.510 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 12:31:55.510 +03:30 [DBG] Start key discovery request
2019-11-29 12:31:55.554 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 12:31:55.555 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 12:31:55.555 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 12:31:55.555 +03:30 [DBG] Start authorize request
2019-11-29 12:31:55.555 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:31:55.555 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:31:55.555 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:31:55.555 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:31:55.555 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"Ls03lZBWT4szXKWw1ifvTDsm7hjnzPinwmGO_j5oWYSfS","UiLocales":null,"Nonce":"Ls03lZBWT4szXKWw1ifvTDsm7hjnzPinwmGO_j5oWYSfS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"Ls03lZBWT4szXKWw1ifvTDsm7hjnzPinwmGO_j5oWYSfS","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"Ls03lZBWT4szXKWw1ifvTDsm7hjnzPinwmGO_j5oWYSfS"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:31:55.626 +03:30 [DBG] user_consent grant with value: angular|5c353957-2e04-4814-820b-2bfdf5b6c246 not found in store.
2019-11-29 12:31:55.626 +03:30 [DBG] Found no prior consent from consent store, consent is required
2019-11-29 12:31:55.626 +03:30 [INF] Showing consent: User has not yet consented
2019-11-29 12:34:42.537 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 12:34:42.614 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 12:34:42.628 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 12:34:42.628 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 12:34:42.628 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 12:34:42.629 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 12:34:42.629 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 12:34:42.629 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 12:34:43.373 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 12:34:43.375 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 12:34:43.375 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 12:34:43.375 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 12:34:43.375 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 12:34:43.375 +03:30 [DBG] Error Url: /home/error
2019-11-29 12:34:43.375 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 12:34:56.446 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:34:56.563 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 12:34:56.564 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 12:34:56.565 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 12:34:56.593 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKLCM884DP:00000002","TimeStamp":"2019-11-29T09:04:56.0000000Z","ProcessId":5956,"LocalIpAddress":"127.0.0.1:4816","RemoteIpAddress":"127.0.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-29 12:35:00.574 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:35:00.600 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:35:00.666 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:35:00.671 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:35:08.697 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 12:35:09.837 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:35:09.838 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:35:09.838 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:35:10.872 +03:30 [DBG] Augmenting SignInContext
2019-11-29 12:35:10.877 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 12:35:10.877 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 12:35:10.877 +03:30 [DBG] Adding auth_time claim with value: 1575018310
2019-11-29 12:35:10.888 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 12:35:10.958 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKLCM884DP:00000003","TimeStamp":"2019-11-29T09:05:10.0000000Z","ProcessId":5956,"LocalIpAddress":"127.0.0.1:4816","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2019-11-29 12:35:10.960 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:35:11.010 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 12:35:11.017 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 12:35:11.017 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 12:35:11.028 +03:30 [DBG] Start authorize callback request
2019-11-29 12:35:11.043 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:35:11.043 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 12:35:11.043 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 12:35:11.043 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 12:35:11.062 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","UiLocales":null,"Nonce":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c55d53ce38807f92d22aae41e20e3a2a","Raw":{"response_type":"id_token token","client_id":"angular","state":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 12:35:11.199 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 12:35:11.211 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 12:35:11.227 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 12:35:11.228 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 12:35:12.588 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 12:35:12.703 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 12:35:13.795 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 12:35:13.807 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rfYg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bIjw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKLCM884DQ:00000004","TimeStamp":"2019-11-29T09:05:13.0000000Z","ProcessId":5956,"LocalIpAddress":"127.0.0.1:4816","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 12:35:13.809 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"2cMMHL_hJhTC-fbEU0K6ly3T3nSgv0tnF0tu_-ByiI3m1","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 12:35:13.826 +03:30 [DBG] Augmenting SignInContext
2019-11-29 12:35:13.828 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 14:26:03.166 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 14:26:03.209 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 14:26:03.219 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 14:26:03.219 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 14:26:03.220 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 14:26:03.220 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 14:26:03.220 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 14:26:03.220 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 14:26:03.884 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:26:03.891 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:26:03.891 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:26:03.933 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 14:26:03.933 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 14:26:03.933 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 14:26:03.933 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 14:26:03.933 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 14:26:03.933 +03:30 [DBG] Error Url: /home/error
2019-11-29 14:26:03.933 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 14:26:03.961 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:26:04.092 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:26:04.092 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:26:04.097 +03:30 [DBG] Start discovery request
2019-11-29 14:26:04.175 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:26:04.175 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:26:04.176 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:26:04.177 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:26:04.178 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:26:04.178 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:26:04.184 +03:30 [DBG] Start key discovery request
2019-11-29 14:26:04.843 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 14:26:04.852 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 14:26:04.852 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 14:26:04.856 +03:30 [DBG] Start authorize request
2019-11-29 14:26:04.866 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:26:04.872 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:26:04.890 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:26:04.939 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:26:04.955 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"e-xAwyHnWglPaUc4RXvsPBtmfOl2Q84HJeo-E3_7whzA3","UiLocales":null,"Nonce":"e-xAwyHnWglPaUc4RXvsPBtmfOl2Q84HJeo-E3_7whzA3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"e-xAwyHnWglPaUc4RXvsPBtmfOl2Q84HJeo-E3_7whzA3","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"e-xAwyHnWglPaUc4RXvsPBtmfOl2Q84HJeo-E3_7whzA3"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 14:26:05.018 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 14:26:05.026 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 14:26:05.041 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 14:26:05.043 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:26:05.052 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:26:05.165 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 14:26:05.166 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:26:05.211 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5BMA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yyig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNAT71S8G:00000003","TimeStamp":"2019-11-29T10:56:05.0000000Z","ProcessId":18648,"LocalIpAddress":"127.0.0.1:6631","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 14:26:05.214 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"e-xAwyHnWglPaUc4RXvsPBtmfOl2Q84HJeo-E3_7whzA3","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 14:34:56.968 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:34:56.972 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:34:56.972 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:34:56.973 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:34:56.973 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:34:56.973 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:34:56.974 +03:30 [DBG] Start discovery request
2019-11-29 14:34:57.014 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:34:57.015 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:34:57.016 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:34:57.016 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:34:57.016 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:34:57.016 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:34:57.016 +03:30 [DBG] Start key discovery request
2019-11-29 14:38:44.381 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 14:38:44.438 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 14:38:44.471 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 14:38:44.471 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 14:38:44.471 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 14:38:44.472 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 14:38:44.472 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 14:38:44.472 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 14:38:45.615 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 14:38:45.617 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 14:38:45.617 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 14:38:45.617 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 14:38:45.617 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 14:38:45.617 +03:30 [DBG] Error Url: /home/error
2019-11-29 14:38:45.617 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 14:38:55.686 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:38:55.693 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:38:55.693 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:38:55.696 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:38:55.716 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:38:55.717 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:38:55.721 +03:30 [DBG] Start discovery request
2019-11-29 14:38:55.775 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:38:55.775 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:38:55.776 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:38:55.776 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:38:55.776 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:38:55.777 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:38:55.782 +03:30 [DBG] Start key discovery request
2019-11-29 14:38:55.925 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 14:38:55.930 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 14:38:55.930 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 14:38:55.936 +03:30 [DBG] Start authorize request
2019-11-29 14:38:55.957 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:38:55.964 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:38:55.986 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:38:56.048 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:38:56.066 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"IPgBFAcfrmOrg72Oomo2yf23cWTszdo9FT6fQ0whBOzab","UiLocales":null,"Nonce":"IPgBFAcfrmOrg72Oomo2yf23cWTszdo9FT6fQ0whBOzab","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"19c96bab43e59d5cbe9a2eedf344f411","Raw":{"response_type":"id_token token","client_id":"angular","state":"IPgBFAcfrmOrg72Oomo2yf23cWTszdo9FT6fQ0whBOzab","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"IPgBFAcfrmOrg72Oomo2yf23cWTszdo9FT6fQ0whBOzab"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 14:38:56.242 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 14:38:56.257 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 14:38:56.284 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 14:38:56.284 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:39:00.389 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:39:00.528 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 14:39:02.057 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:39:02.133 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****B1FA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****j2gA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRRI:00000003","TimeStamp":"2019-11-29T11:09:02.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 14:39:02.136 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"IPgBFAcfrmOrg72Oomo2yf23cWTszdo9FT6fQ0whBOzab","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 14:39:05.388 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:39:05.388 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:39:05.388 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:39:05.391 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:39:05.392 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:39:05.392 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:39:05.392 +03:30 [DBG] Start discovery request
2019-11-29 14:39:05.424 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:39:05.425 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:39:05.425 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:39:05.425 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:39:05.426 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:39:05.426 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:39:05.427 +03:30 [DBG] Start key discovery request
2019-11-29 14:39:25.427 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 14:39:25.616 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 14:39:25.618 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 14:39:25.619 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 14:39:25.620 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKNI02KRRJ:00000005","TimeStamp":"2019-11-29T11:09:25.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-29 14:39:25.737 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 14:39:25.742 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 14:39:25.742 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 14:39:25.754 +03:30 [DBG] Processing signout callback request
2019-11-29 14:39:25.784 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:39:25.784 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 14:39:25.784 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 14:39:25.784 +03:30 [INF] Successful signout callback.
2019-11-29 14:39:25.785 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 14:39:25.785 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 14:41:18.260 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:41:18.262 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:41:18.262 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:41:18.262 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:41:18.285 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:41:18.286 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:41:18.286 +03:30 [DBG] Start discovery request
2019-11-29 14:41:18.302 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:41:18.302 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:41:18.302 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:41:18.302 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:41:18.303 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:41:18.303 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:41:18.303 +03:30 [DBG] Start key discovery request
2019-11-29 14:41:18.318 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 14:41:18.319 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 14:41:18.319 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 14:41:18.319 +03:30 [DBG] Start authorize request
2019-11-29 14:41:18.319 +03:30 [DBG] No user present in authorize request
2019-11-29 14:41:18.320 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:41:18.321 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:41:18.321 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:41:18.322 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW","UiLocales":null,"Nonce":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 14:41:18.322 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 14:41:21.721 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:41:21.721 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:41:21.721 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:41:21.725 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:41:33.389 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 14:41:35.629 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:41:35.629 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:41:35.631 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:41:36.046 +03:30 [DBG] Augmenting SignInContext
2019-11-29 14:41:36.050 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 14:41:36.052 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 14:41:36.052 +03:30 [DBG] Adding auth_time claim with value: 1575025896
2019-11-29 14:41:36.064 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 14:41:36.115 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKNI02KRRL:00000003","TimeStamp":"2019-11-29T11:11:36.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 14:41:36.117 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:41:36.165 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 14:41:36.167 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 14:41:36.167 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 14:41:36.182 +03:30 [DBG] Start authorize callback request
2019-11-29 14:41:36.190 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:41:36.190 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:41:36.190 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:41:36.191 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:41:36.191 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW","UiLocales":null,"Nonce":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8122e8d7258e7d026e4314459ce07f0","Raw":{"response_type":"id_token token","client_id":"angular","state":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 14:41:36.262 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 14:41:36.262 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 14:41:36.262 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 14:41:36.262 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:41:38.054 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:41:38.062 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 14:41:39.081 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:41:39.088 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****zk_Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****T0rA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRRJ:0000000E","TimeStamp":"2019-11-29T11:11:39.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 14:41:39.088 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"zri74qlwPWW7grMaZcC1KWSM-g3kA9vU1fS2c5tO3yuiW","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 14:41:39.098 +03:30 [DBG] Augmenting SignInContext
2019-11-29 14:41:39.099 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 14:41:43.730 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:41:43.730 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:41:43.730 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:41:43.731 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:41:43.731 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:41:43.731 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:41:43.731 +03:30 [DBG] Start discovery request
2019-11-29 14:41:43.917 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:41:43.917 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:41:43.917 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:41:43.917 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:41:43.918 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:41:43.918 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:41:43.918 +03:30 [DBG] Start key discovery request
2019-11-29 14:48:29.303 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:48:29.303 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:48:29.303 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:48:29.304 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:48:29.304 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:48:29.304 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:48:29.304 +03:30 [DBG] Start discovery request
2019-11-29 14:48:29.372 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:48:29.373 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:48:29.373 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:48:29.373 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:48:29.373 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:48:29.373 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:48:29.374 +03:30 [DBG] Start key discovery request
2019-11-29 14:48:29.427 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 14:48:29.427 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 14:48:29.427 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 14:48:29.427 +03:30 [DBG] Start authorize request
2019-11-29 14:48:29.427 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:48:29.427 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:48:29.427 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:48:29.428 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:48:29.428 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"NrXQaA3huvSeer8MofM4aZvZ680wqa9sTqOUMftvMRpoo","UiLocales":null,"Nonce":"NrXQaA3huvSeer8MofM4aZvZ680wqa9sTqOUMftvMRpoo","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8122e8d7258e7d026e4314459ce07f0","Raw":{"response_type":"id_token token","client_id":"angular","state":"NrXQaA3huvSeer8MofM4aZvZ680wqa9sTqOUMftvMRpoo","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"NrXQaA3huvSeer8MofM4aZvZ680wqa9sTqOUMftvMRpoo"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 14:48:29.767 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 14:48:29.767 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 14:48:29.767 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 14:48:29.767 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:50:40.996 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:50:41.004 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 14:50:42.160 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:50:42.165 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****uC4A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3onQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRRN:00000003","TimeStamp":"2019-11-29T11:20:42.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 14:50:42.165 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"NrXQaA3huvSeer8MofM4aZvZ680wqa9sTqOUMftvMRpoo","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 14:50:51.282 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:50:51.282 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:50:51.282 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:50:51.282 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:50:51.286 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:50:51.286 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:50:51.286 +03:30 [DBG] Start discovery request
2019-11-29 14:50:51.321 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:50:51.321 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:50:51.321 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:50:51.322 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:50:51.322 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:50:51.322 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:50:51.322 +03:30 [DBG] Start key discovery request
2019-11-29 14:53:20.446 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:53:20.447 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:53:20.447 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:53:20.449 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:53:20.450 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:53:20.450 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:53:20.451 +03:30 [DBG] Start discovery request
2019-11-29 14:53:20.480 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:53:20.492 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:53:20.492 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:53:20.493 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:53:20.493 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:53:20.494 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:53:20.494 +03:30 [DBG] Start key discovery request
2019-11-29 14:53:20.531 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 14:53:20.532 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 14:53:20.532 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 14:53:20.532 +03:30 [DBG] Start authorize request
2019-11-29 14:53:20.532 +03:30 [DBG] No user present in authorize request
2019-11-29 14:53:20.533 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:53:20.533 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:53:20.533 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:53:20.533 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"rOQE4oHBrSxEPB5S4cc5SIp32jEVoQzRtFXGcr_lseb_2","UiLocales":null,"Nonce":"rOQE4oHBrSxEPB5S4cc5SIp32jEVoQzRtFXGcr_lseb_2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"rOQE4oHBrSxEPB5S4cc5SIp32jEVoQzRtFXGcr_lseb_2","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"rOQE4oHBrSxEPB5S4cc5SIp32jEVoQzRtFXGcr_lseb_2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 14:53:20.533 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 14:53:22.656 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:53:22.656 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:53:22.656 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:53:22.657 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:56:03.699 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:56:03.699 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:56:03.699 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:56:03.700 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:56:03.701 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:56:03.701 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:56:03.701 +03:30 [DBG] Start discovery request
2019-11-29 14:56:03.808 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:56:03.808 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:56:03.808 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:56:03.809 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:56:03.809 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:56:03.809 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:56:03.809 +03:30 [DBG] Start key discovery request
2019-11-29 14:56:03.867 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 14:56:03.868 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 14:56:03.868 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 14:56:03.868 +03:30 [DBG] Start authorize request
2019-11-29 14:56:03.868 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:56:03.868 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 14:56:03.868 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 14:56:03.869 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 14:56:03.870 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"mrNpEFH-blEXbrnGbyE8GyAazhQ45TDvNdzoTRfnsysJG","UiLocales":null,"Nonce":"mrNpEFH-blEXbrnGbyE8GyAazhQ45TDvNdzoTRfnsysJG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8122e8d7258e7d026e4314459ce07f0","Raw":{"response_type":"id_token token","client_id":"angular","state":"mrNpEFH-blEXbrnGbyE8GyAazhQ45TDvNdzoTRfnsysJG","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"mrNpEFH-blEXbrnGbyE8GyAazhQ45TDvNdzoTRfnsysJG"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 14:56:04.033 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 14:56:04.033 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 14:56:04.034 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 14:56:04.034 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 14:56:07.006 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:56:07.013 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 14:56:08.944 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 14:56:08.950 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****uE4Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8Nqw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRRP:00000003","TimeStamp":"2019-11-29T11:26:08.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 14:56:08.950 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"mrNpEFH-blEXbrnGbyE8GyAazhQ45TDvNdzoTRfnsysJG","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 14:56:14.244 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 14:56:14.244 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:56:14.244 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:56:14.245 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 14:56:14.246 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 14:56:14.246 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 14:56:14.246 +03:30 [DBG] Start discovery request
2019-11-29 14:56:14.282 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 14:56:14.282 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 14:56:14.282 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 14:56:14.283 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 14:56:14.283 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 14:56:14.283 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 14:56:14.283 +03:30 [DBG] Start key discovery request
2019-11-29 15:04:11.521 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 15:04:11.521 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:04:11.521 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:04:11.522 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:04:11.522 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:04:11.522 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:04:11.522 +03:30 [DBG] Start discovery request
2019-11-29 15:04:11.575 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 15:04:11.575 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:04:11.586 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:04:11.586 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:04:11.587 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:04:11.587 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:04:11.587 +03:30 [DBG] Start key discovery request
2019-11-29 15:04:11.718 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 15:04:11.719 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 15:04:11.720 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 15:04:11.720 +03:30 [DBG] Start authorize request
2019-11-29 15:04:11.720 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:04:11.720 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 15:04:11.720 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 15:04:11.720 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 15:04:11.721 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"Cb8TSTU4RgvnD1fDZ81nZJICmY2_xrcHchmTiol5d28s9","UiLocales":null,"Nonce":"Cb8TSTU4RgvnD1fDZ81nZJICmY2_xrcHchmTiol5d28s9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8122e8d7258e7d026e4314459ce07f0","Raw":{"response_type":"id_token token","client_id":"angular","state":"Cb8TSTU4RgvnD1fDZ81nZJICmY2_xrcHchmTiol5d28s9","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"Cb8TSTU4RgvnD1fDZ81nZJICmY2_xrcHchmTiol5d28s9"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 15:04:11.774 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 15:04:11.774 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 15:04:11.774 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 15:04:11.775 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:04:14.348 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:04:14.354 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 15:04:15.217 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:04:15.224 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mzYw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BedA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRRQ:00000003","TimeStamp":"2019-11-29T11:34:15.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 15:04:15.224 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"Cb8TSTU4RgvnD1fDZ81nZJICmY2_xrcHchmTiol5d28s9","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 15:05:22.931 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 15:05:23.063 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:05:23.063 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:05:23.064 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:05:23.064 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:05:23.064 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:05:23.064 +03:30 [DBG] Start discovery request
2019-11-29 15:05:23.088 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 15:05:23.088 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:05:23.089 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:05:23.089 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:05:23.090 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:05:23.090 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:05:23.090 +03:30 [DBG] Start key discovery request
2019-11-29 15:07:58.697 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 15:07:58.697 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 15:07:58.697 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 15:07:58.698 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:07:58.698 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:07:58.698 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:07:58.698 +03:30 [DBG] Start discovery request
2019-11-29 15:07:58.738 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 15:07:58.738 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 15:07:58.738 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 15:07:58.739 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:07:58.739 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:07:58.739 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:07:58.739 +03:30 [DBG] Start key discovery request
2019-11-29 15:09:17.127 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 15:09:17.127 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:09:17.127 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:09:17.128 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:09:17.128 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:09:17.128 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:09:17.128 +03:30 [DBG] Start discovery request
2019-11-29 15:09:17.251 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 15:09:17.251 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:09:17.251 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:09:17.252 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:09:17.252 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:09:17.252 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:09:17.252 +03:30 [DBG] Start key discovery request
2019-11-29 15:09:17.276 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 15:09:17.277 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 15:09:17.277 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 15:09:17.277 +03:30 [DBG] Start authorize request
2019-11-29 15:09:17.277 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:09:17.277 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 15:09:17.277 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 15:09:17.278 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 15:09:17.278 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"COu2rCW6aOZdu5Hk_zArxp8QF5humQ1SrQyjzFk_E9eiW","UiLocales":null,"Nonce":"COu2rCW6aOZdu5Hk_zArxp8QF5humQ1SrQyjzFk_E9eiW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8122e8d7258e7d026e4314459ce07f0","Raw":{"response_type":"id_token token","client_id":"angular","state":"COu2rCW6aOZdu5Hk_zArxp8QF5humQ1SrQyjzFk_E9eiW","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"COu2rCW6aOZdu5Hk_zArxp8QF5humQ1SrQyjzFk_E9eiW"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 15:09:17.341 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 15:09:17.341 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 15:09:17.341 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 15:09:17.341 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:09:20.046 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:09:20.052 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 15:09:21.099 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:09:21.105 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****IKeg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3YRw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRRT:00000003","TimeStamp":"2019-11-29T11:39:21.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 15:09:21.106 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"COu2rCW6aOZdu5Hk_zArxp8QF5humQ1SrQyjzFk_E9eiW","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 15:11:45.112 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 15:11:45.114 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:11:45.115 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:11:45.116 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:11:45.116 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:11:45.116 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:11:45.116 +03:30 [DBG] Start discovery request
2019-11-29 15:11:45.135 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 15:11:45.135 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:11:45.135 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:11:45.136 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:11:45.136 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:11:45.137 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:11:45.137 +03:30 [DBG] Start key discovery request
2019-11-29 15:14:50.617 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 15:14:50.617 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:14:50.617 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:14:50.617 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:14:50.618 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:14:50.618 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:14:50.618 +03:30 [DBG] Start discovery request
2019-11-29 15:14:50.690 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 15:14:50.700 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:14:50.700 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:14:50.700 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:14:50.701 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:14:50.701 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:14:50.701 +03:30 [DBG] Start key discovery request
2019-11-29 15:14:50.905 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 15:14:50.906 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 15:14:50.906 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 15:14:50.906 +03:30 [DBG] Start authorize request
2019-11-29 15:14:50.906 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:14:50.906 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 15:14:50.906 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 15:14:50.906 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 15:14:50.906 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"cXJzIuwSgHpdeKLkAFjmwwUEHwpalJBahFUFBRyrFatDI","UiLocales":null,"Nonce":"cXJzIuwSgHpdeKLkAFjmwwUEHwpalJBahFUFBRyrFatDI","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8122e8d7258e7d026e4314459ce07f0","Raw":{"response_type":"id_token token","client_id":"angular","state":"cXJzIuwSgHpdeKLkAFjmwwUEHwpalJBahFUFBRyrFatDI","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"cXJzIuwSgHpdeKLkAFjmwwUEHwpalJBahFUFBRyrFatDI"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 15:14:50.907 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 15:14:50.907 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 15:14:50.907 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 15:14:50.907 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:14:54.888 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:14:54.894 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 15:14:55.872 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:14:55.875 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****diPw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****OfIA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRRV:00000003","TimeStamp":"2019-11-29T11:44:55.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 15:14:55.875 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"cXJzIuwSgHpdeKLkAFjmwwUEHwpalJBahFUFBRyrFatDI","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 15:15:12.481 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 15:15:12.481 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:15:12.481 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:15:12.484 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:15:12.484 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:15:12.485 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:15:12.485 +03:30 [DBG] Start discovery request
2019-11-29 15:15:12.523 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 15:15:12.523 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:15:12.523 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:15:12.523 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:15:12.523 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:15:12.524 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:15:12.524 +03:30 [DBG] Start key discovery request
2019-11-29 15:19:56.717 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 15:19:56.717 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:19:56.718 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:19:56.718 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 15:19:56.719 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 15:19:56.720 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 15:19:56.720 +03:30 [DBG] Start discovery request
2019-11-29 15:19:56.762 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 15:19:56.774 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 15:19:56.774 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 15:19:56.774 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 15:19:56.775 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 15:19:56.775 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 15:19:56.775 +03:30 [DBG] Start key discovery request
2019-11-29 15:19:56.802 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 15:19:56.803 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 15:19:56.803 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 15:19:56.803 +03:30 [DBG] Start authorize request
2019-11-29 15:19:56.803 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:19:56.803 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 15:19:56.804 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 15:19:56.804 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 15:19:56.804 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"8o8wtuwhvgwNMG9cJvVVTaUBJgpO8gaJ-sp0_4PPzXk-S","UiLocales":null,"Nonce":"8o8wtuwhvgwNMG9cJvVVTaUBJgpO8gaJ-sp0_4PPzXk-S","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e8122e8d7258e7d026e4314459ce07f0","Raw":{"response_type":"id_token token","client_id":"angular","state":"8o8wtuwhvgwNMG9cJvVVTaUBJgpO8gaJ-sp0_4PPzXk-S","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"8o8wtuwhvgwNMG9cJvVVTaUBJgpO8gaJ-sp0_4PPzXk-S"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 15:19:56.875 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 15:19:56.875 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 15:19:56.875 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 15:19:56.875 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 15:19:58.962 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:19:58.971 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 15:20:00.949 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 15:20:00.956 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ZZcg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****JmNQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKNI02KRS0:00000003","TimeStamp":"2019-11-29T11:50:00.0000000Z","ProcessId":26064,"LocalIpAddress":"127.0.0.1:42363","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 15:20:00.956 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"8o8wtuwhvgwNMG9cJvVVTaUBJgpO8gaJ-sp0_4PPzXk-S","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 15:25:49.996 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 15:25:50.041 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 15:25:50.051 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 15:25:50.052 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 15:25:50.052 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 15:25:50.053 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 15:25:50.054 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 15:25:50.054 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 15:25:50.173 +03:30 [WRN] Unable to bind to http://localhost:5000 on the IPv4 loopback interface: 'An attempt was made to access a socket in a way forbidden by its access permissions'.
2019-11-29 15:25:50.175 +03:30 [WRN] Unable to bind to http://localhost:5000 on the IPv6 loopback interface: 'An attempt was made to access a socket in a way forbidden by its access permissions'.
2019-11-29 15:25:50.187 +03:30 [FTL] Unable to start Kestrel.
System.IO.IOException: Failed to bind to address http://localhost:5000. ---> System.AggregateException: One or more errors occurred. (An attempt was made to access a socket in a way forbidden by its access permissions) (An attempt was made to access a socket in a way forbidden by its access permissions) ---> System.Net.Sockets.SocketException: An attempt was made to access a socket in a way forbidden by its access permissions
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
2019-11-29 15:32:40.023 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 15:32:40.075 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 15:32:40.095 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 15:32:40.097 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 15:32:40.105 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 15:32:40.111 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 15:32:40.113 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 15:32:40.115 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 15:32:40.227 +03:30 [WRN] Unable to bind to http://localhost:5000 on the IPv4 loopback interface: 'An attempt was made to access a socket in a way forbidden by its access permissions'.
2019-11-29 15:32:40.230 +03:30 [WRN] Unable to bind to http://localhost:5000 on the IPv6 loopback interface: 'An attempt was made to access a socket in a way forbidden by its access permissions'.
2019-11-29 15:32:40.233 +03:30 [FTL] Unable to start Kestrel.
System.IO.IOException: Failed to bind to address http://localhost:5000. ---> System.AggregateException: One or more errors occurred. (An attempt was made to access a socket in a way forbidden by its access permissions) (An attempt was made to access a socket in a way forbidden by its access permissions) ---> System.Net.Sockets.SocketException: An attempt was made to access a socket in a way forbidden by its access permissions
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   --- End of inner exception stack trace ---
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
2019-11-29 16:04:48.172 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 16:04:48.290 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 16:04:48.335 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 16:04:48.336 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 16:04:48.336 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 16:04:48.337 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 16:04:48.337 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 16:04:48.338 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 16:18:00.931 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 16:18:00.935 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 16:18:00.936 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 16:18:00.937 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 16:18:00.938 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 16:18:00.939 +03:30 [DBG] Error Url: /home/error
2019-11-29 16:18:00.939 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 16:18:15.483 +03:30 [DBG] CORS request made for path: /account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 16:18:17.275 +03:30 [DBG] Augmenting SignInContext
2019-11-29 16:18:17.279 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 16:18:17.279 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 16:18:17.280 +03:30 [DBG] Adding auth_time claim with value: 1575031697
2019-11-29 16:18:17.296 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 16:18:17.352 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKP9ER8BCP:00000004","TimeStamp":"2019-11-29T12:48:17.0000000Z","ProcessId":12628,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 16:18:22.727 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 16:18:22.749 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 16:18:22.751 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 16:18:22.753 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 16:18:22.755 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKP9ER8BCP:00000007","TimeStamp":"2019-11-29T12:48:22.0000000Z","ProcessId":12628,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-29 16:23:31.162 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 16:23:31.167 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 16:23:31.168 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 16:23:31.170 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 16:23:31.178 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 16:23:31.179 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 16:23:31.184 +03:30 [DBG] Start discovery request
2019-11-29 16:23:31.294 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 16:23:31.296 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 16:23:31.297 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 16:23:31.298 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 16:23:31.300 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 16:23:31.301 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 16:23:31.306 +03:30 [DBG] Start key discovery request
2019-11-29 16:23:31.366 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 16:23:31.374 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 16:23:31.378 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 16:23:31.386 +03:30 [DBG] Start authorize request
2019-11-29 16:23:31.395 +03:30 [DBG] No user present in authorize request
2019-11-29 16:23:31.404 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 16:23:31.447 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 16:23:31.468 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/catalog/detail/2
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"h5rHyUJcsXAPxr28FeqZ1o8Lh6HciLN7oKyV-ahLbaU2p","redirect_uri":"http://localhost:4200/catalog/detail/2","scope":"openid profile orders email address phone","nonce":"h5rHyUJcsXAPxr28FeqZ1o8Lh6HciLN7oKyV-ahLbaU2p"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 16:23:31.481 +03:30 [ERR] Request validation failed
2019-11-29 16:23:31.481 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"h5rHyUJcsXAPxr28FeqZ1o8Lh6HciLN7oKyV-ahLbaU2p","redirect_uri":"http://localhost:4200/catalog/detail/2","scope":"openid profile orders email address phone","nonce":"h5rHyUJcsXAPxr28FeqZ1o8Lh6HciLN7oKyV-ahLbaU2p"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 16:23:31.489 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRKP9ER8BCS:00000001","TimeStamp":"2019-11-29T12:53:31.0000000Z","ProcessId":12628,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-29 16:23:47.755 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 16:23:47.764 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 16:23:47.766 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 16:23:47.767 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 16:23:47.770 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 16:23:47.780 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 16:23:47.782 +03:30 [DBG] Start discovery request
2019-11-29 16:23:47.792 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 16:23:47.794 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 16:23:47.795 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 16:23:47.796 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 16:23:47.797 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 16:23:47.798 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 16:23:47.800 +03:30 [DBG] Start key discovery request
2019-11-29 16:23:47.834 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 16:23:47.841 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 16:23:47.842 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 16:23:47.843 +03:30 [DBG] Start authorize request
2019-11-29 16:23:47.844 +03:30 [DBG] No user present in authorize request
2019-11-29 16:23:47.845 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 16:23:47.846 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 16:23:47.847 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/catalog
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"xkanR_yr7vABh4mXxcikZHbOH8U16B9LbeNa9k2I9vS_9","redirect_uri":"http://localhost:4200/catalog","scope":"openid profile orders email address phone","nonce":"xkanR_yr7vABh4mXxcikZHbOH8U16B9LbeNa9k2I9vS_9"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 16:23:47.855 +03:30 [ERR] Request validation failed
2019-11-29 16:23:47.856 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"xkanR_yr7vABh4mXxcikZHbOH8U16B9LbeNa9k2I9vS_9","redirect_uri":"http://localhost:4200/catalog","scope":"openid profile orders email address phone","nonce":"xkanR_yr7vABh4mXxcikZHbOH8U16B9LbeNa9k2I9vS_9"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 16:23:47.861 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRKP9ER8BCS:00000004","TimeStamp":"2019-11-29T12:53:47.0000000Z","ProcessId":12628,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-29 16:38:11.364 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 16:38:11.367 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 16:38:11.368 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 16:38:11.370 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 16:38:11.375 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 16:38:11.377 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 16:38:11.382 +03:30 [DBG] Start discovery request
2019-11-29 16:38:11.393 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 16:38:11.394 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 16:38:11.396 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 16:38:11.397 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 16:38:11.399 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 16:38:11.400 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 16:38:11.402 +03:30 [DBG] Start key discovery request
2019-11-29 16:38:11.431 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 16:38:11.433 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 16:38:11.435 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 16:38:11.436 +03:30 [DBG] Start authorize request
2019-11-29 16:38:11.437 +03:30 [DBG] No user present in authorize request
2019-11-29 16:38:11.437 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 16:38:11.438 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 16:38:11.440 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/catalog/detail/3
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"VEHnL05o6jFAmtgKnFlZ9CQbZ1hZqVFOSlbOKpLtbgDBo","redirect_uri":"http://localhost:4200/catalog/detail/3","scope":"openid profile orders email address phone","nonce":"VEHnL05o6jFAmtgKnFlZ9CQbZ1hZqVFOSlbOKpLtbgDBo"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 16:38:11.447 +03:30 [ERR] Request validation failed
2019-11-29 16:38:11.449 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"VEHnL05o6jFAmtgKnFlZ9CQbZ1hZqVFOSlbOKpLtbgDBo","redirect_uri":"http://localhost:4200/catalog/detail/3","scope":"openid profile orders email address phone","nonce":"VEHnL05o6jFAmtgKnFlZ9CQbZ1hZqVFOSlbOKpLtbgDBo"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 16:38:11.456 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRKP9ER8BD0:00000001","TimeStamp":"2019-11-29T13:08:11.0000000Z","ProcessId":12628,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-29 16:38:49.087 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 16:38:49.132 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 16:38:49.142 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 16:38:49.142 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 16:38:49.145 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 16:38:49.146 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 16:38:49.150 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 16:38:49.153 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 17:11:12.133 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 17:11:12.141 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 17:11:12.142 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 17:11:12.172 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 17:11:12.173 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 17:11:12.174 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 17:11:12.174 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 17:11:12.175 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 17:11:12.176 +03:30 [DBG] Error Url: /home/error
2019-11-29 17:11:12.177 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 17:11:12.201 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 17:11:12.271 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 17:11:12.273 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 17:11:12.278 +03:30 [DBG] Start discovery request
2019-11-29 17:11:12.338 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 17:11:12.339 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 17:11:12.340 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 17:11:12.342 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 17:11:12.348 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 17:11:12.348 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 17:11:12.354 +03:30 [DBG] Start key discovery request
2019-11-29 17:11:12.384 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 17:11:12.400 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 17:11:12.401 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 17:11:12.406 +03:30 [DBG] Start authorize request
2019-11-29 17:11:12.418 +03:30 [DBG] No user present in authorize request
2019-11-29 17:11:12.424 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 17:11:12.443 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 17:11:12.495 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 17:11:12.513 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG","UiLocales":null,"Nonce":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 17:11:12.547 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 17:11:12.696 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 17:11:12.698 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 17:11:12.699 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 17:11:12.703 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 17:11:20.094 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 17:11:20.145 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 17:11:20.146 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 17:11:20.148 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 17:11:20.709 +03:30 [DBG] Augmenting SignInContext
2019-11-29 17:11:20.712 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 17:11:20.713 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 17:11:20.713 +03:30 [DBG] Adding auth_time claim with value: 1575034880
2019-11-29 17:11:20.726 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 17:11:20.743 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKQ764AMR1:00000003","TimeStamp":"2019-11-29T13:41:20.0000000Z","ProcessId":11732,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 17:11:20.751 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 17:11:20.795 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 17:11:20.797 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 17:11:20.798 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 17:11:20.806 +03:30 [DBG] Start authorize callback request
2019-11-29 17:11:20.812 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 17:11:20.813 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 17:11:20.814 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 17:11:20.815 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 17:11:20.817 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG","UiLocales":null,"Nonce":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df41c650ca756dcdcad1d5013f31c8d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 17:11:20.861 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 17:11:20.871 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 17:11:20.884 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 17:11:20.885 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 17:11:20.893 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 17:11:20.968 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 17:11:20.970 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 17:11:20.984 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****oGvg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YZdQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKQ764AMR1:00000004","TimeStamp":"2019-11-29T13:41:20.0000000Z","ProcessId":11732,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 17:11:20.994 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"fxQ56E9kG6y7QqYTYa_kDnKZDLEMubWGlbY3dxO4x6IFG","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 17:11:21.015 +03:30 [DBG] Augmenting SignInContext
2019-11-29 17:11:21.016 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 17:11:23.384 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 17:11:23.387 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 17:11:23.388 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 17:11:23.389 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 17:11:23.391 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 17:11:23.392 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 17:11:23.394 +03:30 [DBG] Start discovery request
2019-11-29 17:11:23.415 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 17:11:23.416 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 17:11:23.418 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 17:11:23.420 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 17:11:23.422 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 17:11:23.423 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 17:11:23.424 +03:30 [DBG] Start key discovery request
2019-11-29 18:16:34.587 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 18:16:34.625 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:16:34.672 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:16:34.732 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 18:16:34.779 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 18:16:34.891 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 18:16:35.006 +03:30 [DBG] Start discovery request
2019-11-29 18:16:35.138 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 18:16:35.178 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:16:35.197 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:16:35.207 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 18:16:35.213 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 18:16:35.214 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 18:16:35.215 +03:30 [DBG] Start key discovery request
2019-11-29 18:16:35.352 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 18:16:35.368 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 18:16:35.384 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 18:16:35.388 +03:30 [DBG] Start authorize request
2019-11-29 18:16:35.395 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 18:16:35.397 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 18:16:35.399 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 18:16:35.400 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 18:16:35.402 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"ULFNn57URgvXUA3G7-iVNsJ9TXMMV_Wrp__jwkcB4K4tK","UiLocales":null,"Nonce":"ULFNn57URgvXUA3G7-iVNsJ9TXMMV_Wrp__jwkcB4K4tK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df41c650ca756dcdcad1d5013f31c8d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"ULFNn57URgvXUA3G7-iVNsJ9TXMMV_Wrp__jwkcB4K4tK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"ULFNn57URgvXUA3G7-iVNsJ9TXMMV_Wrp__jwkcB4K4tK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 18:16:35.411 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 18:16:35.411 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 18:16:35.412 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 18:16:35.413 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 18:16:35.415 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 18:16:35.423 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 18:16:35.424 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 18:16:35.430 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****NwoQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****SdAg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKQ764AMR5:00000001","TimeStamp":"2019-11-29T14:46:35.0000000Z","ProcessId":11732,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 18:16:35.436 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"ULFNn57URgvXUA3G7-iVNsJ9TXMMV_Wrp__jwkcB4K4tK","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 18:16:37.752 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 18:16:37.756 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:16:37.757 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:16:37.758 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 18:16:37.760 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 18:16:37.761 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 18:16:37.764 +03:30 [DBG] Start discovery request
2019-11-29 18:16:37.785 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 18:16:37.787 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:16:37.788 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:16:37.790 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 18:16:37.791 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 18:16:37.792 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 18:16:37.793 +03:30 [DBG] Start key discovery request
2019-11-29 18:23:20.444 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 18:23:20.446 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:23:20.447 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:23:20.448 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 18:23:20.450 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 18:23:20.452 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 18:23:20.454 +03:30 [DBG] Start discovery request
2019-11-29 18:23:20.563 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 18:23:20.564 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:23:20.565 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:23:20.574 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 18:23:20.577 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 18:23:20.579 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 18:23:20.580 +03:30 [DBG] Start key discovery request
2019-11-29 18:23:20.688 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 18:23:20.695 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 18:23:20.723 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 18:23:20.725 +03:30 [DBG] Start authorize request
2019-11-29 18:23:20.730 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 18:23:20.739 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 18:23:20.740 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 18:23:20.742 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 18:23:20.746 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"2B_bDogK_rRuA78y8aY077wxv_PSBIVhnToCaLy7-1Q17","UiLocales":null,"Nonce":"2B_bDogK_rRuA78y8aY077wxv_PSBIVhnToCaLy7-1Q17","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df41c650ca756dcdcad1d5013f31c8d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"2B_bDogK_rRuA78y8aY077wxv_PSBIVhnToCaLy7-1Q17","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"2B_bDogK_rRuA78y8aY077wxv_PSBIVhnToCaLy7-1Q17"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 18:23:20.764 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 18:23:20.769 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 18:23:20.770 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 18:23:20.771 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 18:23:20.776 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 18:23:20.788 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 18:23:20.789 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 18:23:20.796 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ieJQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gFOg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKQ764AMR8:00000001","TimeStamp":"2019-11-29T14:53:20.0000000Z","ProcessId":11732,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 18:23:20.802 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"2B_bDogK_rRuA78y8aY077wxv_PSBIVhnToCaLy7-1Q17","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 18:23:33.324 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 18:23:33.336 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:23:33.341 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:23:33.343 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 18:23:33.346 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 18:23:33.348 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 18:23:33.355 +03:30 [DBG] Start discovery request
2019-11-29 18:23:33.367 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 18:23:33.369 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:23:33.370 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:23:33.373 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 18:23:33.375 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 18:23:33.376 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 18:23:33.377 +03:30 [DBG] Start key discovery request
2019-11-29 18:43:08.481 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 18:43:08.572 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 18:43:08.604 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 18:43:08.636 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 18:43:08.639 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 18:43:08.641 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 18:43:08.644 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 18:43:08.650 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 18:54:30.767 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 18:54:30.781 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:54:30.783 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:54:30.849 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 18:54:30.863 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 18:54:30.864 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 18:54:30.865 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 18:54:30.867 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 18:54:30.869 +03:30 [DBG] Error Url: /home/error
2019-11-29 18:54:30.870 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 18:54:30.958 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 18:54:31.120 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 18:54:31.123 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 18:54:31.140 +03:30 [DBG] Start discovery request
2019-11-29 18:54:31.263 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 18:54:31.266 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:54:31.271 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:54:31.273 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 18:54:31.286 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 18:54:31.289 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 18:54:31.297 +03:30 [DBG] Start key discovery request
2019-11-29 18:54:32.193 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 18:54:32.210 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 18:54:32.212 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 18:54:32.222 +03:30 [DBG] Start authorize request
2019-11-29 18:54:32.236 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 18:54:32.248 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 18:54:32.278 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 18:54:32.360 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 18:54:32.388 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"q1rY2cTdiPBqXOKwygKzXZ3MpXLSwpwhAzz41cxEtOBvV","UiLocales":null,"Nonce":"q1rY2cTdiPBqXOKwygKzXZ3MpXLSwpwhAzz41cxEtOBvV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df41c650ca756dcdcad1d5013f31c8d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"q1rY2cTdiPBqXOKwygKzXZ3MpXLSwpwhAzz41cxEtOBvV","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"q1rY2cTdiPBqXOKwygKzXZ3MpXLSwpwhAzz41cxEtOBvV"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 18:54:32.457 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 18:54:32.471 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 18:54:32.490 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 18:54:32.492 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 18:54:32.508 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 18:54:32.707 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 18:54:32.711 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 18:54:32.747 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8Kzw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mJiw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS0TDVVAS:00000001","TimeStamp":"2019-11-29T15:24:32.0000000Z","ProcessId":10020,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 18:54:32.760 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"q1rY2cTdiPBqXOKwygKzXZ3MpXLSwpwhAzz41cxEtOBvV","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 18:54:36.038 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 18:54:36.042 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:54:36.046 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:54:36.048 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 18:54:36.051 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 18:54:36.057 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 18:54:36.061 +03:30 [DBG] Start discovery request
2019-11-29 18:54:36.082 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 18:54:36.086 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 18:54:36.087 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 18:54:36.088 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 18:54:36.090 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 18:54:36.092 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 18:54:36.098 +03:30 [DBG] Start key discovery request
2019-11-29 19:01:07.323 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 19:01:07.369 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 19:01:07.380 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 19:01:07.382 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 19:01:07.386 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 19:01:07.387 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 19:01:07.390 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 19:01:07.392 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 19:02:40.346 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 19:02:40.361 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:02:40.363 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:02:40.480 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 19:02:40.481 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 19:02:40.483 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 19:02:40.485 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 19:02:40.486 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 19:02:40.487 +03:30 [DBG] Error Url: /home/error
2019-11-29 19:02:40.488 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 19:02:40.526 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 19:02:40.778 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 19:02:40.780 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 19:02:40.789 +03:30 [DBG] Start discovery request
2019-11-29 19:02:40.925 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 19:02:40.927 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:02:40.931 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:02:40.933 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 19:02:40.935 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 19:02:40.938 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 19:02:40.948 +03:30 [DBG] Start key discovery request
2019-11-29 19:02:41.004 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 19:02:41.030 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 19:02:41.035 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 19:02:41.045 +03:30 [DBG] Start authorize request
2019-11-29 19:02:41.065 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 19:02:41.079 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 19:02:41.112 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 19:02:41.231 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 19:02:41.262 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"qHEgUOEnUXnroFDqj9hfH-MaPrBuGCgPHyY0uhe5Pad0_","UiLocales":null,"Nonce":"qHEgUOEnUXnroFDqj9hfH-MaPrBuGCgPHyY0uhe5Pad0_","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df41c650ca756dcdcad1d5013f31c8d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"qHEgUOEnUXnroFDqj9hfH-MaPrBuGCgPHyY0uhe5Pad0_","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"qHEgUOEnUXnroFDqj9hfH-MaPrBuGCgPHyY0uhe5Pad0_"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 19:02:42.094 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 19:02:42.109 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 19:02:42.125 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 19:02:42.126 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 19:02:42.142 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 19:02:42.237 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 19:02:42.240 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 19:02:42.437 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8wzQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2Jqw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6G3:00000001","TimeStamp":"2019-11-29T15:32:42.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 19:02:42.457 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"qHEgUOEnUXnroFDqj9hfH-MaPrBuGCgPHyY0uhe5Pad0_","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 19:02:44.041 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 19:02:44.055 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:02:44.059 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:02:44.064 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 19:02:44.067 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 19:02:44.082 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 19:02:44.083 +03:30 [DBG] Start discovery request
2019-11-29 19:02:44.094 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 19:02:44.101 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:02:44.102 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:02:44.104 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 19:02:44.111 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 19:02:44.114 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 19:02:44.117 +03:30 [DBG] Start key discovery request
2019-11-29 19:39:06.213 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 19:39:06.217 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:39:06.222 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:39:06.223 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 19:39:06.231 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 19:39:06.232 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 19:39:06.234 +03:30 [DBG] Start discovery request
2019-11-29 19:39:06.244 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 19:39:06.246 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:39:06.249 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:39:06.250 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 19:39:06.254 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 19:39:06.255 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 19:39:06.257 +03:30 [DBG] Start key discovery request
2019-11-29 19:39:06.498 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 19:39:06.501 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 19:39:06.504 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 19:39:06.506 +03:30 [DBG] Start authorize request
2019-11-29 19:39:06.507 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 19:39:06.511 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 19:39:06.512 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 19:39:06.515 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/catalog/type/4
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"5TZW8DCZRdqNfDD4F9Ws0LpPZXX_RGZcwcT8qhIt8xbT_","redirect_uri":"http://localhost:4200/catalog/type/4","scope":"openid profile orders email address phone","nonce":"5TZW8DCZRdqNfDD4F9Ws0LpPZXX_RGZcwcT8qhIt8xbT_"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 19:39:06.538 +03:30 [ERR] Request validation failed
2019-11-29 19:39:06.539 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"5TZW8DCZRdqNfDD4F9Ws0LpPZXX_RGZcwcT8qhIt8xbT_","redirect_uri":"http://localhost:4200/catalog/type/4","scope":"openid profile orders email address phone","nonce":"5TZW8DCZRdqNfDD4F9Ws0LpPZXX_RGZcwcT8qhIt8xbT_"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 19:39:06.562 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRKS5F7T6G7:00000001","TimeStamp":"2019-11-29T16:09:06.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-29 19:41:39.039 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 19:41:39.058 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:41:39.065 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:41:39.067 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 19:41:39.072 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 19:41:39.075 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 19:41:39.077 +03:30 [DBG] Start discovery request
2019-11-29 19:41:39.098 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 19:41:39.101 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:41:39.104 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:41:39.106 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 19:41:39.108 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 19:41:39.116 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 19:41:39.117 +03:30 [DBG] Start key discovery request
2019-11-29 19:41:39.138 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 19:41:39.144 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 19:41:39.147 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 19:41:39.149 +03:30 [DBG] Start authorize request
2019-11-29 19:41:39.156 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 19:41:39.159 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 19:41:39.160 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 19:41:39.166 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 19:41:39.174 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"A7gjJvDpnmf8wYb7mx6ODqe6TOqiB6ACOxtl1AMj6dqsG","UiLocales":null,"Nonce":"A7gjJvDpnmf8wYb7mx6ODqe6TOqiB6ACOxtl1AMj6dqsG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df41c650ca756dcdcad1d5013f31c8d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"A7gjJvDpnmf8wYb7mx6ODqe6TOqiB6ACOxtl1AMj6dqsG","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"A7gjJvDpnmf8wYb7mx6ODqe6TOqiB6ACOxtl1AMj6dqsG"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 19:41:39.196 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 19:41:39.197 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 19:41:39.198 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 19:41:39.199 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 19:41:39.201 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 19:41:39.209 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 19:41:39.211 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 19:41:39.218 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4Zeg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kqQw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6GA:00000001","TimeStamp":"2019-11-29T16:11:39.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 19:41:39.230 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"A7gjJvDpnmf8wYb7mx6ODqe6TOqiB6ACOxtl1AMj6dqsG","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 19:41:44.981 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 19:41:44.986 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:41:44.988 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:41:44.990 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 19:41:44.991 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 19:41:44.996 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 19:41:45.000 +03:30 [DBG] Start discovery request
2019-11-29 19:41:45.016 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 19:41:45.020 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:41:45.023 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:41:45.025 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 19:41:45.027 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 19:41:45.028 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 19:41:45.033 +03:30 [DBG] Start key discovery request
2019-11-29 19:47:22.002 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 19:47:22.007 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:47:22.009 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:47:22.013 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 19:47:22.019 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 19:47:22.021 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 19:47:22.025 +03:30 [DBG] Start discovery request
2019-11-29 19:47:22.036 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 19:47:22.037 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 19:47:22.045 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 19:47:22.047 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 19:47:22.050 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 19:47:22.054 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 19:47:22.058 +03:30 [DBG] Start key discovery request
2019-11-29 19:47:22.078 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 19:47:22.080 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 19:47:22.084 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 19:47:22.086 +03:30 [DBG] Start authorize request
2019-11-29 19:47:22.087 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 19:47:22.088 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 19:47:22.093 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 19:47:22.096 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 19:47:22.097 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"aDdpHEFsQzCsJtOAaEAXXmS2XsMLC3w91ebWunBMwKPE2","UiLocales":null,"Nonce":"aDdpHEFsQzCsJtOAaEAXXmS2XsMLC3w91ebWunBMwKPE2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"df41c650ca756dcdcad1d5013f31c8d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"aDdpHEFsQzCsJtOAaEAXXmS2XsMLC3w91ebWunBMwKPE2","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"aDdpHEFsQzCsJtOAaEAXXmS2XsMLC3w91ebWunBMwKPE2"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 19:47:22.121 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 19:47:22.122 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 19:47:22.122 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 19:47:22.125 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 19:47:22.127 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 19:47:22.131 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 19:47:22.134 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 19:47:22.139 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****96QQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****lrtA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6GC:00000001","TimeStamp":"2019-11-29T16:17:22.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 19:47:22.149 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"aDdpHEFsQzCsJtOAaEAXXmS2XsMLC3w91ebWunBMwKPE2","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 19:59:48.548 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 19:59:48.612 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 19:59:48.615 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 19:59:48.617 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 19:59:48.619 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKS5F7T6GF:00000005","TimeStamp":"2019-11-29T16:29:48.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-29 19:59:48.822 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 19:59:48.830 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 19:59:48.836 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 19:59:48.856 +03:30 [DBG] Processing signout callback request
2019-11-29 19:59:48.878 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 19:59:48.890 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 19:59:48.892 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 19:59:48.893 +03:30 [INF] Successful signout callback.
2019-11-29 19:59:48.894 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 19:59:48.894 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 20:00:50.478 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 20:00:50.481 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:00:50.483 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:00:50.484 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 20:00:50.487 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 20:00:50.488 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 20:00:50.492 +03:30 [DBG] Start discovery request
2019-11-29 20:00:50.514 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 20:00:50.516 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:00:50.518 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:00:50.521 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 20:00:50.525 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 20:00:50.528 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 20:00:50.530 +03:30 [DBG] Start key discovery request
2019-11-29 20:00:50.571 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 20:00:50.574 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 20:00:50.575 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 20:00:50.576 +03:30 [DBG] Start authorize request
2019-11-29 20:00:50.577 +03:30 [DBG] No user present in authorize request
2019-11-29 20:00:50.578 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:00:50.579 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:00:50.582 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 20:00:50.591 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"CaUBLsXunlL1akJRIWLmqCDTR2hdJkLWo3RtxZ1fhaEDK","UiLocales":null,"Nonce":"CaUBLsXunlL1akJRIWLmqCDTR2hdJkLWo3RtxZ1fhaEDK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"CaUBLsXunlL1akJRIWLmqCDTR2hdJkLWo3RtxZ1fhaEDK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"CaUBLsXunlL1akJRIWLmqCDTR2hdJkLWo3RtxZ1fhaEDK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 20:00:50.610 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 20:00:50.649 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:00:50.650 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:00:50.652 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 20:00:50.657 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:03:47.114 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 20:03:47.117 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:03:47.119 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:03:47.120 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 20:03:47.122 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 20:03:47.123 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 20:03:47.127 +03:30 [DBG] Start discovery request
2019-11-29 20:03:47.135 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 20:03:47.137 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:03:47.139 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:03:47.141 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 20:03:47.143 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 20:03:47.145 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 20:03:47.149 +03:30 [DBG] Start key discovery request
2019-11-29 20:03:47.169 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 20:03:47.173 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 20:03:47.177 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 20:03:47.179 +03:30 [DBG] Start authorize request
2019-11-29 20:03:47.180 +03:30 [DBG] No user present in authorize request
2019-11-29 20:03:47.180 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:03:47.181 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:03:47.185 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/catalog/detail/2
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"DkKmrmNGc-8CpdtI4cjJxMXeIyMyQMv1K2DgUm23QMG9A","redirect_uri":"http://localhost:4200/catalog/detail/2","scope":"openid profile orders email address phone","nonce":"DkKmrmNGc-8CpdtI4cjJxMXeIyMyQMv1K2DgUm23QMG9A"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 20:03:47.198 +03:30 [ERR] Request validation failed
2019-11-29 20:03:47.200 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"DkKmrmNGc-8CpdtI4cjJxMXeIyMyQMv1K2DgUm23QMG9A","redirect_uri":"http://localhost:4200/catalog/detail/2","scope":"openid profile orders email address phone","nonce":"DkKmrmNGc-8CpdtI4cjJxMXeIyMyQMv1K2DgUm23QMG9A"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 20:03:47.216 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRKS5F7T6GI:00000001","TimeStamp":"2019-11-29T16:33:47.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-29 20:04:09.030 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 20:04:09.033 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:04:09.036 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:04:09.038 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 20:04:09.039 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 20:04:09.041 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 20:04:09.044 +03:30 [DBG] Start discovery request
2019-11-29 20:04:09.053 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 20:04:09.055 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:04:09.056 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:04:09.058 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 20:04:09.060 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 20:04:09.061 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 20:04:09.065 +03:30 [DBG] Start key discovery request
2019-11-29 20:04:09.082 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 20:04:09.084 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 20:04:09.087 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 20:04:09.088 +03:30 [DBG] Start authorize request
2019-11-29 20:04:09.089 +03:30 [DBG] No user present in authorize request
2019-11-29 20:04:09.089 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:04:09.090 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:04:09.092 +03:30 [ERR] Invalid redirect_uri: http://localhost:4200/catalog/detail/2
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Ik5mrRxUqR4vqCCT9zznEuVW1w1FyPntMcOjDv8cbaS35","redirect_uri":"http://localhost:4200/catalog/detail/2","scope":"openid profile orders email address phone","nonce":"Ik5mrRxUqR4vqCCT9zznEuVW1w1FyPntMcOjDv8cbaS35"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 20:04:09.105 +03:30 [ERR] Request validation failed
2019-11-29 20:04:09.106 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Ik5mrRxUqR4vqCCT9zznEuVW1w1FyPntMcOjDv8cbaS35","redirect_uri":"http://localhost:4200/catalog/detail/2","scope":"openid profile orders email address phone","nonce":"Ik5mrRxUqR4vqCCT9zznEuVW1w1FyPntMcOjDv8cbaS35"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 20:04:09.122 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRKS5F7T6GI:00000003","TimeStamp":"2019-11-29T16:34:09.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2019-11-29 20:52:27.130 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 20:52:27.138 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:52:27.140 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:52:27.143 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 20:52:27.146 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 20:52:27.148 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 20:52:27.150 +03:30 [DBG] Start discovery request
2019-11-29 20:52:27.160 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 20:52:27.161 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:52:27.162 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:52:27.164 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 20:52:27.166 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 20:52:27.169 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 20:52:27.171 +03:30 [DBG] Start key discovery request
2019-11-29 20:52:27.191 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 20:52:27.195 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 20:52:27.196 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 20:52:27.197 +03:30 [DBG] Start authorize request
2019-11-29 20:52:27.198 +03:30 [DBG] No user present in authorize request
2019-11-29 20:52:27.199 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:52:27.200 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:52:27.201 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 20:52:27.206 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa","UiLocales":null,"Nonce":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 20:52:27.218 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 20:52:27.223 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:52:27.223 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:52:27.228 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 20:52:27.230 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:52:32.622 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 20:52:32.643 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:52:32.644 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:52:32.648 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 20:52:32.868 +03:30 [DBG] Augmenting SignInContext
2019-11-29 20:52:32.871 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 20:52:32.871 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 20:52:32.872 +03:30 [DBG] Adding auth_time claim with value: 1575048152
2019-11-29 20:52:32.880 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 20:52:32.886 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKS5F7T6GM:00000003","TimeStamp":"2019-11-29T17:22:32.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 20:52:32.896 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:52:32.914 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 20:52:32.917 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 20:52:32.918 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 20:52:32.928 +03:30 [DBG] Start authorize callback request
2019-11-29 20:52:32.934 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 20:52:32.935 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 20:52:32.937 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 20:52:32.939 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 20:52:32.940 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa","UiLocales":null,"Nonce":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 20:52:32.956 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 20:52:32.957 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 20:52:32.957 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 20:52:32.958 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 20:52:32.960 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 20:52:32.967 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 20:52:32.968 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 20:52:32.973 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****uQIA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****GfMw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6GM:00000004","TimeStamp":"2019-11-29T17:22:32.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 20:52:32.982 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"rMcl-AQglfWrJmHH9tCFC2zRk6FFW-eub5K1T3w15GdYa","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 20:52:32.993 +03:30 [DBG] Augmenting SignInContext
2019-11-29 20:52:32.994 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 20:52:47.720 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 20:52:47.728 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:52:47.732 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:52:47.734 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 20:52:47.736 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 20:52:47.737 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 20:52:47.739 +03:30 [DBG] Start discovery request
2019-11-29 20:52:47.758 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 20:52:47.761 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 20:52:47.763 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 20:52:47.765 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 20:52:47.767 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 20:52:47.768 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 20:52:47.772 +03:30 [DBG] Start key discovery request
2019-11-29 21:11:35.290 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:11:35.294 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:11:35.295 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:11:35.297 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:11:35.308 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:11:35.310 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:11:35.315 +03:30 [DBG] Start discovery request
2019-11-29 21:11:35.408 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:11:35.411 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:11:35.413 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:11:35.414 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:11:35.417 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:11:35.422 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:11:35.425 +03:30 [DBG] Start key discovery request
2019-11-29 21:11:35.532 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 21:11:35.560 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 21:11:35.610 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 21:11:35.643 +03:30 [DBG] Start authorize request
2019-11-29 21:11:35.651 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:11:35.787 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 21:11:35.813 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 21:11:35.832 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 21:11:35.837 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"Z69GE8yo4gvK01i70evvmwho7yWw7lpHFsZppzB77vYwi","UiLocales":null,"Nonce":"Z69GE8yo4gvK01i70evvmwho7yWw7lpHFsZppzB77vYwi","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"Z69GE8yo4gvK01i70evvmwho7yWw7lpHFsZppzB77vYwi","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"Z69GE8yo4gvK01i70evvmwho7yWw7lpHFsZppzB77vYwi"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 21:11:35.871 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 21:11:35.872 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 21:11:35.873 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 21:11:35.874 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:11:35.877 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:11:35.884 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 21:11:35.887 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:11:35.896 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****N9FQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****sfEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6GQ:00000001","TimeStamp":"2019-11-29T17:41:35.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 21:11:35.907 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"Z69GE8yo4gvK01i70evvmwho7yWw7lpHFsZppzB77vYwi","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 21:11:46.675 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:11:46.685 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:11:46.689 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:11:46.690 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:11:46.693 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:11:46.695 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:11:46.697 +03:30 [DBG] Start discovery request
2019-11-29 21:11:46.705 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:11:46.706 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:11:46.707 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:11:46.709 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:11:46.712 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:11:46.716 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:11:46.717 +03:30 [DBG] Start key discovery request
2019-11-29 21:11:46.740 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 21:11:46.742 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 21:11:46.744 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 21:11:46.746 +03:30 [DBG] Start authorize request
2019-11-29 21:11:46.747 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:11:46.748 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 21:11:46.749 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 21:11:46.752 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 21:11:46.755 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"F-b1DwCULiIU2PME4c1huWfwpVniNGnIgCdILX0wElcyu","UiLocales":null,"Nonce":"F-b1DwCULiIU2PME4c1huWfwpVniNGnIgCdILX0wElcyu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"F-b1DwCULiIU2PME4c1huWfwpVniNGnIgCdILX0wElcyu","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"F-b1DwCULiIU2PME4c1huWfwpVniNGnIgCdILX0wElcyu"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 21:11:46.770 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 21:11:46.770 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 21:11:46.771 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 21:11:46.772 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:11:46.774 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:11:46.782 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 21:11:46.784 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:11:46.790 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****MPPQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****UR9Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6GQ:00000002","TimeStamp":"2019-11-29T17:41:46.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 21:11:46.800 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"F-b1DwCULiIU2PME4c1huWfwpVniNGnIgCdILX0wElcyu","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 21:11:50.932 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:11:51.014 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:11:51.025 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:11:51.030 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:11:51.034 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:11:51.037 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:11:51.039 +03:30 [DBG] Start discovery request
2019-11-29 21:11:51.051 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:11:51.054 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:11:51.056 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:11:51.058 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:11:51.059 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:11:51.061 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:11:51.065 +03:30 [DBG] Start key discovery request
2019-11-29 21:32:35.672 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:32:35.679 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:32:35.682 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:32:35.685 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:32:35.701 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:32:35.706 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:32:35.710 +03:30 [DBG] Start discovery request
2019-11-29 21:32:35.758 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:32:35.764 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:32:35.766 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:32:35.767 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:32:35.769 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:32:35.773 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:32:35.775 +03:30 [DBG] Start key discovery request
2019-11-29 21:32:35.986 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 21:32:35.995 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 21:32:36.001 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 21:32:36.033 +03:30 [DBG] Start authorize request
2019-11-29 21:32:36.042 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:32:36.078 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 21:32:36.082 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 21:32:36.128 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 21:32:36.138 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"qWh4lj5Q6A8Aww6H-F_94lP--kMt9yei0NaKBb8XHN6AR","UiLocales":null,"Nonce":"qWh4lj5Q6A8Aww6H-F_94lP--kMt9yei0NaKBb8XHN6AR","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"qWh4lj5Q6A8Aww6H-F_94lP--kMt9yei0NaKBb8XHN6AR","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"qWh4lj5Q6A8Aww6H-F_94lP--kMt9yei0NaKBb8XHN6AR"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 21:32:36.184 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 21:32:36.185 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 21:32:36.190 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 21:32:36.192 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:32:36.195 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:32:36.206 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 21:32:36.208 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:32:36.215 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****fKPw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****n_8g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6GU:00000001","TimeStamp":"2019-11-29T18:02:36.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 21:32:36.225 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"qWh4lj5Q6A8Aww6H-F_94lP--kMt9yei0NaKBb8XHN6AR","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 21:32:44.123 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:32:44.132 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:32:44.134 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:32:44.138 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:32:44.140 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:32:44.144 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:32:44.146 +03:30 [DBG] Start discovery request
2019-11-29 21:32:44.154 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:32:44.156 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:32:44.159 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:32:44.161 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:32:44.163 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:32:44.165 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:32:44.169 +03:30 [DBG] Start key discovery request
2019-11-29 21:32:44.195 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 21:32:44.199 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 21:32:44.201 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 21:32:44.202 +03:30 [DBG] Start authorize request
2019-11-29 21:32:44.203 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:32:44.205 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 21:32:44.207 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 21:32:44.211 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 21:32:44.214 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"HrUjWR5dlcHTkDeI4NenjbmZI5_26vNoOAb0xBkeKCABr","UiLocales":null,"Nonce":"HrUjWR5dlcHTkDeI4NenjbmZI5_26vNoOAb0xBkeKCABr","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"HrUjWR5dlcHTkDeI4NenjbmZI5_26vNoOAb0xBkeKCABr","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"HrUjWR5dlcHTkDeI4NenjbmZI5_26vNoOAb0xBkeKCABr"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 21:32:44.231 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 21:32:44.232 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 21:32:44.233 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 21:32:44.234 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:32:44.235 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:32:44.241 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 21:32:44.245 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:32:44.250 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****0OAA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****iGJQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKS5F7T6GU:00000002","TimeStamp":"2019-11-29T18:02:44.0000000Z","ProcessId":15856,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 21:32:44.259 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"HrUjWR5dlcHTkDeI4NenjbmZI5_26vNoOAb0xBkeKCABr","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 21:32:47.606 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:32:47.610 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:32:47.613 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:32:47.614 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:32:47.618 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:32:47.620 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:32:47.622 +03:30 [DBG] Start discovery request
2019-11-29 21:32:47.637 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:32:47.640 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:32:47.642 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:32:47.643 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:32:47.646 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:32:47.647 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:32:47.652 +03:30 [DBG] Start key discovery request
2019-11-29 21:49:23.251 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 21:49:23.327 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 21:49:23.353 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 21:49:23.355 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 21:49:23.358 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 21:49:23.360 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 21:49:23.362 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 21:49:23.365 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 21:49:50.101 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:49:50.278 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:49:50.347 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:49:50.448 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 21:49:50.450 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 21:49:50.452 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 21:49:50.453 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 21:49:50.454 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 21:49:50.454 +03:30 [DBG] Error Url: /home/error
2019-11-29 21:49:50.455 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 21:49:50.495 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:49:50.609 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:49:50.611 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:49:50.621 +03:30 [DBG] Start discovery request
2019-11-29 21:49:50.731 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:49:50.734 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:49:50.737 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:49:50.739 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:49:50.748 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:49:50.755 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:49:50.764 +03:30 [DBG] Start key discovery request
2019-11-29 21:49:50.840 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 21:49:50.857 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 21:49:50.859 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 21:49:50.867 +03:30 [DBG] Start authorize request
2019-11-29 21:49:50.892 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:49:50.900 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 21:49:50.930 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 21:49:51.027 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 21:49:51.058 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"v2aZIST7YVBYxEhYhfBoTCZ07a0S4KzHQjlBth5lxamFV","UiLocales":null,"Nonce":"v2aZIST7YVBYxEhYhfBoTCZ07a0S4KzHQjlBth5lxamFV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"v2aZIST7YVBYxEhYhfBoTCZ07a0S4KzHQjlBth5lxamFV","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone","nonce":"v2aZIST7YVBYxEhYhfBoTCZ07a0S4KzHQjlBth5lxamFV"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 21:49:51.821 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 21:49:51.835 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 21:49:51.856 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 21:49:51.857 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:49:51.874 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:49:51.978 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 21:49:51.981 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:49:52.010 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8Z0g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****w0ZA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKV2SD3G60:00000001","TimeStamp":"2019-11-29T18:19:52.0000000Z","ProcessId":17504,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 21:49:52.019 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"v2aZIST7YVBYxEhYhfBoTCZ07a0S4KzHQjlBth5lxamFV","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 21:49:59.670 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:49:59.672 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:49:59.675 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:49:59.676 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:49:59.680 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:49:59.681 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:49:59.683 +03:30 [DBG] Start discovery request
2019-11-29 21:49:59.692 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:49:59.696 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:49:59.715 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:49:59.733 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:49:59.737 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:49:59.740 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:49:59.743 +03:30 [DBG] Start key discovery request
2019-11-29 21:49:59.789 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 21:49:59.815 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 21:49:59.821 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 21:49:59.824 +03:30 [DBG] Start authorize request
2019-11-29 21:49:59.825 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:49:59.827 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 21:49:59.831 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 21:49:59.833 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 21:49:59.834 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone","State":"sdeoiVGQM6BhUMwgLxIw50TGcYB8_Db517Vh-LcswwkFU","UiLocales":null,"Nonce":"sdeoiVGQM6BhUMwgLxIw50TGcYB8_Db517Vh-LcswwkFU","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"sdeoiVGQM6BhUMwgLxIw50TGcYB8_Db517Vh-LcswwkFU","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone","nonce":"sdeoiVGQM6BhUMwgLxIw50TGcYB8_Db517Vh-LcswwkFU"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 21:49:59.861 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 21:49:59.864 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 21:49:59.865 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 21:49:59.865 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 21:49:59.867 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:49:59.873 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 21:49:59.874 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 21:49:59.880 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****u5hQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****P9Iw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKV2SD3G60:00000002","TimeStamp":"2019-11-29T18:19:59.0000000Z","ProcessId":17504,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 21:49:59.887 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"sdeoiVGQM6BhUMwgLxIw50TGcYB8_Db517Vh-LcswwkFU","Scope":"openid profile email address phone orders","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 21:50:03.882 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 21:50:03.885 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:50:03.888 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:50:03.889 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 21:50:03.894 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 21:50:03.896 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 21:50:03.897 +03:30 [DBG] Start discovery request
2019-11-29 21:50:03.914 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 21:50:03.916 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 21:50:03.917 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 21:50:03.918 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 21:50:03.920 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 21:50:03.922 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 21:50:03.924 +03:30 [DBG] Start key discovery request
2019-11-29 22:26:45.517 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 22:26:45.565 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 22:26:45.578 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 22:26:45.578 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 22:26:45.579 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 22:26:45.579 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 22:26:45.580 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 22:26:45.583 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 22:26:53.240 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:26:53.280 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:26:53.283 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:26:53.411 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 22:26:53.425 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 22:26:53.434 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 22:26:53.448 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 22:26:53.453 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 22:26:53.455 +03:30 [DBG] Error Url: /home/error
2019-11-29 22:26:53.456 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 22:26:53.509 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:26:53.630 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:26:53.632 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:26:53.640 +03:30 [DBG] Start discovery request
2019-11-29 22:26:53.742 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:26:53.745 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:26:53.748 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:26:53.753 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:26:53.767 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:26:53.771 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:26:53.779 +03:30 [DBG] Start key discovery request
2019-11-29 22:26:53.867 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 22:26:53.889 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 22:26:53.895 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 22:26:53.904 +03:30 [DBG] Start authorize request
2019-11-29 22:26:53.924 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:26:53.937 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:26:53.970 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:26:54.053 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:26:54.077 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"1Ituoi7SHs1QSMyJXarxGNtGQo70bgPqEpdCCqKoWcaIK","UiLocales":null,"Nonce":"1Ituoi7SHs1QSMyJXarxGNtGQo70bgPqEpdCCqKoWcaIK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"1Ituoi7SHs1QSMyJXarxGNtGQo70bgPqEpdCCqKoWcaIK","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"1Ituoi7SHs1QSMyJXarxGNtGQo70bgPqEpdCCqKoWcaIK"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 22:26:54.759 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 22:26:54.773 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 22:26:54.787 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 22:26:54.789 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:26:54.806 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:26:54.921 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 22:26:54.928 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:26:54.961 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****K3hw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****V53g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32LL:00000001","TimeStamp":"2019-11-29T18:56:54.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 22:26:54.980 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"1Ituoi7SHs1QSMyJXarxGNtGQo70bgPqEpdCCqKoWcaIK","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 22:27:04.322 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:27:04.328 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:27:04.331 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:27:04.333 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:27:04.336 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:27:04.341 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:27:04.343 +03:30 [DBG] Start discovery request
2019-11-29 22:27:04.351 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:27:04.355 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:27:04.359 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:27:04.362 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:27:04.365 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:27:04.370 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:27:04.376 +03:30 [DBG] Start key discovery request
2019-11-29 22:27:04.413 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 22:27:04.417 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 22:27:04.426 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 22:27:04.430 +03:30 [DBG] Start authorize request
2019-11-29 22:27:04.431 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:27:04.434 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:27:04.440 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:27:04.443 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:27:04.447 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"-OhTax2vZYYps5MK_8REDg1Zvo2xXoQvssbdGM0mBEpe1","UiLocales":null,"Nonce":"-OhTax2vZYYps5MK_8REDg1Zvo2xXoQvssbdGM0mBEpe1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"78837ec38d3edf9a396ad3d68fbddbb2","Raw":{"response_type":"id_token token","client_id":"angular","state":"-OhTax2vZYYps5MK_8REDg1Zvo2xXoQvssbdGM0mBEpe1","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"-OhTax2vZYYps5MK_8REDg1Zvo2xXoQvssbdGM0mBEpe1"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 22:27:04.470 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 22:27:04.470 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 22:27:04.473 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 22:27:04.475 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:27:04.478 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:27:04.486 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 22:27:04.488 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:27:04.496 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7opQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****H2ZQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32LL:00000002","TimeStamp":"2019-11-29T18:57:04.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 22:27:04.506 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"-OhTax2vZYYps5MK_8REDg1Zvo2xXoQvssbdGM0mBEpe1","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 22:27:08.655 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:27:08.664 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:27:08.666 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:27:08.667 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:27:08.670 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:27:08.674 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:27:08.677 +03:30 [DBG] Start discovery request
2019-11-29 22:27:08.690 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:27:08.692 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:27:08.695 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:27:08.698 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:27:08.700 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:27:08.703 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:27:08.709 +03:30 [DBG] Start key discovery request
2019-11-29 22:27:48.310 +03:30 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 22:27:48.390 +03:30 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-29 22:27:48.394 +03:30 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-29 22:27:48.399 +03:30 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-29 22:27:48.401 +03:30 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRKVNIV32LL:00000004","TimeStamp":"2019-11-29T18:57:48.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2019-11-29 22:27:48.578 +03:30 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-29 22:27:48.584 +03:30 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-29 22:27:48.585 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-29 22:27:48.594 +03:30 [DBG] Processing signout callback request
2019-11-29 22:27:48.608 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:27:48.613 +03:30 [DBG] No client front-channel logout URLs
2019-11-29 22:27:48.615 +03:30 [DBG] No client back-channel logout URLs
2019-11-29 22:27:48.617 +03:30 [INF] Successful signout callback.
2019-11-29 22:27:48.618 +03:30 [DBG] No client front-channel iframe urls
2019-11-29 22:27:48.620 +03:30 [DBG] No client back-channel iframe urls
2019-11-29 22:49:58.349 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:49:58.355 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:49:58.364 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:49:58.377 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:49:58.396 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:49:58.409 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:49:58.414 +03:30 [DBG] Start discovery request
2019-11-29 22:49:58.449 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:49:58.455 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:49:58.466 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:49:58.470 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:49:58.483 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:49:58.543 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:49:58.588 +03:30 [DBG] Start key discovery request
2019-11-29 22:49:58.798 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 22:49:58.864 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 22:49:58.883 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 22:49:58.912 +03:30 [DBG] Start authorize request
2019-11-29 22:49:58.921 +03:30 [DBG] No user present in authorize request
2019-11-29 22:49:58.923 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:49:58.928 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:49:58.934 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:49:58.937 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS","UiLocales":null,"Nonce":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 22:49:58.958 +03:30 [INF] Showing login: User is not authenticated
2019-11-29 22:49:59.023 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:49:59.028 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:49:59.034 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:49:59.041 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:50:29.546 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-29 22:50:29.583 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:50:29.584 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:50:29.590 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:50:29.795 +03:30 [DBG] Augmenting SignInContext
2019-11-29 22:50:29.799 +03:30 [DBG] Adding idp claim with value: local
2019-11-29 22:50:29.799 +03:30 [DBG] Adding amr claim with value: pwd
2019-11-29 22:50:29.800 +03:30 [DBG] Adding auth_time claim with value: 1575055229
2019-11-29 22:50:29.809 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 22:50:29.816 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRKVNIV32LR:00000004","TimeStamp":"2019-11-29T19:20:29.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-11-29 22:50:29.829 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:50:29.847 +03:30 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-29 22:50:29.854 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-29 22:50:29.856 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-29 22:50:29.868 +03:30 [DBG] Start authorize callback request
2019-11-29 22:50:29.875 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:50:29.877 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:50:29.879 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:50:29.884 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:50:29.885 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS","UiLocales":null,"Nonce":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 22:50:29.906 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 22:50:29.906 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 22:50:29.907 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 22:50:29.910 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:50:29.913 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:50:29.920 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 22:50:29.922 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:50:29.928 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****CUSw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AhzA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32LR:00000005","TimeStamp":"2019-11-29T19:20:29.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 22:50:29.945 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"tolP8HJRWPYODcaiM8lhtPih8LC6rMuSsHH-h-3-DlLdS","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 22:50:29.958 +03:30 [DBG] Augmenting SignInContext
2019-11-29 22:50:29.959 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-29 22:50:46.825 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:50:46.835 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:50:46.844 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:50:46.851 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:50:46.854 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:50:46.856 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:50:46.862 +03:30 [DBG] Start discovery request
2019-11-29 22:50:46.873 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:50:46.875 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:50:46.877 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:50:46.879 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:50:46.886 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:50:46.888 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:50:46.895 +03:30 [DBG] Start key discovery request
2019-11-29 22:50:46.925 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 22:50:46.931 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 22:50:46.934 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 22:50:46.938 +03:30 [DBG] Start authorize request
2019-11-29 22:50:46.940 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:50:46.944 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:50:46.947 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:50:46.950 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:50:46.953 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Cy6XaJh2CiUnmDim_7Fqja-cxD_fRFSHexnwserEpyV2Y","UiLocales":null,"Nonce":"Cy6XaJh2CiUnmDim_7Fqja-cxD_fRFSHexnwserEpyV2Y","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"Cy6XaJh2CiUnmDim_7Fqja-cxD_fRFSHexnwserEpyV2Y","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"Cy6XaJh2CiUnmDim_7Fqja-cxD_fRFSHexnwserEpyV2Y"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 22:50:46.972 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 22:50:46.973 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 22:50:46.974 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 22:50:46.977 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:50:46.980 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:50:46.989 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 22:50:46.991 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:50:47.003 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****7IHA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****twrw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32LR:00000006","TimeStamp":"2019-11-29T19:20:47.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 22:50:47.017 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"Cy6XaJh2CiUnmDim_7Fqja-cxD_fRFSHexnwserEpyV2Y","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 22:50:51.946 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:50:51.954 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:50:51.957 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:50:51.958 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:50:51.964 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:50:51.967 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:50:51.970 +03:30 [DBG] Start discovery request
2019-11-29 22:50:51.992 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:50:51.997 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:50:52.000 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:50:52.002 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:50:52.006 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:50:52.009 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:50:52.013 +03:30 [DBG] Start key discovery request
2019-11-29 22:53:40.735 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:53:40.742 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:53:40.747 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:53:40.749 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:53:40.752 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:53:40.756 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:53:40.761 +03:30 [DBG] Start discovery request
2019-11-29 22:53:40.769 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:53:40.773 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:53:40.775 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:53:40.778 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:53:40.782 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:53:40.784 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:53:40.787 +03:30 [DBG] Start key discovery request
2019-11-29 22:53:40.811 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 22:53:40.814 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 22:53:40.818 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 22:53:40.821 +03:30 [DBG] Start authorize request
2019-11-29 22:53:40.824 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:53:40.826 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 22:53:40.828 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 22:53:40.831 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 22:53:40.837 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"m1SUgYCPptpWuXwfKziuitYEC14MErSLq-XvaN-5DFs3D","UiLocales":null,"Nonce":"m1SUgYCPptpWuXwfKziuitYEC14MErSLq-XvaN-5DFs3D","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"m1SUgYCPptpWuXwfKziuitYEC14MErSLq-XvaN-5DFs3D","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"m1SUgYCPptpWuXwfKziuitYEC14MErSLq-XvaN-5DFs3D"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 22:53:40.859 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 22:53:40.860 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 22:53:40.861 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 22:53:40.863 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 22:53:40.866 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:53:40.873 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 22:53:40.874 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 22:53:40.881 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8sOw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Syfg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32M0:00000001","TimeStamp":"2019-11-29T19:23:40.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 22:53:40.895 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"m1SUgYCPptpWuXwfKziuitYEC14MErSLq-XvaN-5DFs3D","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 22:53:43.222 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 22:53:43.226 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:53:43.230 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:53:43.231 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 22:53:43.236 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 22:53:43.238 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 22:53:43.241 +03:30 [DBG] Start discovery request
2019-11-29 22:53:43.258 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 22:53:43.260 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 22:53:43.265 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 22:53:43.266 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 22:53:43.269 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 22:53:43.275 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 22:53:43.277 +03:30 [DBG] Start key discovery request
2019-11-29 23:02:58.431 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:02:58.438 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:02:58.440 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:02:58.442 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:02:58.447 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:02:58.449 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:02:58.452 +03:30 [DBG] Start discovery request
2019-11-29 23:02:58.463 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:02:58.465 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:02:58.468 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:02:58.469 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:02:58.471 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:02:58.475 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:02:58.480 +03:30 [DBG] Start key discovery request
2019-11-29 23:02:58.498 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:02:58.500 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:02:58.504 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:02:58.506 +03:30 [DBG] Start authorize request
2019-11-29 23:02:58.507 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:02:58.510 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:02:58.513 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:02:58.516 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:02:58.517 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"uGOO1OIgMB2Y1Yh7H5KHnqQlqUaQ2PirJk9f6LtzEmNq9","UiLocales":null,"Nonce":"uGOO1OIgMB2Y1Yh7H5KHnqQlqUaQ2PirJk9f6LtzEmNq9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"uGOO1OIgMB2Y1Yh7H5KHnqQlqUaQ2PirJk9f6LtzEmNq9","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"uGOO1OIgMB2Y1Yh7H5KHnqQlqUaQ2PirJk9f6LtzEmNq9"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:02:58.543 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:02:58.544 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:02:58.548 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:02:58.549 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:02:58.552 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:02:58.560 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:02:58.562 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:02:58.570 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mC1Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gDPA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32M2:00000001","TimeStamp":"2019-11-29T19:32:58.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:02:58.584 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"uGOO1OIgMB2Y1Yh7H5KHnqQlqUaQ2PirJk9f6LtzEmNq9","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:03:01.716 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:03:01.718 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:03:01.723 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:03:01.725 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:03:01.730 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:03:01.732 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:03:01.734 +03:30 [DBG] Start discovery request
2019-11-29 23:03:01.749 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:03:01.753 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:03:01.758 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:03:01.759 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:03:01.763 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:03:01.767 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:03:01.770 +03:30 [DBG] Start key discovery request
2019-11-29 23:09:29.381 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-29 23:09:29.398 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 23:09:29.404 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 23:09:29.407 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:09:29.416 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:09:29.425 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:09:29.430 +03:30 [DBG] Start discovery request
2019-11-29 23:09:29.607 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-29 23:09:29.628 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-29 23:09:29.641 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-29 23:09:29.656 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:09:29.681 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:09:29.690 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:09:29.696 +03:30 [DBG] Start key discovery request
2019-11-29 23:16:13.980 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:16:14.014 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:16:14.027 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:16:14.030 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:16:14.048 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:16:14.064 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:16:14.119 +03:30 [DBG] Start discovery request
2019-11-29 23:16:14.325 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:16:14.387 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:16:14.409 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:16:14.432 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:16:14.445 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:16:14.466 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:16:14.482 +03:30 [DBG] Start key discovery request
2019-11-29 23:16:14.635 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:16:14.637 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:16:14.642 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:16:14.647 +03:30 [DBG] Start authorize request
2019-11-29 23:16:14.649 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:16:14.653 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:16:14.654 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:16:14.656 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:16:14.687 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"8gjhYeyzW3ewRYMcJGMQM3wpTyq8jwDYD7X6LT-tu3D2B","UiLocales":null,"Nonce":"8gjhYeyzW3ewRYMcJGMQM3wpTyq8jwDYD7X6LT-tu3D2B","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"8gjhYeyzW3ewRYMcJGMQM3wpTyq8jwDYD7X6LT-tu3D2B","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"8gjhYeyzW3ewRYMcJGMQM3wpTyq8jwDYD7X6LT-tu3D2B"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:16:14.726 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:16:14.727 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:16:14.728 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:16:14.729 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:16:14.735 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:16:14.744 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:16:14.746 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:16:14.777 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****cWHg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****UklA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32M7:00000001","TimeStamp":"2019-11-29T19:46:14.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:16:14.797 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"8gjhYeyzW3ewRYMcJGMQM3wpTyq8jwDYD7X6LT-tu3D2B","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:16:21.713 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:16:21.720 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:16:21.724 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:16:21.727 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:16:21.733 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:16:21.735 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:16:21.739 +03:30 [DBG] Start discovery request
2019-11-29 23:16:21.757 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:16:21.764 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:16:21.769 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:16:21.771 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:16:21.774 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:16:21.776 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:16:21.782 +03:30 [DBG] Start key discovery request
2019-11-29 23:16:21.811 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:16:21.819 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:16:21.820 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:16:21.823 +03:30 [DBG] Start authorize request
2019-11-29 23:16:21.828 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:16:21.829 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:16:21.830 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:16:21.838 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:16:21.840 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"BwiJtNRne47-U9jZfNUjPQ1kweubOJKm7FADIwWdsthP0","UiLocales":null,"Nonce":"BwiJtNRne47-U9jZfNUjPQ1kweubOJKm7FADIwWdsthP0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"BwiJtNRne47-U9jZfNUjPQ1kweubOJKm7FADIwWdsthP0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"BwiJtNRne47-U9jZfNUjPQ1kweubOJKm7FADIwWdsthP0"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:16:21.871 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:16:21.872 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:16:21.875 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:16:21.877 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:16:21.880 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:16:21.891 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:16:21.892 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:16:21.900 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XsIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Sg5A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32M7:00000002","TimeStamp":"2019-11-29T19:46:21.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:16:21.914 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"BwiJtNRne47-U9jZfNUjPQ1kweubOJKm7FADIwWdsthP0","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:16:26.328 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:16:26.353 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:16:26.359 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:16:26.362 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:16:26.371 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:16:26.373 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:16:26.388 +03:30 [DBG] Start discovery request
2019-11-29 23:16:26.434 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:16:26.454 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:16:26.458 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:16:26.459 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:16:26.468 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:16:26.471 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:16:26.474 +03:30 [DBG] Start key discovery request
2019-11-29 23:27:59.765 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:27:59.782 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:27:59.855 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:27:59.894 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:28:00.013 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:28:00.069 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:28:00.139 +03:30 [DBG] Start discovery request
2019-11-29 23:28:00.231 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:28:00.261 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:28:00.280 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:28:00.289 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:28:00.303 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:28:00.307 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:28:00.313 +03:30 [DBG] Start key discovery request
2019-11-29 23:28:00.495 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:28:00.498 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:28:00.503 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:28:00.504 +03:30 [DBG] Start authorize request
2019-11-29 23:28:00.507 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:28:00.510 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:28:00.511 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:28:00.515 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:28:00.520 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"_rdvDxLEpQSbOZ4XtWBDwIQpHOCLerTRsG-8H5eDtoPR-","UiLocales":null,"Nonce":"_rdvDxLEpQSbOZ4XtWBDwIQpHOCLerTRsG-8H5eDtoPR-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"_rdvDxLEpQSbOZ4XtWBDwIQpHOCLerTRsG-8H5eDtoPR-","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"_rdvDxLEpQSbOZ4XtWBDwIQpHOCLerTRsG-8H5eDtoPR-"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:28:00.544 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:28:00.544 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:28:00.546 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:28:00.550 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:28:00.554 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:28:00.561 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:28:00.563 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:28:00.572 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****EUPw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KBJA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32MA:00000001","TimeStamp":"2019-11-29T19:58:00.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:28:00.587 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"_rdvDxLEpQSbOZ4XtWBDwIQpHOCLerTRsG-8H5eDtoPR-","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:28:18.849 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:28:18.854 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:28:18.863 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:28:18.865 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:28:18.868 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:28:18.870 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:28:18.875 +03:30 [DBG] Start discovery request
2019-11-29 23:28:18.888 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:28:18.890 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:28:18.897 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:28:18.905 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:28:18.909 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:28:18.912 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:28:18.917 +03:30 [DBG] Start key discovery request
2019-11-29 23:28:19.029 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:28:19.031 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:28:19.038 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:28:19.039 +03:30 [DBG] Start authorize request
2019-11-29 23:28:19.042 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:28:19.045 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:28:19.046 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:28:19.049 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:28:19.054 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ZxvPR-9gdtlADc0x1XFAiK1r8rYq54ZSJ5FfWIoUIcqma","UiLocales":null,"Nonce":"ZxvPR-9gdtlADc0x1XFAiK1r8rYq54ZSJ5FfWIoUIcqma","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"ZxvPR-9gdtlADc0x1XFAiK1r8rYq54ZSJ5FfWIoUIcqma","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"ZxvPR-9gdtlADc0x1XFAiK1r8rYq54ZSJ5FfWIoUIcqma"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:28:19.076 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:28:19.076 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:28:19.078 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:28:19.079 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:28:19.082 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:28:19.090 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:28:19.092 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:28:19.099 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****yPog","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IHvg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRKVNIV32MA:00000002","TimeStamp":"2019-11-29T19:58:19.0000000Z","ProcessId":14040,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:28:19.112 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"ZxvPR-9gdtlADc0x1XFAiK1r8rYq54ZSJ5FfWIoUIcqma","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:28:23.403 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:28:23.407 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:28:23.413 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:28:23.416 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:28:23.420 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:28:23.421 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:28:23.423 +03:30 [DBG] Start discovery request
2019-11-29 23:28:23.449 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:28:23.452 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:28:23.455 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:28:23.458 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:28:23.460 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:28:23.463 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:28:23.469 +03:30 [DBG] Start key discovery request
2019-11-29 23:33:27.353 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-29 23:33:27.407 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-29 23:33:27.419 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-29 23:33:27.421 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-29 23:33:27.425 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-29 23:33:27.426 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-29 23:33:27.428 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-29 23:33:27.430 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-29 23:34:03.883 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:34:03.944 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:34:03.962 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:34:04.053 +03:30 [DBG] Login Url: /Account/Login
2019-11-29 23:34:04.054 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-29 23:34:04.057 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-29 23:34:04.058 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-29 23:34:04.059 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-29 23:34:04.060 +03:30 [DBG] Error Url: /home/error
2019-11-29 23:34:04.062 +03:30 [DBG] Error Id Parameter: errorId
2019-11-29 23:34:04.103 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:34:04.248 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:34:04.249 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:34:04.264 +03:30 [DBG] Start discovery request
2019-11-29 23:34:04.335 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:34:04.339 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:34:04.341 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:34:04.344 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:34:04.361 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:34:04.365 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:34:04.372 +03:30 [DBG] Start key discovery request
2019-11-29 23:34:04.436 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:34:04.453 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:34:04.455 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:34:04.465 +03:30 [DBG] Start authorize request
2019-11-29 23:34:04.476 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:34:04.484 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:34:04.505 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:34:04.562 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:34:04.584 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"5DvnxZVd32IxfA18V9XIXUBxSLTWFycaxhB2ixF1ylEn5","UiLocales":null,"Nonce":"5DvnxZVd32IxfA18V9XIXUBxSLTWFycaxhB2ixF1ylEn5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"5DvnxZVd32IxfA18V9XIXUBxSLTWFycaxhB2ixF1ylEn5","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"5DvnxZVd32IxfA18V9XIXUBxSLTWFycaxhB2ixF1ylEn5"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:34:05.041 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:34:05.051 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:34:05.063 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:34:05.066 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:34:05.077 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:34:05.176 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:34:05.179 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:34:05.207 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8iOQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****VeFQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL0T45UBDK:00000001","TimeStamp":"2019-11-29T20:04:05.0000000Z","ProcessId":14376,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:34:05.221 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"5DvnxZVd32IxfA18V9XIXUBxSLTWFycaxhB2ixF1ylEn5","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:40:20.752 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:40:20.762 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:40:20.773 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:40:20.775 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:40:20.778 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:40:20.785 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:40:20.788 +03:30 [DBG] Start discovery request
2019-11-29 23:40:20.795 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:40:20.796 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:40:20.800 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:40:20.804 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:40:20.807 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:40:20.809 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:40:20.811 +03:30 [DBG] Start key discovery request
2019-11-29 23:40:20.836 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:40:20.846 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:40:20.857 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:40:20.865 +03:30 [DBG] Start authorize request
2019-11-29 23:40:20.871 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:40:20.873 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:40:20.875 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:40:20.880 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:40:20.883 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"FH1JUtIhUo0dMKJkA_3ch2u5oBJJGPEqQLg4flBVJRO-5","UiLocales":null,"Nonce":"FH1JUtIhUo0dMKJkA_3ch2u5oBJJGPEqQLg4flBVJRO-5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"FH1JUtIhUo0dMKJkA_3ch2u5oBJJGPEqQLg4flBVJRO-5","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"FH1JUtIhUo0dMKJkA_3ch2u5oBJJGPEqQLg4flBVJRO-5"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:40:20.909 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:40:20.909 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:40:20.911 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:40:20.913 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:40:20.916 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:40:20.924 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:40:20.925 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:40:20.932 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****0P3A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****HrKQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL0T45UBDN:00000001","TimeStamp":"2019-11-29T20:10:20.0000000Z","ProcessId":14376,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:40:20.945 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"FH1JUtIhUo0dMKJkA_3ch2u5oBJJGPEqQLg4flBVJRO-5","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:40:23.959 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:40:23.965 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:40:23.966 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:40:23.968 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:40:23.971 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:40:23.975 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:40:23.979 +03:30 [DBG] Start discovery request
2019-11-29 23:40:23.990 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:40:23.992 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:40:23.999 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:40:24.000 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:40:24.003 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:40:24.007 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:40:24.011 +03:30 [DBG] Start key discovery request
2019-11-29 23:47:32.869 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:47:32.874 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:47:32.902 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:47:32.921 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:47:32.955 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:47:32.964 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:47:32.976 +03:30 [DBG] Start discovery request
2019-11-29 23:47:33.114 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:47:33.129 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:47:33.146 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:47:33.176 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:47:33.216 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:47:33.236 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:47:33.257 +03:30 [DBG] Start key discovery request
2019-11-29 23:47:33.426 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:47:33.445 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:47:33.447 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:47:33.455 +03:30 [DBG] Start authorize request
2019-11-29 23:47:33.457 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:47:33.472 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:47:33.475 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:47:33.479 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:47:33.482 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"G8sg_Nex9LS8hac9PSZE8urztxVnqpnAwzzZjpOYTGXuB","UiLocales":null,"Nonce":"G8sg_Nex9LS8hac9PSZE8urztxVnqpnAwzzZjpOYTGXuB","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"G8sg_Nex9LS8hac9PSZE8urztxVnqpnAwzzZjpOYTGXuB","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"G8sg_Nex9LS8hac9PSZE8urztxVnqpnAwzzZjpOYTGXuB"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:47:33.513 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:47:33.513 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:47:33.514 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:47:33.518 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:47:33.522 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:47:33.532 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:47:33.537 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:47:33.544 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ajSQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qjBw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL0T45UBDR:00000001","TimeStamp":"2019-11-29T20:17:33.0000000Z","ProcessId":14376,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:47:33.560 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"G8sg_Nex9LS8hac9PSZE8urztxVnqpnAwzzZjpOYTGXuB","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:47:41.219 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:47:41.225 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:47:41.228 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:47:41.234 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:47:41.236 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:47:41.239 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:47:41.243 +03:30 [DBG] Start discovery request
2019-11-29 23:47:41.260 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:47:41.262 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:47:41.268 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:47:41.271 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:47:41.275 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:47:41.277 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:47:41.279 +03:30 [DBG] Start key discovery request
2019-11-29 23:47:41.311 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-29 23:47:41.318 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-29 23:47:41.319 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-29 23:47:41.322 +03:30 [DBG] Start authorize request
2019-11-29 23:47:41.327 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:47:41.330 +03:30 [DBG] Start authorize request protocol validation
2019-11-29 23:47:41.332 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-29 23:47:41.334 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-29 23:47:41.338 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"lhnExlMvmcpcxiV0IuicqEB4iDu9Ccm_ThUskvUmoHgYq","UiLocales":null,"Nonce":"lhnExlMvmcpcxiV0IuicqEB4iDu9Ccm_ThUskvUmoHgYq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"lhnExlMvmcpcxiV0IuicqEB4iDu9Ccm_ThUskvUmoHgYq","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"lhnExlMvmcpcxiV0IuicqEB4iDu9Ccm_ThUskvUmoHgYq"},"$type":"AuthorizeRequestValidationLog"}
2019-11-29 23:47:41.360 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-29 23:47:41.361 +03:30 [DBG] Creating Implicit Flow response.
2019-11-29 23:47:41.366 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-29 23:47:41.367 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-29 23:47:41.369 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:47:41.376 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-29 23:47:41.377 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-29 23:47:41.384 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****e2GQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7kpw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL0T45UBDR:00000002","TimeStamp":"2019-11-29T20:17:41.0000000Z","ProcessId":14376,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-29 23:47:41.398 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"lhnExlMvmcpcxiV0IuicqEB4iDu9Ccm_ThUskvUmoHgYq","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-29 23:47:47.659 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-29 23:47:47.665 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:47:47.670 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:47:47.671 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-29 23:47:47.676 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-29 23:47:47.679 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-29 23:47:47.681 +03:30 [DBG] Start discovery request
2019-11-29 23:47:47.701 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-29 23:47:47.707 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-29 23:47:47.710 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-29 23:47:47.712 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-29 23:47:47.716 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-29 23:47:47.718 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-29 23:47:47.721 +03:30 [DBG] Start key discovery request
2019-11-30 00:03:12.678 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 00:03:13.007 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 00:03:13.018 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 00:03:13.019 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 00:03:13.019 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 00:03:13.020 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 00:03:13.020 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 00:03:13.021 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 00:03:46.249 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-30 00:03:46.259 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-30 00:03:46.262 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-30 00:03:46.329 +03:30 [DBG] Login Url: /Account/Login
2019-11-30 00:03:46.329 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 00:03:46.332 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-30 00:03:46.335 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-30 00:03:46.336 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 00:03:46.337 +03:30 [DBG] Error Url: /home/error
2019-11-30 00:03:46.338 +03:30 [DBG] Error Id Parameter: errorId
2019-11-30 00:03:46.369 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:03:46.501 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:03:46.504 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:03:46.510 +03:30 [DBG] Start discovery request
2019-11-30 00:03:46.660 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-30 00:03:46.662 +03:30 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-30 00:03:46.666 +03:30 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-30 00:03:46.668 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 00:03:46.677 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 00:03:46.678 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 00:03:46.685 +03:30 [DBG] Start key discovery request
2019-11-30 00:09:12.575 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 00:09:12.623 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 00:09:12.634 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 00:09:12.634 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 00:09:12.634 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 00:09:12.635 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 00:09:12.639 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 00:09:12.643 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 00:41:56.011 +03:30 [DBG] Login Url: /Account/Login
2019-11-30 00:41:56.013 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 00:41:56.014 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-30 00:41:56.014 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-30 00:41:56.014 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 00:41:56.015 +03:30 [DBG] Error Url: /home/error
2019-11-30 00:41:56.016 +03:30 [DBG] Error Id Parameter: errorId
2019-11-30 00:41:59.764 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:41:59.776 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:41:59.777 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:41:59.782 +03:30 [DBG] Start discovery request
2019-11-30 00:43:53.742 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 00:43:53.765 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:43:53.798 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:43:53.824 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:43:53.829 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:43:53.832 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:43:53.846 +03:30 [DBG] Start discovery request
2019-11-30 00:43:53.947 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 00:43:53.950 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:43:53.954 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:43:53.955 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 00:43:53.958 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 00:43:53.963 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 00:43:53.975 +03:30 [DBG] Start key discovery request
2019-11-30 00:43:54.084 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 00:43:54.092 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 00:43:54.115 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 00:43:54.123 +03:30 [DBG] Start authorize request
2019-11-30 00:43:54.152 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:43:54.171 +03:30 [DBG] Start authorize request protocol validation
2019-11-30 00:43:54.233 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-30 00:43:54.325 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 00:43:54.352 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"hpA8Lb3oHXDj7TWABt-AyDs4wAT6T2KpDgj03Mn0_yrZZ","UiLocales":null,"Nonce":"hpA8Lb3oHXDj7TWABt-AyDs4wAT6T2KpDgj03Mn0_yrZZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"hpA8Lb3oHXDj7TWABt-AyDs4wAT6T2KpDgj03Mn0_yrZZ","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"hpA8Lb3oHXDj7TWABt-AyDs4wAT6T2KpDgj03Mn0_yrZZ"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 00:43:54.455 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 00:43:54.470 +03:30 [DBG] Creating Implicit Flow response.
2019-11-30 00:43:54.492 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-30 00:43:54.495 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:43:54.509 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:43:54.632 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 00:43:54.634 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:43:54.665 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3mwg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5gaw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL231QF9TU:00000003","TimeStamp":"2019-11-29T21:13:54.0000000Z","ProcessId":10356,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 00:43:54.675 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"hpA8Lb3oHXDj7TWABt-AyDs4wAT6T2KpDgj03Mn0_yrZZ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 00:44:06.233 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 00:44:06.235 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:44:06.237 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:44:06.242 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:44:06.247 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:44:06.248 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:44:06.249 +03:30 [DBG] Start discovery request
2019-11-30 00:44:06.258 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 00:44:06.260 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:44:06.264 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:44:06.266 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 00:44:06.269 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 00:44:06.271 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 00:44:06.272 +03:30 [DBG] Start key discovery request
2019-11-30 00:44:06.302 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 00:44:06.304 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 00:44:06.315 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 00:44:06.318 +03:30 [DBG] Start authorize request
2019-11-30 00:44:06.320 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:44:06.322 +03:30 [DBG] Start authorize request protocol validation
2019-11-30 00:44:06.323 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-30 00:44:06.325 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 00:44:06.326 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"9-MTRC0hKvAI5LXypdM3RECeC0IJIKz0VFXnbyrn16zQN","UiLocales":null,"Nonce":"9-MTRC0hKvAI5LXypdM3RECeC0IJIKz0VFXnbyrn16zQN","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"9-MTRC0hKvAI5LXypdM3RECeC0IJIKz0VFXnbyrn16zQN","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"9-MTRC0hKvAI5LXypdM3RECeC0IJIKz0VFXnbyrn16zQN"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 00:44:06.340 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 00:44:06.341 +03:30 [DBG] Creating Implicit Flow response.
2019-11-30 00:44:06.342 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-30 00:44:06.342 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:44:06.344 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:44:06.353 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 00:44:06.354 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:44:06.358 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AyWQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aw-w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL231QF9TU:00000004","TimeStamp":"2019-11-29T21:14:06.0000000Z","ProcessId":10356,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 00:44:06.365 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"9-MTRC0hKvAI5LXypdM3RECeC0IJIKz0VFXnbyrn16zQN","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 00:44:10.529 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 00:44:10.531 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:44:10.534 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:44:10.535 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:44:10.537 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:44:10.538 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:44:10.540 +03:30 [DBG] Start discovery request
2019-11-30 00:44:10.567 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 00:44:10.569 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:44:10.570 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:44:10.571 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 00:44:10.572 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 00:44:10.575 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 00:44:10.576 +03:30 [DBG] Start key discovery request
2019-11-30 00:48:45.961 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:48:45.964 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:48:45.968 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:48:45.970 +03:30 [DBG] Start discovery request
2019-11-30 00:55:19.630 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 00:55:19.633 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:55:19.635 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:55:19.640 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:55:19.652 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:55:19.661 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:55:19.688 +03:30 [DBG] Start discovery request
2019-11-30 00:55:19.816 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 00:55:19.822 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:55:19.868 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:55:19.883 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 00:55:19.900 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 00:55:19.902 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 00:55:19.921 +03:30 [DBG] Start key discovery request
2019-11-30 00:55:19.973 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 00:55:19.994 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 00:55:20.010 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 00:55:20.017 +03:30 [DBG] Start authorize request
2019-11-30 00:55:20.019 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:55:20.022 +03:30 [DBG] Start authorize request protocol validation
2019-11-30 00:55:20.024 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-30 00:55:20.026 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 00:55:20.028 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"jyS4jl8fi2v_0sLXWXv7m6RNXRxWE6f72oiTpR4kXLWBv","UiLocales":null,"Nonce":"jyS4jl8fi2v_0sLXWXv7m6RNXRxWE6f72oiTpR4kXLWBv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"jyS4jl8fi2v_0sLXWXv7m6RNXRxWE6f72oiTpR4kXLWBv","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"jyS4jl8fi2v_0sLXWXv7m6RNXRxWE6f72oiTpR4kXLWBv"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 00:55:20.048 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 00:55:20.048 +03:30 [DBG] Creating Implicit Flow response.
2019-11-30 00:55:20.050 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-30 00:55:20.051 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:55:20.052 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:55:20.060 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 00:55:20.061 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:55:20.068 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jhcg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5xuA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL231QF9U7:00000001","TimeStamp":"2019-11-29T21:25:20.0000000Z","ProcessId":10356,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 00:55:20.082 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"jyS4jl8fi2v_0sLXWXv7m6RNXRxWE6f72oiTpR4kXLWBv","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 00:55:38.094 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 00:55:38.096 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:55:38.097 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:55:38.100 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:55:38.103 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:55:38.105 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:55:38.106 +03:30 [DBG] Start discovery request
2019-11-30 00:55:38.117 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 00:55:38.118 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:55:38.120 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:55:38.122 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 00:55:38.124 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 00:55:38.126 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 00:55:38.128 +03:30 [DBG] Start key discovery request
2019-11-30 00:55:38.152 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 00:55:38.153 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 00:55:38.154 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 00:55:38.156 +03:30 [DBG] Start authorize request
2019-11-30 00:55:38.156 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:55:38.159 +03:30 [DBG] Start authorize request protocol validation
2019-11-30 00:55:38.161 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-30 00:55:38.163 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 00:55:38.164 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"wPqdQmS3lqzN_6cg4PQeb77HX0uyhSoVF2IHro0R0dbvV","UiLocales":null,"Nonce":"wPqdQmS3lqzN_6cg4PQeb77HX0uyhSoVF2IHro0R0dbvV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"wPqdQmS3lqzN_6cg4PQeb77HX0uyhSoVF2IHro0R0dbvV","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"wPqdQmS3lqzN_6cg4PQeb77HX0uyhSoVF2IHro0R0dbvV"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 00:55:38.179 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 00:55:38.179 +03:30 [DBG] Creating Implicit Flow response.
2019-11-30 00:55:38.180 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-30 00:55:38.181 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 00:55:38.183 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:55:38.187 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 00:55:38.188 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 00:55:38.195 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****wYIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****0Y0w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRL231QF9U7:00000002","TimeStamp":"2019-11-29T21:25:38.0000000Z","ProcessId":10356,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 00:55:38.202 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"wPqdQmS3lqzN_6cg4PQeb77HX0uyhSoVF2IHro0R0dbvV","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 00:55:42.365 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 00:55:42.369 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:55:42.372 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:55:42.372 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 00:55:42.375 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 00:55:42.377 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 00:55:42.378 +03:30 [DBG] Start discovery request
2019-11-30 00:55:42.397 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 00:55:42.399 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 00:55:42.400 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 00:55:42.402 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 00:55:42.404 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 00:55:42.405 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 00:55:42.407 +03:30 [DBG] Start key discovery request
2019-11-30 01:27:17.117 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 01:27:17.159 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 01:27:17.169 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 01:27:17.170 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 01:27:17.170 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 01:27:17.171 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 01:27:17.171 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 01:27:17.172 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:09:24.879 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:09:25.024 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:09:25.052 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:09:25.053 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:09:25.054 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:09:25.055 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:09:25.055 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:09:25.056 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:19:09.781 +03:30 [DBG] Login Url: /Account/Login
2019-11-30 09:19:09.784 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 09:19:09.784 +03:30 [DBG] Logout Url: /Account/Logout
2019-11-30 09:19:09.784 +03:30 [DBG] ConsentUrl Url: /consent
2019-11-30 09:19:09.785 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 09:19:09.785 +03:30 [DBG] Error Url: /home/error
2019-11-30 09:19:09.786 +03:30 [DBG] Error Id Parameter: errorId
2019-11-30 09:19:46.596 +03:30 [ERR] Failed executing DbCommand (23,155ms) [Parameters=[@__get_Item_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[City], [e].[ConcurrencyStamp], [e].[Country], [e].[Email], [e].[EmailConfirmed], [e].[LastName], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[Name], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[State], [e].[Street], [e].[TwoFactorEnabled], [e].[UserName], [e].[ZipCode]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0
System.Data.SqlClient.SqlException (0x80131904): The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts. ---> System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.ReplaceConnection(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlInternalConnectionTds.TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at System.Data.SqlClient.SqlConnection.ReconnectAsync(Int32 timeout)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
ClientConnectionId:8c39274e-4b69-4c5e-b216-a3da620f5b08
2019-11-30 09:19:50.833 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts. ---> System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.ReplaceConnection(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlInternalConnectionTds.TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at System.Data.SqlClient.SqlConnection.ReconnectAsync(Int32 timeout)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:8c39274e-4b69-4c5e-b216-a3da620f5b08
System.Data.SqlClient.SqlException (0x80131904): The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts. ---> System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.ReplaceConnection(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlInternalConnectionTds.TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at System.Data.SqlClient.SqlConnection.ReconnectAsync(Int32 timeout)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:8c39274e-4b69-4c5e-b216-a3da620f5b08
2019-11-30 09:19:50.923 +03:30 [ERR] An exception occurred in the database while iterating the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts. ---> System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.ReplaceConnection(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlInternalConnectionTds.TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at System.Data.SqlClient.SqlConnection.ReconnectAsync(Int32 timeout)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:8c39274e-4b69-4c5e-b216-a3da620f5b08
System.Data.SqlClient.SqlException (0x80131904): The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts. ---> System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.ReplaceConnection(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlInternalConnectionTds.TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at System.Data.SqlClient.SqlConnection.ReconnectAsync(Int32 timeout)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:8c39274e-4b69-4c5e-b216-a3da620f5b08
2019-11-30 09:19:51.484 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.Data.SqlClient.SqlException (0x80131904): The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts. ---> System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.ReplaceConnection(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlInternalConnectionTds.TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at System.Data.SqlClient.SqlConnection.ReconnectAsync(Int32 timeout)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(ClaimsPrincipal principal)
   at Microsoft.AspNetCore.Identity.SecurityStampValidator`1.ValidateAsync(CookieValidatePrincipalContext context)
   at Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:8c39274e-4b69-4c5e-b216-a3da620f5b08
2019-11-30 09:21:24.630 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:21:24.658 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:21:24.660 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:21:24.709 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:21:24.716 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:21:24.718 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:21:24.723 +03:30 [DBG] Start discovery request
2019-11-30 09:21:24.908 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:21:24.910 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:21:24.912 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:21:24.914 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:21:24.917 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:21:24.918 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:21:24.924 +03:30 [DBG] Start key discovery request
2019-11-30 09:21:25.543 +03:30 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:21:25.571 +03:30 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:21:25.573 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:21:25.580 +03:30 [DBG] Start authorize request
2019-11-30 09:21:25.603 +03:30 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:21:25.612 +03:30 [DBG] Start authorize request protocol validation
2019-11-30 09:21:25.638 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:21:25.702 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:21:25.724 +03:30 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"POp8SawYGLlKxy--Sll4437UjIybW1WYe58hhkRti3WTs","UiLocales":null,"Nonce":"POp8SawYGLlKxy--Sll4437UjIybW1WYe58hhkRti3WTs","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ddad2d95026b179db105cd1425a3fcef","Raw":{"response_type":"id_token token","client_id":"angular","state":"POp8SawYGLlKxy--Sll4437UjIybW1WYe58hhkRti3WTs","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"POp8SawYGLlKxy--Sll4437UjIybW1WYe58hhkRti3WTs"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:21:25.801 +03:30 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 09:21:25.811 +03:30 [DBG] Creating Implicit Flow response.
2019-11-30 09:21:25.826 +03:30 [DBG] Getting claims for access token for client: angular
2019-11-30 09:21:25.827 +03:30 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:21:25.840 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:21:25.947 +03:30 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 09:21:25.950 +03:30 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:21:26.139 +03:30 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****YxqQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Fkhg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLB423E4B1:00000001","TimeStamp":"2019-11-30T05:51:26.0000000Z","ProcessId":9488,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 09:21:26.149 +03:30 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"POp8SawYGLlKxy--Sll4437UjIybW1WYe58hhkRti3WTs","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 09:21:29.533 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:21:29.535 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:21:29.537 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:21:29.538 +03:30 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:21:29.539 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:21:29.540 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:21:29.541 +03:30 [DBG] Start discovery request
2019-11-30 09:21:29.600 +03:30 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:21:29.602 +03:30 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:21:29.602 +03:30 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:21:29.603 +03:30 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:21:29.604 +03:30 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:21:29.606 +03:30 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:21:29.607 +03:30 [DBG] Start key discovery request
2019-11-30 09:29:34.006 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:29:34.055 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:29:34.067 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:29:34.069 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:29:34.072 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:29:34.073 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:29:34.075 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:29:34.076 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 10:05:16.412 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:05:16.457 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:05:16.468 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:05:16.469 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:05:16.469 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:05:16.470 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:05:16.470 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:05:16.471 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 07:06:03.190 +00:00 [WRN] No XML encryptor configured. Key {8de95617-b75b-4d9d-812b-1b1ada201e4c} may be persisted to storage in unencrypted form.
2019-11-30 07:06:03.653 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 07:06:03.718 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 07:06:03.754 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 07:06:03.766 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 07:06:03.772 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 07:06:03.778 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 07:06:03.781 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 07:06:03.783 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 07:07:03.029 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 07:07:03.032 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 07:07:03.033 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 07:07:03.035 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 07:07:03.038 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 07:07:03.039 +00:00 [DBG] Error Url: /home/error
2019-11-30 07:07:03.041 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 07:07:03.070 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:03.092 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:12.903 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:07:12.922 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 07:07:12.927 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 07:07:12.928 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 07:07:12.941 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 07:07:13.171 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 07:07:13.173 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 07:07:13.180 +00:00 [DBG] Start discovery request
2019-11-30 07:07:13.283 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:07:13.283 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 07:07:13.284 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 07:07:13.284 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 07:07:13.284 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 07:07:13.289 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 07:07:13.289 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 07:07:13.300 +00:00 [DBG] Start key discovery request
2019-11-30 07:07:13.347 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:13.347 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:13.347 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 07:07:13.363 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 07:07:13.363 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 07:07:13.371 +00:00 [DBG] Start authorize request
2019-11-30 07:07:13.389 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:13.402 +00:00 [DBG] No user present in authorize request
2019-11-30 07:07:13.412 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:07:13.455 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:07:13.548 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:07:13.569 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"f0g8t3zQZGSCC_PLgPpIJzzRkGXZU6MuklDHNRTCmbbxV","UiLocales":null,"Nonce":"f0g8t3zQZGSCC_PLgPpIJzzRkGXZU6MuklDHNRTCmbbxV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"f0g8t3zQZGSCC_PLgPpIJzzRkGXZU6MuklDHNRTCmbbxV","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"f0g8t3zQZGSCC_PLgPpIJzzRkGXZU6MuklDHNRTCmbbxV"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 07:07:13.631 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 07:07:13.648 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:13.648 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:50.199 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:07:50.204 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:07:50.205 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:07:50.215 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:07:50.224 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:07:50.494 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:08:02.378 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:08:02.378 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 07:08:02.379 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:08:02.379 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:08:05.532 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:08:05.532 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:08:05.532 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:08:05.532 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:12:09.564 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 07:12:09.629 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 07:12:09.650 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 07:12:09.652 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 07:12:09.657 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 07:12:09.658 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 07:12:09.662 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 07:12:09.664 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 07:12:25.847 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:12:25.894 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 07:12:25.965 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 07:12:25.966 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 07:12:25.984 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 07:12:25.985 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 07:12:25.986 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 07:12:25.987 +00:00 [DBG] Error Url: /home/error
2019-11-30 07:12:25.988 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 07:12:26.014 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:12:26.036 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:12:31.101 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:12:31.111 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:12:31.139 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:12:31.207 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:14:08.415 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:14:08.416 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 07:14:08.422 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 07:14:08.423 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 07:14:08.429 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 07:14:08.469 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 07:14:08.471 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 07:14:08.481 +00:00 [DBG] Start discovery request
2019-11-30 07:14:08.587 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:14:08.587 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 07:14:08.589 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 07:14:08.589 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 07:14:08.590 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 07:14:08.591 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 07:14:08.591 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 07:14:08.608 +00:00 [DBG] Start key discovery request
2019-11-30 07:14:08.676 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:08.676 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:08.676 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 07:14:08.684 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 07:14:08.685 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 07:14:08.695 +00:00 [DBG] Start authorize request
2019-11-30 07:14:08.697 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:08.705 +00:00 [DBG] No user present in authorize request
2019-11-30 07:14:08.705 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:14:08.705 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:14:08.706 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:14:08.736 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"63g7tTbJgfcznf_pMsDqXwByX8ekoIR7jRw90FkTYBSwu","UiLocales":null,"Nonce":"63g7tTbJgfcznf_pMsDqXwByX8ekoIR7jRw90FkTYBSwu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"63g7tTbJgfcznf_pMsDqXwByX8ekoIR7jRw90FkTYBSwu","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"63g7tTbJgfcznf_pMsDqXwByX8ekoIR7jRw90FkTYBSwu"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 07:14:08.783 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 07:14:08.797 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:08.797 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:14.484 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:14.484 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:14:14.484 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:14:14.484 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:14:14.491 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:14:21.393 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:14:21.402 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 07:14:21.404 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:21.404 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:23.955 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:14:23.955 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:14:23.956 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:14:23.956 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:14:43.625 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '172.17.171.1,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:14:43.649 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '172.17.171.1,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:14:43.784 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:14:43.785 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:14:43.811 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:31:41.195 +00:00 [WRN] No XML encryptor configured. Key {166df69a-652c-4a5a-ad8d-39519d54432d} may be persisted to storage in unencrypted form.
2019-11-30 07:31:41.535 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 07:31:41.640 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 07:31:41.676 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 07:31:41.677 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 07:31:41.678 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 07:31:41.693 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 07:31:41.696 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 07:31:41.699 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 07:35:55.217 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 07:35:55.290 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 07:35:55.306 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 07:35:55.308 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 07:35:55.310 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 07:35:55.312 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 07:35:55.314 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 07:35:55.316 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 07:38:04.711 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 07:38:04.713 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 07:38:04.714 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 07:38:04.714 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 07:38:04.716 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 07:38:04.716 +00:00 [DBG] Error Url: /home/error
2019-11-30 07:38:04.716 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 07:38:04.749 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:04.780 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:05.061 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:05.061 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:08.092 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:08.093 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:18.033 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:18.033 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:23.903 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:23.903 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:26.077 +00:00 [ERR] Exception reading protected message
System.Security.Cryptography.CryptographicException: The key {8cccf444-616b-4c42-b6fb-e07667e57f85} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at IdentityServer4.Stores.ProtectedDataMessageStore`1.ReadAsync(String value) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Stores\Default\ProtectedDataMessageStore.cs:line 54
2019-11-30 07:38:26.084 +00:00 [ERR] Exception reading protected message
System.Security.Cryptography.CryptographicException: The key {8cccf444-616b-4c42-b6fb-e07667e57f85} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at IdentityServer4.Stores.ProtectedDataMessageStore`1.ReadAsync(String value) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Stores\Default\ProtectedDataMessageStore.cs:line 54
2019-11-30 07:38:44.693 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:44.693 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:48.855 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:48.864 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:38:48.893 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:38:48.973 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:38:48.977 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:38:49.052 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {8de95617-b75b-4d9d-812b-1b1ada201e4c} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-11-30 07:38:49.949 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:49.949 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:58.737 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:38:58.737 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:38:58.737 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:38:58.738 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:38:58.738 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:39:38.325 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:39:38.347 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 07:39:38.354 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 07:39:38.354 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 07:39:38.356 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 07:39:38.361 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 07:39:38.362 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 07:39:38.369 +00:00 [DBG] Start discovery request
2019-11-30 07:39:38.530 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:39:38.531 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 07:39:38.531 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 07:39:38.532 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 07:39:38.532 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 07:39:38.533 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 07:39:38.534 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 07:39:38.540 +00:00 [DBG] Start key discovery request
2019-11-30 07:39:38.593 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:38.593 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:38.593 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 07:39:38.623 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 07:39:38.624 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 07:39:38.633 +00:00 [DBG] Start authorize request
2019-11-30 07:39:38.635 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:38.644 +00:00 [DBG] No user present in authorize request
2019-11-30 07:39:38.644 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:39:38.644 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:39:38.646 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:39:38.667 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"grGM21gKkNlRKHgzR_hk9rsicwb-FWPlQ5eMeSr2ujyFT","UiLocales":null,"Nonce":"grGM21gKkNlRKHgzR_hk9rsicwb-FWPlQ5eMeSr2ujyFT","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"grGM21gKkNlRKHgzR_hk9rsicwb-FWPlQ5eMeSr2ujyFT","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"grGM21gKkNlRKHgzR_hk9rsicwb-FWPlQ5eMeSr2ujyFT"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 07:39:38.727 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 07:39:38.741 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:38.742 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:43.849 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:43.849 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:39:43.849 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:39:43.850 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:39:43.850 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:39:44.078 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:44.079 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:49.866 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:39:49.866 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 07:39:49.867 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:49.867 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:51.910 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:39:51.910 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:39:51.911 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:39:51.912 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:40:56.313 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 07:40:56.316 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 07:40:56.425 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:40:56.425 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:40:59.704 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 07:40:59.705 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 07:40:59.705 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 07:40:59.705 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 07:42:03.789 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '172.17.175.161,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:42:03.789 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '172.17.175.161,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:42:03.867 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:42:03.867 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:42:03.902 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:42:03.903 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 07:45:52.488 +00:00 [WRN] No XML encryptor configured. Key {3c15808c-9f0c-4677-91d2-f847007903e5} may be persisted to storage in unencrypted form.
2019-11-30 07:45:52.661 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 07:45:52.680 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 07:45:52.700 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 07:45:52.703 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 07:45:52.705 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 07:45:52.709 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 07:45:52.712 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 07:45:52.716 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 07:51:55.491 +00:00 [WRN] No XML encryptor configured. Key {82206d65-e016-43e9-9c5e-8babc7fcfc09} may be persisted to storage in unencrypted form.
2019-11-30 07:51:56.003 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 07:51:56.059 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 07:51:56.095 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 07:51:56.102 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 07:51:56.103 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 07:51:56.106 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 07:51:56.108 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 07:51:56.111 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 08:01:04.376 +00:00 [WRN] No XML encryptor configured. Key {6d9fbd0e-9b6e-46fb-86ff-4438e1e5bbcc} may be persisted to storage in unencrypted form.
2019-11-30 08:01:05.210 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 08:01:05.299 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 08:01:05.336 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 08:01:05.338 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 08:01:05.340 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 08:01:05.345 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 08:01:05.349 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 08:01:05.352 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 08:03:17.181 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 08:03:17.259 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 08:03:17.278 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 08:03:17.278 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 08:03:17.279 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 08:03:17.284 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 08:03:17.285 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 08:03:17.287 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 08:06:17.499 +00:00 [WRN] No XML encryptor configured. Key {6f2907f8-83f3-46bd-b3ba-94d194b66016} may be persisted to storage in unencrypted form.
2019-11-30 08:06:17.772 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 08:06:17.800 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 08:06:17.825 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 08:06:17.832 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 08:06:17.834 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 08:06:17.840 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 08:06:17.843 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 08:06:17.846 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 08:09:24.988 +00:00 [WRN] No XML encryptor configured. Key {79c9d17d-48a5-40de-99ec-5c1a35bae506} may be persisted to storage in unencrypted form.
2019-11-30 08:09:26.068 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 08:09:26.140 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 08:09:26.186 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 08:09:26.194 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 08:09:26.196 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 08:09:26.198 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 08:09:26.200 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 08:09:26.208 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 08:42:11.994 +00:00 [WRN] No XML encryptor configured. Key {568097bb-90ed-4338-ad76-44ea26bb1819} may be persisted to storage in unencrypted form.
2019-11-30 08:42:12.473 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 08:42:12.517 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 08:42:12.554 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 08:42:12.557 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 08:42:12.573 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 08:42:12.599 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 08:42:12.607 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 08:42:12.610 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 08:42:45.448 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:42:45.506 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 08:42:45.514 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:42:45.515 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:42:45.599 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 08:42:45.600 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 08:42:45.601 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 08:42:45.603 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 08:42:45.604 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 08:42:45.608 +00:00 [DBG] Error Url: /home/error
2019-11-30 08:42:45.612 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 08:42:45.648 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 08:42:45.897 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 08:42:45.899 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 08:42:45.904 +00:00 [DBG] Start discovery request
2019-11-30 08:42:46.053 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:42:46.053 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 08:42:46.054 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:42:46.054 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:42:46.055 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 08:42:46.057 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 08:42:46.057 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 08:42:46.065 +00:00 [DBG] Start key discovery request
2019-11-30 08:42:46.148 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 08:42:46.165 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 08:42:46.165 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 08:42:46.172 +00:00 [DBG] Start authorize request
2019-11-30 08:42:46.239 +00:00 [DBG] No user present in authorize request
2019-11-30 08:42:46.258 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 08:42:46.302 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:42:46.390 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 08:42:46.413 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg","UiLocales":null,"Nonce":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 08:42:46.467 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 08:42:53.816 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 08:42:53.817 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:42:53.818 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 08:42:53.826 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:42:59.593 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:42:59.596 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 08:43:03.090 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 08:43:03.092 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:43:03.094 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 08:43:04.584 +00:00 [DBG] Augmenting SignInContext
2019-11-30 08:43:04.590 +00:00 [DBG] Adding idp claim with value: local
2019-11-30 08:43:04.590 +00:00 [DBG] Adding amr claim with value: pwd
2019-11-30 08:43:04.590 +00:00 [DBG] Adding auth_time claim with value: 1575103384
2019-11-30 08:43:04.610 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 08:43:04.676 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRLE52MRQO6:00000003","TimeStamp":"2019-11-30T08:43:04.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLoginSuccessEvent"}
2019-11-30 08:43:04.679 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:43:04.726 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-30 08:43:04.728 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-30 08:43:04.729 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-30 08:43:04.744 +00:00 [DBG] Start authorize callback request
2019-11-30 08:43:04.753 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 08:43:04.753 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 08:43:04.753 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:43:04.754 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 08:43:04.754 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg","UiLocales":null,"Nonce":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b4f3e6ce808a13c4526ef298e45968d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 08:43:04.877 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 08:43:04.888 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 08:43:04.905 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 08:43:04.905 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 08:43:12.441 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 08:43:12.683 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 08:43:27.149 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 08:43:27.167 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****mE0w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gS_g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLE52MRQO6:00000004","TimeStamp":"2019-11-30T08:43:27.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 08:43:27.171 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"CceCOCB-6nv9kTWNzEhLoFnx14izm4_t-2R4KUyNagHXg","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 08:43:27.205 +00:00 [DBG] Augmenting SignInContext
2019-11-30 08:43:27.207 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 08:44:03.317 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:44:03.317 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 08:44:03.318 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:44:03.318 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:44:03.322 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 08:44:03.341 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 08:44:03.342 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 08:44:03.342 +00:00 [DBG] Start discovery request
2019-11-30 08:44:03.382 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:44:03.382 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 08:44:03.382 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:44:03.383 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:44:03.383 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 08:44:03.383 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 08:44:03.383 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 08:44:03.383 +00:00 [DBG] Start key discovery request
2019-11-30 08:45:10.993 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 08:45:10.993 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 08:45:10.993 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 08:45:10.993 +00:00 [DBG] Start discovery request
2019-11-30 08:45:11.060 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 08:45:11.061 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 08:45:11.062 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 08:45:11.062 +00:00 [DBG] Start discovery request
2019-11-30 08:54:51.776 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 08:54:51.829 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 08:54:51.848 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 08:54:51.848 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 08:54:51.850 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 08:54:51.850 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 08:54:51.851 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 08:54:51.852 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 08:55:25.835 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:55:25.997 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 08:55:26.011 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:55:26.013 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:55:26.102 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 08:55:26.107 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 08:55:26.110 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 08:55:26.111 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 08:55:26.140 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 08:55:26.145 +00:00 [DBG] Error Url: /home/error
2019-11-30 08:55:26.147 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 08:55:26.193 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 08:55:26.439 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 08:55:26.440 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 08:55:26.451 +00:00 [DBG] Start discovery request
2019-11-30 08:55:26.625 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:55:26.634 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 08:55:26.636 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:55:26.638 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:55:26.655 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 08:55:26.659 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 08:55:26.660 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 08:55:26.670 +00:00 [DBG] Start key discovery request
2019-11-30 08:55:26.783 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 08:55:26.801 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 08:55:26.803 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 08:55:26.810 +00:00 [DBG] Start authorize request
2019-11-30 08:55:26.838 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 08:55:26.853 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 08:55:26.886 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:55:26.976 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 08:55:26.999 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"x-YLG0JC9Jao0h-OafbKijRK2RVX_ejWgfMkFzdkVjBbC","UiLocales":null,"Nonce":"x-YLG0JC9Jao0h-OafbKijRK2RVX_ejWgfMkFzdkVjBbC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b4f3e6ce808a13c4526ef298e45968d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"x-YLG0JC9Jao0h-OafbKijRK2RVX_ejWgfMkFzdkVjBbC","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"x-YLG0JC9Jao0h-OafbKijRK2RVX_ejWgfMkFzdkVjBbC"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 08:55:28.603 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 08:55:28.614 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 08:55:28.629 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 08:55:28.631 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 08:55:37.243 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 08:55:37.374 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 08:55:43.552 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 08:55:43.617 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****UtWA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CEQQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLEC573M33:00000001","TimeStamp":"2019-11-30T08:55:43.0000000Z","ProcessId":364,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 08:55:43.622 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"x-YLG0JC9Jao0h-OafbKijRK2RVX_ejWgfMkFzdkVjBbC","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 08:56:00.279 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 08:56:00.282 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:56:00.283 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 08:56:00.288 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:56:00.659 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:56:06.912 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:56:06.912 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 08:56:06.912 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:56:06.912 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:56:06.913 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 08:56:06.914 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 08:56:06.914 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 08:56:06.914 +00:00 [DBG] Start discovery request
2019-11-30 08:56:06.951 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:56:06.955 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 08:56:06.963 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:56:06.963 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:56:06.963 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 08:56:06.963 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 08:56:06.963 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 08:56:06.970 +00:00 [DBG] Start key discovery request
2019-11-30 08:56:07.027 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 08:56:07.029 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 08:56:07.056 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 08:56:07.057 +00:00 [DBG] Start authorize request
2019-11-30 08:56:07.066 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 08:56:07.066 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 08:56:07.066 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 08:56:07.068 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 08:56:07.073 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"o_JjSBIRdZAdsCbUytA-AMhg5FqFteMbk96V4Yrwkxrn8","UiLocales":null,"Nonce":"o_JjSBIRdZAdsCbUytA-AMhg5FqFteMbk96V4Yrwkxrn8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b4f3e6ce808a13c4526ef298e45968d8","Raw":{"response_type":"id_token token","client_id":"angular","state":"o_JjSBIRdZAdsCbUytA-AMhg5FqFteMbk96V4Yrwkxrn8","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"o_JjSBIRdZAdsCbUytA-AMhg5FqFteMbk96V4Yrwkxrn8"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 08:56:07.107 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 08:56:07.109 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 08:56:07.111 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 08:56:07.113 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 08:56:09.342 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 08:56:09.356 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 08:56:11.373 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 08:56:11.380 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****uNjg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xUDA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLEC573M33:00000005","TimeStamp":"2019-11-30T08:56:11.0000000Z","ProcessId":364,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 08:56:11.390 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"o_JjSBIRdZAdsCbUytA-AMhg5FqFteMbk96V4Yrwkxrn8","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 08:56:17.922 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:56:17.922 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 08:56:17.922 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:56:17.923 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:56:17.923 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 08:56:17.924 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 08:56:17.924 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 08:56:17.924 +00:00 [DBG] Start discovery request
2019-11-30 08:56:17.960 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 08:56:17.960 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 08:56:17.961 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 08:56:17.961 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 08:56:17.961 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 08:56:17.961 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 08:56:17.961 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 08:56:17.961 +00:00 [DBG] Start key discovery request
2019-11-30 09:05:46.434 +00:00 [WRN] No XML encryptor configured. Key {ceac39d9-8158-461d-a624-fbeb1465a07d} may be persisted to storage in unencrypted form.
2019-11-30 09:05:46.823 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:05:46.929 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:05:46.965 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:05:46.966 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:05:46.968 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:05:46.969 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:05:46.970 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:05:46.976 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:06:12.267 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:06:12.355 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:06:12.364 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:06:12.365 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:06:12.449 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 09:06:12.450 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 09:06:12.453 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 09:06:12.454 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 09:06:12.455 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 09:06:12.456 +00:00 [DBG] Error Url: /home/error
2019-11-30 09:06:12.459 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 09:06:12.497 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:06:12.743 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:06:12.744 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:06:12.749 +00:00 [DBG] Start discovery request
2019-11-30 09:06:12.908 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:06:12.910 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:06:12.918 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:06:12.919 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:06:12.936 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:06:12.943 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:06:12.945 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:06:12.966 +00:00 [DBG] Start key discovery request
2019-11-30 09:06:13.043 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:13.045 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:13.059 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:06:13.074 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:06:13.074 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:06:13.082 +00:00 [DBG] Start authorize request
2019-11-30 09:06:13.095 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:13.105 +00:00 [DBG] No user present in authorize request
2019-11-30 09:06:13.122 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:06:13.160 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:06:13.237 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:06:13.272 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq","UiLocales":null,"Nonce":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:06:13.327 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 09:06:13.349 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:13.350 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:19.925 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:19.925 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:06:19.926 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:06:19.926 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:06:19.931 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:06:20.098 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {568097bb-90ed-4338-ad76-44ea26bb1819} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-11-30 09:06:20.684 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:20.684 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:33.110 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:06:33.112 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 09:06:33.117 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:33.118 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:35.537 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:35.537 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:06:35.537 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:06:35.537 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:06:36.849 +00:00 [DBG] Augmenting SignInContext
2019-11-30 09:06:36.854 +00:00 [DBG] Adding idp claim with value: local
2019-11-30 09:06:36.854 +00:00 [DBG] Adding amr claim with value: pwd
2019-11-30 09:06:36.854 +00:00 [DBG] Adding auth_time claim with value: 1575104796
2019-11-30 09:06:36.862 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:06:36.874 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 09:06:36.962 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRLEI5SBGIP:00000004","TimeStamp":"2019-11-30T09:06:36.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLoginSuccessEvent"}
2019-11-30 09:06:36.966 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:06:37.010 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-30 09:06:37.018 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-30 09:06:37.019 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-30 09:06:37.036 +00:00 [DBG] Start authorize callback request
2019-11-30 09:06:37.043 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:06:37.044 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:06:37.044 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:06:37.046 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:06:37.050 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq","UiLocales":null,"Nonce":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1c8c04638fb45f50c8693220def4507c","Raw":{"response_type":"id_token token","client_id":"angular","state":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:06:37.135 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 09:06:37.147 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 09:06:37.163 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 09:06:37.165 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:06:42.356 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:06:42.477 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 09:06:45.723 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:06:45.755 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6QAQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****EqKg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLEI5SBGIP:00000005","TimeStamp":"2019-11-30T09:06:45.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 09:06:45.759 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"VlOMMMhf1t2zbXzhPNtjMvFQAZ9DB5Fn108Rq3D7cjxcq","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 09:06:45.786 +00:00 [DBG] Augmenting SignInContext
2019-11-30 09:06:45.787 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 09:06:59.530 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:06:59.531 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:06:59.531 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:06:59.531 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:06:59.531 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:06:59.532 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:06:59.532 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:06:59.532 +00:00 [DBG] Start discovery request
2019-11-30 09:06:59.573 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:06:59.574 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:06:59.574 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:06:59.574 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:06:59.574 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:06:59.574 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:06:59.575 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:06:59.575 +00:00 [DBG] Start key discovery request
2019-11-30 09:06:59.642 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:06:59.662 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:06:59.663 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:06:59.667 +00:00 [DBG] Start authorize request
2019-11-30 09:06:59.669 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:06:59.671 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:06:59.673 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:06:59.675 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:06:59.685 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"iwgxaATtBGx0paZSjA0jsiCfPhgYMvBse0PIsd84Yc6L8","UiLocales":null,"Nonce":"iwgxaATtBGx0paZSjA0jsiCfPhgYMvBse0PIsd84Yc6L8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"1c8c04638fb45f50c8693220def4507c","Raw":{"response_type":"id_token token","client_id":"angular","state":"iwgxaATtBGx0paZSjA0jsiCfPhgYMvBse0PIsd84Yc6L8","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"iwgxaATtBGx0paZSjA0jsiCfPhgYMvBse0PIsd84Yc6L8"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:06:59.733 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 09:06:59.733 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 09:06:59.733 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 09:06:59.734 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:07:02.954 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:07:02.971 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 09:07:09.786 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:07:09.790 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-6-Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gjgg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLEI5SBGIP:00000006","TimeStamp":"2019-11-30T09:07:09.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 09:07:09.791 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"iwgxaATtBGx0paZSjA0jsiCfPhgYMvBse0PIsd84Yc6L8","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 09:07:13.776 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:07:13.776 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:07:13.777 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:07:13.777 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:07:13.778 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:07:13.779 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:07:13.779 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:07:13.779 +00:00 [DBG] Start discovery request
2019-11-30 09:07:13.819 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:07:13.819 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:07:13.819 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:07:13.819 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:07:13.819 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:07:13.820 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:07:13.820 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:07:13.820 +00:00 [DBG] Start key discovery request
2019-11-30 09:16:01.626 +00:00 [WRN] No XML encryptor configured. Key {cfa46685-fd8a-4096-9233-5debc7435044} may be persisted to storage in unencrypted form.
2019-11-30 09:16:01.888 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:16:01.918 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:16:01.937 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:16:01.940 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:16:01.943 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:16:01.947 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:16:01.951 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:16:01.961 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:16:12.324 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:16:12.481 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:16:12.490 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:16:12.491 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:16:12.581 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 09:16:12.582 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 09:16:12.582 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 09:16:12.583 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 09:16:12.583 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 09:16:12.583 +00:00 [DBG] Error Url: /home/error
2019-11-30 09:16:12.583 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 09:16:12.634 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:16:13.055 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:16:13.059 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:16:13.073 +00:00 [DBG] Start discovery request
2019-11-30 09:16:13.254 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:16:13.256 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:16:13.258 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:16:13.266 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:16:13.277 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:16:13.281 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:16:13.286 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:16:13.312 +00:00 [DBG] Start key discovery request
2019-11-30 09:16:13.522 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:13.530 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:13.574 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:16:13.618 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:16:13.619 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:16:13.636 +00:00 [DBG] Start authorize request
2019-11-30 09:16:13.659 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:13.672 +00:00 [DBG] No user present in authorize request
2019-11-30 09:16:13.687 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:16:13.732 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:13.817 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:16:13.843 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"kfgW0-YRvdOTFeb_rodcGPn9HWnth53u_BVjZE5yWIBCY","UiLocales":null,"Nonce":"kfgW0-YRvdOTFeb_rodcGPn9HWnth53u_BVjZE5yWIBCY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"kfgW0-YRvdOTFeb_rodcGPn9HWnth53u_BVjZE5yWIBCY","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"kfgW0-YRvdOTFeb_rodcGPn9HWnth53u_BVjZE5yWIBCY"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:16:13.893 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 09:16:13.913 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:13.914 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:21.912 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:21.912 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:16:21.913 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:21.913 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:16:21.920 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:22.071 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {ceac39d9-8158-461d-a624-fbeb1465a07d} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-11-30 09:16:22.477 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:22.477 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:38.630 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:16:38.631 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:16:38.632 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:16:38.632 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:16:38.633 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:16:38.634 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:16:38.634 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:16:38.634 +00:00 [DBG] Start discovery request
2019-11-30 09:16:38.720 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:16:38.720 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:16:38.720 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:16:38.720 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:16:38.720 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:16:38.721 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:16:38.721 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:16:38.721 +00:00 [DBG] Start key discovery request
2019-11-30 09:16:38.819 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:38.819 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:38.819 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:16:38.823 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:16:38.824 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:16:38.835 +00:00 [DBG] Start authorize request
2019-11-30 09:16:38.835 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:38.835 +00:00 [DBG] No user present in authorize request
2019-11-30 09:16:38.836 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:16:38.836 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:38.836 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:16:38.837 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4","UiLocales":null,"Nonce":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:16:38.837 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 09:16:39.075 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:39.075 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:43.687 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:43.687 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:16:43.687 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:43.688 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:16:43.688 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:43.909 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:43.910 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:49.242 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:16:49.243 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 09:16:49.244 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:49.245 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:52.984 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:52.985 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:16:52.985 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:52.986 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:16:54.569 +00:00 [DBG] Augmenting SignInContext
2019-11-30 09:16:54.574 +00:00 [DBG] Adding idp claim with value: local
2019-11-30 09:16:54.574 +00:00 [DBG] Adding amr claim with value: pwd
2019-11-30 09:16:54.574 +00:00 [DBG] Adding auth_time claim with value: 1575105414
2019-11-30 09:16:54.581 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-11-30 09:16:54.592 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 09:16:54.659 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRLENOM6HK3:00000007","TimeStamp":"2019-11-30T09:16:54.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLoginSuccessEvent"}
2019-11-30 09:16:54.663 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:54.713 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-30 09:16:54.715 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-30 09:16:54.715 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-30 09:16:54.738 +00:00 [DBG] Start authorize callback request
2019-11-30 09:16:54.745 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:16:54.745 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:16:54.746 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:16:54.747 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:16:54.747 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4","UiLocales":null,"Nonce":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f2763a6823b1413a8c4ec5878e53f4dc","Raw":{"response_type":"id_token token","client_id":"angular","state":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:16:54.842 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 09:16:54.861 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 09:16:54.880 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 09:16:54.882 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:17:00.383 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:17:00.514 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 09:17:00.516 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:17:00.528 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****OrFQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****yOJg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLENOM6HK3:00000008","TimeStamp":"2019-11-30T09:17:00.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 09:17:00.533 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"_-3wlgQ2Mph_-3RZBqNpZfw1u2ORkzbQy-zqIcLqV3Hn4","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 09:17:00.559 +00:00 [DBG] Augmenting SignInContext
2019-11-30 09:17:00.560 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 09:17:06.871 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:17:06.871 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:17:06.871 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:17:06.871 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:17:06.873 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:17:06.874 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:17:06.874 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:17:06.874 +00:00 [DBG] Start discovery request
2019-11-30 09:17:06.906 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:17:06.906 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:17:06.906 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:17:06.907 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:17:06.907 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:17:06.907 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:17:06.907 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:17:06.908 +00:00 [DBG] Start key discovery request
2019-11-30 09:17:06.954 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:17:06.956 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:17:06.956 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:17:06.956 +00:00 [DBG] Start authorize request
2019-11-30 09:17:06.957 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:17:06.957 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:17:06.957 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:17:06.958 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:17:06.958 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qEMFRKx5-Pp0-CM3rEccPrvSSF8qTSVTz2U6LntjRYMeU","UiLocales":null,"Nonce":"qEMFRKx5-Pp0-CM3rEccPrvSSF8qTSVTz2U6LntjRYMeU","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f2763a6823b1413a8c4ec5878e53f4dc","Raw":{"response_type":"id_token token","client_id":"angular","state":"qEMFRKx5-Pp0-CM3rEccPrvSSF8qTSVTz2U6LntjRYMeU","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"qEMFRKx5-Pp0-CM3rEccPrvSSF8qTSVTz2U6LntjRYMeU"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:17:06.973 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 09:17:06.973 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 09:17:06.973 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 09:17:06.973 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:17:06.974 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:17:06.977 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 09:17:06.977 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:17:06.989 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****wW8g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****fe6A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLENOM6HK3:00000009","TimeStamp":"2019-11-30T09:17:06.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 09:17:06.990 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"qEMFRKx5-Pp0-CM3rEccPrvSSF8qTSVTz2U6LntjRYMeU","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 09:17:11.282 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:17:11.282 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:17:11.282 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:17:11.282 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:17:11.283 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:17:11.283 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:17:11.283 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:17:11.283 +00:00 [DBG] Start discovery request
2019-11-30 09:17:11.320 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:17:11.320 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:17:11.320 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:17:11.320 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:17:11.321 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:17:11.321 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:17:11.322 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:17:11.322 +00:00 [DBG] Start key discovery request
2019-11-30 09:21:16.508 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:21:16.562 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:21:16.581 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:21:16.582 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:21:16.583 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:21:16.584 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:21:16.588 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:21:16.590 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:23:23.551 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:23:23.599 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:23:23.606 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:23:23.606 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:23:23.681 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 09:23:23.682 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 09:23:23.683 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 09:23:23.685 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 09:23:23.686 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 09:23:23.687 +00:00 [DBG] Error Url: /home/error
2019-11-30 09:23:23.687 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 09:23:23.728 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:23:24.023 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:23:24.024 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:23:24.031 +00:00 [DBG] Start discovery request
2019-11-30 09:23:24.161 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:23:24.163 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:23:24.163 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:23:24.165 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:23:24.167 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:23:24.181 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:23:24.182 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:23:24.254 +00:00 [DBG] Start key discovery request
2019-11-30 09:23:24.347 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:23:24.363 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:23:24.363 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:23:24.374 +00:00 [DBG] Start authorize request
2019-11-30 09:23:24.398 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:23:24.410 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:23:24.440 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:23:24.512 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:23:24.534 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"MqR9Sg--mtGzpAAbmE0BplYcOcHa2nPAHjJIEKQQBvtHe","UiLocales":null,"Nonce":"MqR9Sg--mtGzpAAbmE0BplYcOcHa2nPAHjJIEKQQBvtHe","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f2763a6823b1413a8c4ec5878e53f4dc","Raw":{"response_type":"id_token token","client_id":"angular","state":"MqR9Sg--mtGzpAAbmE0BplYcOcHa2nPAHjJIEKQQBvtHe","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"MqR9Sg--mtGzpAAbmE0BplYcOcHa2nPAHjJIEKQQBvtHe"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:23:25.600 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 09:23:25.610 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 09:23:25.626 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 09:23:25.627 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:23:25.638 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:23:25.754 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 09:23:25.756 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:23:25.796 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****LnBA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_47Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLERPA5EKU:00000001","TimeStamp":"2019-11-30T09:23:25.0000000Z","ProcessId":206,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 09:23:25.800 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"MqR9Sg--mtGzpAAbmE0BplYcOcHa2nPAHjJIEKQQBvtHe","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 09:23:32.104 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:23:32.104 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:23:32.104 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:23:32.105 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:23:32.106 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:23:32.106 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:23:32.107 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:23:32.107 +00:00 [DBG] Start discovery request
2019-11-30 09:23:32.152 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:23:32.153 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:23:32.153 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:23:32.154 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:23:32.154 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:23:32.155 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:23:32.155 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:23:32.156 +00:00 [DBG] Start key discovery request
2019-11-30 09:32:48.570 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:32:48.679 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:32:48.708 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:32:48.709 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:32:48.712 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:32:48.712 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:32:48.713 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:32:48.713 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:40:18.143 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:40:18.306 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:40:18.391 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:40:18.406 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:40:18.451 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:40:18.455 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:40:18.469 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:40:18.501 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:40:27.142 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:40:27.255 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:40:27.293 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:40:27.301 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:40:27.377 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 09:40:27.380 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 09:40:27.385 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 09:40:27.387 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 09:40:27.392 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 09:40:27.396 +00:00 [DBG] Error Url: /home/error
2019-11-30 09:40:27.398 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 09:40:27.451 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:40:27.865 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:40:27.869 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:40:27.885 +00:00 [DBG] Start discovery request
2019-11-30 09:40:28.041 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:40:28.042 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:40:28.052 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:40:28.053 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:40:28.061 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:40:28.064 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:40:28.066 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:40:28.099 +00:00 [DBG] Start key discovery request
2019-11-30 09:40:28.335 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:40:28.386 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:40:28.391 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:40:28.417 +00:00 [DBG] Start authorize request
2019-11-30 09:40:28.444 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:40:28.456 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:40:28.490 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:40:28.564 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:40:28.584 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"b46w0svcNw_JTJhSPGSrt4aoEppG-YtQ0HPWyne1g8u9m","UiLocales":null,"Nonce":"b46w0svcNw_JTJhSPGSrt4aoEppG-YtQ0HPWyne1g8u9m","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f2763a6823b1413a8c4ec5878e53f4dc","Raw":{"response_type":"id_token token","client_id":"angular","state":"b46w0svcNw_JTJhSPGSrt4aoEppG-YtQ0HPWyne1g8u9m","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"b46w0svcNw_JTJhSPGSrt4aoEppG-YtQ0HPWyne1g8u9m"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:40:50.628 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '192.168.1.4,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:40:50.864 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:40:50.904 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:40:56.803 +00:00 [INF] {"Details":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)\n   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\\InHand\\Desktop\\Microservices\\Final Project\\eShop\\src\\Services\\Identity\\Identity.API\\Services\\ProfileService.cs:line 42\n   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeInteractionResponseGenerator.cs:line 124\n   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeInteractionResponseGenerator.cs:line 83\n   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeEndpointBase.cs:line 81\n   at IdentityServer4.Endpoints.AuthorizeEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeEndpoint.cs:line 55\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54\nClientConnectionId:00000000-0000-0000-0000-000000000000","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)","ActivityId":"0HLRLF5A8U6JP:00000001","TimeStamp":"2019-11-30T09:40:56.0000000Z","ProcessId":643,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UnhandledExceptionEvent"}
2019-11-30 09:40:56.808 +00:00 [FTL] Unhandled exception: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 42
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 124
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 83
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpoint.cs:line 55
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:16.704 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:41:16.704 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:41:16.704 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:41:16.704 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:41:16.705 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:41:16.735 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:41:16.736 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:41:16.752 +00:00 [DBG] Start discovery request
2019-11-30 09:41:16.773 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:41:16.774 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:41:16.774 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:41:16.775 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:41:16.776 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:41:16.777 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:41:16.778 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:41:16.778 +00:00 [DBG] Start key discovery request
2019-11-30 09:41:16.943 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:41:16.945 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:41:16.946 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:41:16.946 +00:00 [DBG] Start authorize request
2019-11-30 09:41:16.947 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:41:16.947 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:41:16.948 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:41:16.948 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:41:16.957 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"HN7FEGWeCbY0rhNz6NOs529rnyy8VyShGeIiY8BmPixbt","UiLocales":null,"Nonce":"HN7FEGWeCbY0rhNz6NOs529rnyy8VyShGeIiY8BmPixbt","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f2763a6823b1413a8c4ec5878e53f4dc","Raw":{"response_type":"id_token token","client_id":"angular","state":"HN7FEGWeCbY0rhNz6NOs529rnyy8VyShGeIiY8BmPixbt","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"HN7FEGWeCbY0rhNz6NOs529rnyy8VyShGeIiY8BmPixbt"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:41:17.883 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '192.168.1.4,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:17.893 +00:00 [ERR] An exception occurred while calculating the database error page content. Skipping display of the database error page.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:17.897 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:17.923 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:17.925 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 42
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 124
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 83
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpoint.cs:line 55
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:22.395 +00:00 [INF] {"Details":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)\n   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\\InHand\\Desktop\\Microservices\\Final Project\\eShop\\src\\Services\\Identity\\Identity.API\\Services\\ProfileService.cs:line 42\n   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeInteractionResponseGenerator.cs:line 124\n   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\ResponseHandling\\Default\\AuthorizeInteractionResponseGenerator.cs:line 83\n   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeEndpointBase.cs:line 81\n   at IdentityServer4.Endpoints.AuthorizeEndpoint.ProcessAsync(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Endpoints\\AuthorizeEndpoint.cs:line 55\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Hosting\\IdentityServerMiddleware.cs:line 54\nClientConnectionId:00000000-0000-0000-0000-000000000000","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)","ActivityId":"0HLRLF5A8U6JS:00000001","TimeStamp":"2019-11-30T09:41:22.0000000Z","ProcessId":643,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UnhandledExceptionEvent"}
2019-11-30 09:41:22.422 +00:00 [FTL] Unhandled exception: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 42
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 124
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 83
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpoint.cs:line 55
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:22.459 +00:00 [ERR] An exception occurred while calculating the database error page content. Skipping display of the database error page.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:22.473 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Identity.API.Services.ProfileService.IsActiveAsync(IsActiveContext context) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Services\ProfileService.cs:line 42
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessLoginAsync(ValidatedAuthorizeRequest request) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 124
   at IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator.ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\ResponseHandling\Default\AuthorizeInteractionResponseGenerator.cs:line 83
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpointBase.cs:line 81
   at IdentityServer4.Endpoints.AuthorizeEndpoint.ProcessAsync(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Endpoints\AuthorizeEndpoint.cs:line 55
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 54
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:41:22.501 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:41:22.503 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:41:22.507 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:41:22.510 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:41:22.511 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:41:22.513 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:41:22.514 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:41:22.515 +00:00 [DBG] Start discovery request
2019-11-30 09:41:22.555 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:41:22.556 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:41:22.557 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:41:22.558 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:41:22.559 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:41:22.571 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:41:22.572 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:41:22.573 +00:00 [DBG] Start key discovery request
2019-11-30 09:41:55.774 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:41:55.968 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:41:56.004 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:41:56.005 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:41:56.006 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:41:56.007 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:41:56.011 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:41:56.014 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:42:48.360 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:42:48.413 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:42:48.420 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:42:48.420 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:42:48.497 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 09:42:48.498 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 09:42:48.500 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 09:42:48.501 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 09:42:48.502 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 09:42:48.503 +00:00 [DBG] Error Url: /home/error
2019-11-30 09:42:48.505 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 09:42:48.551 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:42:48.780 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:42:48.782 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:42:48.788 +00:00 [DBG] Start discovery request
2019-11-30 09:42:48.903 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:42:48.904 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:42:48.905 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:42:48.910 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:42:48.914 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:42:48.916 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:42:48.918 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:42:49.026 +00:00 [DBG] Start key discovery request
2019-11-30 09:42:49.179 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:42:49.193 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:42:49.193 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:42:49.200 +00:00 [DBG] Start authorize request
2019-11-30 09:42:49.215 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:42:49.225 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:42:49.249 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:42:49.312 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:42:49.331 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"gkNNYceBmMska0M5Y48uXfetjmkg52dfNPinwb1qG8Z1t","UiLocales":null,"Nonce":"gkNNYceBmMska0M5Y48uXfetjmkg52dfNPinwb1qG8Z1t","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f2763a6823b1413a8c4ec5878e53f4dc","Raw":{"response_type":"id_token token","client_id":"angular","state":"gkNNYceBmMska0M5Y48uXfetjmkg52dfNPinwb1qG8Z1t","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"gkNNYceBmMska0M5Y48uXfetjmkg52dfNPinwb1qG8Z1t"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:42:56.253 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:42:56.253 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:42:56.253 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:42:56.254 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:42:56.255 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:42:56.257 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:42:56.257 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:42:56.258 +00:00 [DBG] Start discovery request
2019-11-30 09:42:56.307 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:42:56.308 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:42:56.308 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:42:56.308 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:42:56.308 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:42:56.308 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:42:56.309 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:42:56.309 +00:00 [DBG] Start key discovery request
2019-11-30 09:42:59.335 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:42:59.335 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:42:59.335 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:42:59.335 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:42:59.336 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:42:59.338 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:42:59.339 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:42:59.339 +00:00 [DBG] Start discovery request
2019-11-30 09:42:59.386 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:42:59.387 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:42:59.388 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:42:59.388 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:42:59.391 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:42:59.392 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:42:59.392 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:42:59.392 +00:00 [DBG] Start key discovery request
2019-11-30 09:43:00.370 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:00.371 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:43:00.373 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:00.376 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:00.378 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:43:00.383 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:43:00.384 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:43:00.385 +00:00 [DBG] Start discovery request
2019-11-30 09:43:00.395 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:00.395 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:43:00.396 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:00.396 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:00.397 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:43:00.397 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:43:00.397 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:43:00.398 +00:00 [DBG] Start key discovery request
2019-11-30 09:43:01.004 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:01.004 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:43:01.005 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:01.005 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:01.006 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:43:01.006 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:43:01.007 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:43:01.007 +00:00 [DBG] Start discovery request
2019-11-30 09:43:01.019 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:01.021 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:43:01.021 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:01.021 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:01.022 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:43:01.022 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:43:01.022 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:43:01.022 +00:00 [DBG] Start key discovery request
2019-11-30 09:43:01.563 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:01.563 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:43:01.563 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:01.563 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:01.564 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:43:01.564 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:43:01.564 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:43:01.564 +00:00 [DBG] Start discovery request
2019-11-30 09:43:01.587 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:01.587 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:43:01.587 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:01.588 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:01.588 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:43:01.589 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:43:01.589 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:43:01.590 +00:00 [DBG] Start key discovery request
2019-11-30 09:43:02.077 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:02.078 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:43:02.079 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:02.079 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:02.080 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:43:02.080 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:43:02.080 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:43:02.081 +00:00 [DBG] Start discovery request
2019-11-30 09:43:02.105 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:43:02.106 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:43:02.106 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:43:02.106 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:43:02.107 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:43:02.108 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:43:02.108 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:43:02.108 +00:00 [DBG] Start key discovery request
2019-11-30 09:43:11.007 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '192.168.1.4,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:43:11.135 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:43:11.152 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-11-30 09:43:52.121 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 09:43:52.186 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 09:43:52.225 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 09:43:52.225 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 09:43:52.226 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 09:43:52.226 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 09:43:52.226 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 09:43:52.226 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 09:49:30.693 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:49:30.742 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:49:30.749 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:49:30.749 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:49:30.844 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 09:49:30.845 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 09:49:30.845 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 09:49:30.846 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 09:49:30.846 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 09:49:30.847 +00:00 [DBG] Error Url: /home/error
2019-11-30 09:49:30.849 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 09:49:30.887 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:49:31.158 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:49:31.159 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:49:31.166 +00:00 [DBG] Start discovery request
2019-11-30 09:49:31.272 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:49:31.275 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:49:31.275 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:49:31.276 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:49:31.286 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:49:31.289 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:49:31.296 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:49:31.346 +00:00 [DBG] Start key discovery request
2019-11-30 09:49:32.705 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 09:49:32.720 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 09:49:32.720 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 09:49:32.726 +00:00 [DBG] Start authorize request
2019-11-30 09:49:32.744 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:49:32.755 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 09:49:32.779 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:49:32.861 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 09:49:32.880 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"YeBDlu40KeCK1tTex1qVzQwuVL-sDjcFioy-z57jSk8zV","UiLocales":null,"Nonce":"YeBDlu40KeCK1tTex1qVzQwuVL-sDjcFioy-z57jSk8zV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f2763a6823b1413a8c4ec5878e53f4dc","Raw":{"response_type":"id_token token","client_id":"angular","state":"YeBDlu40KeCK1tTex1qVzQwuVL-sDjcFioy-z57jSk8zV","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"YeBDlu40KeCK1tTex1qVzQwuVL-sDjcFioy-z57jSk8zV"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 09:49:32.950 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 09:49:32.962 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 09:49:32.983 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 09:49:32.984 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 09:49:32.999 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:49:33.100 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 09:49:33.102 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 09:49:33.141 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****wWyA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-tbA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLFACBTL13:00000001","TimeStamp":"2019-11-30T09:49:33.0000000Z","ProcessId":845,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 09:49:33.145 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"YeBDlu40KeCK1tTex1qVzQwuVL-sDjcFioy-z57jSk8zV","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 09:49:36.837 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:49:36.837 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 09:49:36.837 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:49:36.837 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:49:36.838 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:49:36.838 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:49:36.838 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:49:36.838 +00:00 [DBG] Start discovery request
2019-11-30 09:49:36.871 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:49:36.873 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 09:49:36.875 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 09:49:36.877 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 09:49:36.879 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:49:36.890 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:49:36.892 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:49:36.893 +00:00 [DBG] Start key discovery request
2019-11-30 09:50:23.135 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:50:23.136 +00:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 09:50:23.242 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-11-30 09:50:23.246 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-11-30 09:50:23.249 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-11-30 09:50:23.254 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRLFACBTL13:00000006","TimeStamp":"2019-11-30T09:50:23.0000000Z","ProcessId":845,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLogoutSuccessEvent"}
2019-11-30 09:50:23.502 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-11-30 09:50:23.508 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-11-30 09:50:23.509 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-11-30 09:50:23.528 +00:00 [DBG] Processing signout callback request
2019-11-30 09:50:23.558 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 09:50:23.559 +00:00 [DBG] No client front-channel logout URLs
2019-11-30 09:50:23.560 +00:00 [DBG] No client back-channel logout URLs
2019-11-30 09:50:23.564 +00:00 [INF] Successful signout callback.
2019-11-30 09:50:23.565 +00:00 [DBG] No client front-channel iframe urls
2019-11-30 09:50:23.565 +00:00 [DBG] No client back-channel iframe urls
2019-11-30 09:52:17.264 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:52:17.265 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-11-30 09:52:17.265 +00:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-30 09:52:17.265 +00:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-30 09:52:17.266 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 09:52:17.268 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 09:52:17.268 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 09:52:17.280 +00:00 [DBG] Start discovery request
2019-11-30 09:52:17.334 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 09:52:17.335 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-11-30 09:52:17.335 +00:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-11-30 09:52:17.335 +00:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-11-30 09:52:17.336 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 09:52:17.337 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 09:52:17.337 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 09:52:17.337 +00:00 [DBG] Start key discovery request
2019-11-30 10:03:07.559 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:07.559 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 10:03:07.559 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:03:07.559 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:03:07.563 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 10:03:07.565 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 10:03:07.565 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 10:03:07.565 +00:00 [DBG] Start discovery request
2019-11-30 10:03:07.581 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:07.582 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 10:03:07.582 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:03:07.582 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:03:07.583 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 10:03:07.583 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 10:03:07.583 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 10:03:07.583 +00:00 [DBG] Start key discovery request
2019-11-30 10:03:07.762 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 10:03:07.782 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 10:03:07.790 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 10:03:07.791 +00:00 [DBG] Start authorize request
2019-11-30 10:03:07.791 +00:00 [DBG] No user present in authorize request
2019-11-30 10:03:07.793 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 10:03:07.807 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:03:07.808 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 10:03:07.809 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP","UiLocales":null,"Nonce":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 10:03:07.810 +00:00 [INF] Showing login: User is not authenticated
2019-11-30 10:03:13.702 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 10:03:13.703 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:03:13.704 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 10:03:13.713 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:03:14.013 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:27.203 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:27.203 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-11-30 10:03:27.230 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 10:03:27.231 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:03:27.231 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 10:03:27.542 +00:00 [DBG] Augmenting SignInContext
2019-11-30 10:03:27.550 +00:00 [DBG] Adding idp claim with value: local
2019-11-30 10:03:27.550 +00:00 [DBG] Adding amr claim with value: pwd
2019-11-30 10:03:27.550 +00:00 [DBG] Adding auth_time claim with value: 1575108207
2019-11-30 10:03:27.559 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 10:03:27.698 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRLFACBTL19:00000003","TimeStamp":"2019-11-30T10:03:27.0000000Z","ProcessId":845,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLoginSuccessEvent"}
2019-11-30 10:03:27.700 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:03:27.727 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-11-30 10:03:27.729 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-11-30 10:03:27.729 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-11-30 10:03:27.742 +00:00 [DBG] Start authorize callback request
2019-11-30 10:03:27.747 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:03:27.747 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 10:03:27.747 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:03:27.748 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 10:03:27.748 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP","UiLocales":null,"Nonce":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2ab8a449687e5cf8fef611bcedef8f84","Raw":{"response_type":"id_token token","client_id":"angular","state":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 10:03:27.787 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 10:03:27.795 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 10:03:27.796 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 10:03:27.796 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:03:27.797 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:03:27.800 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 10:03:27.803 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:03:27.853 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-CWA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Z67w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLFACBTL19:00000004","TimeStamp":"2019-11-30T10:03:27.0000000Z","ProcessId":845,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 10:03:27.853 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"GbpjvJ-7DYDJlzPhnyBek35R-kQ4XXzvUHJHKSx7lS5NP","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 10:03:27.866 +00:00 [DBG] Augmenting SignInContext
2019-11-30 10:03:27.867 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-11-30 10:03:46.651 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:46.651 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 10:03:46.651 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:03:46.651 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:03:46.651 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 10:03:46.652 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 10:03:46.652 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 10:03:46.652 +00:00 [DBG] Start discovery request
2019-11-30 10:03:46.667 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:46.668 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 10:03:46.668 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:03:46.669 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:03:46.669 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 10:03:46.670 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 10:03:46.670 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 10:03:46.670 +00:00 [DBG] Start key discovery request
2019-11-30 10:03:46.692 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 10:03:46.694 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 10:03:46.694 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 10:03:46.694 +00:00 [DBG] Start authorize request
2019-11-30 10:03:46.695 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:03:46.695 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 10:03:46.695 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:03:46.696 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 10:03:46.696 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"e2_6SND8bsuWAab4moOEE5Wh_9rtPydNcxuMgP-IHwxff","UiLocales":null,"Nonce":"e2_6SND8bsuWAab4moOEE5Wh_9rtPydNcxuMgP-IHwxff","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2ab8a449687e5cf8fef611bcedef8f84","Raw":{"response_type":"id_token token","client_id":"angular","state":"e2_6SND8bsuWAab4moOEE5Wh_9rtPydNcxuMgP-IHwxff","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"e2_6SND8bsuWAab4moOEE5Wh_9rtPydNcxuMgP-IHwxff"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 10:03:46.745 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 10:03:46.745 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 10:03:46.745 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 10:03:46.746 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:03:46.748 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:03:46.772 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 10:03:46.772 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:03:46.795 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****RQRg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****kZig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLFACBTL19:00000005","TimeStamp":"2019-11-30T10:03:46.0000000Z","ProcessId":845,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 10:03:46.799 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"e2_6SND8bsuWAab4moOEE5Wh_9rtPydNcxuMgP-IHwxff","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 10:03:48.740 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:48.740 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 10:03:48.740 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:03:48.740 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:03:48.741 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 10:03:48.742 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 10:03:48.742 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 10:03:48.742 +00:00 [DBG] Start discovery request
2019-11-30 10:03:48.767 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:03:48.767 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 10:03:48.768 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:03:48.768 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:03:48.768 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 10:03:48.769 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 10:03:48.769 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 10:03:48.770 +00:00 [DBG] Start key discovery request
2019-11-30 10:16:31.448 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:16:31.514 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:16:31.544 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:16:31.544 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:16:31.546 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:16:31.547 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:16:31.548 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:16:31.548 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 10:24:28.042 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:24:28.114 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:24:28.135 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:24:28.135 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:24:28.137 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:24:28.138 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:24:28.139 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:24:28.140 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 10:32:35.943 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:32:36.078 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:32:36.139 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:32:36.151 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:32:36.172 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:32:36.176 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:32:36.183 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:32:36.200 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 10:32:59.775 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:32:59.901 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 10:32:59.908 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:32:59.909 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:33:00.044 +00:00 [DBG] Login Url: /Account/Login
2019-11-30 10:33:00.081 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-11-30 10:33:00.082 +00:00 [DBG] Logout Url: /Account/Logout
2019-11-30 10:33:00.084 +00:00 [DBG] ConsentUrl Url: /consent
2019-11-30 10:33:00.086 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-11-30 10:33:00.086 +00:00 [DBG] Error Url: /home/error
2019-11-30 10:33:00.089 +00:00 [DBG] Error Id Parameter: errorId
2019-11-30 10:33:00.177 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 10:33:00.568 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 10:33:00.571 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 10:33:00.579 +00:00 [DBG] Start discovery request
2019-11-30 10:33:00.774 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:33:00.775 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 10:33:00.776 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:33:00.777 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:33:00.781 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 10:33:00.784 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 10:33:00.792 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 10:33:00.803 +00:00 [DBG] Start key discovery request
2019-11-30 10:33:00.949 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 10:33:00.978 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 10:33:00.979 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 10:33:00.996 +00:00 [DBG] Start authorize request
2019-11-30 10:33:01.055 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:33:01.071 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 10:33:01.106 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:33:01.185 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 10:33:01.204 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"KHxB6JFAyDQLsxx7bdkuJp1dlF2rfCFTfG2bMbgjvfAPH","UiLocales":null,"Nonce":"KHxB6JFAyDQLsxx7bdkuJp1dlF2rfCFTfG2bMbgjvfAPH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2ab8a449687e5cf8fef611bcedef8f84","Raw":{"response_type":"id_token token","client_id":"angular","state":"KHxB6JFAyDQLsxx7bdkuJp1dlF2rfCFTfG2bMbgjvfAPH","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"KHxB6JFAyDQLsxx7bdkuJp1dlF2rfCFTfG2bMbgjvfAPH"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 10:33:02.732 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 10:33:02.747 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 10:33:02.763 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 10:33:02.763 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:33:02.775 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:33:02.890 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 10:33:02.896 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:33:02.940 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****weEg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nACg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLG2LRMEV2:00000001","TimeStamp":"2019-11-30T10:33:02.0000000Z","ProcessId":1916,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 10:33:02.944 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"KHxB6JFAyDQLsxx7bdkuJp1dlF2rfCFTfG2bMbgjvfAPH","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 10:33:07.510 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:33:07.510 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 10:33:07.510 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:33:07.510 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:33:07.511 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 10:33:07.512 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 10:33:07.512 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 10:33:07.512 +00:00 [DBG] Start discovery request
2019-11-30 10:33:07.549 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:33:07.549 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 10:33:07.549 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:33:07.549 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:33:07.549 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 10:33:07.550 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 10:33:07.550 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 10:33:07.550 +00:00 [DBG] Start key discovery request
2019-11-30 10:33:07.590 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-11-30 10:33:07.597 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-11-30 10:33:07.597 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-11-30 10:33:07.602 +00:00 [DBG] Start authorize request
2019-11-30 10:33:07.602 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:33:07.603 +00:00 [DBG] Start authorize request protocol validation
2019-11-30 10:33:07.605 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-11-30 10:33:07.607 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-11-30 10:33:07.619 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"YXSOJg58J0KNRtLbh1Ep3CAlWeYzuRvR9pfbCdA0VZ3Jc","UiLocales":null,"Nonce":"YXSOJg58J0KNRtLbh1Ep3CAlWeYzuRvR9pfbCdA0VZ3Jc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2ab8a449687e5cf8fef611bcedef8f84","Raw":{"response_type":"id_token token","client_id":"angular","state":"YXSOJg58J0KNRtLbh1Ep3CAlWeYzuRvR9pfbCdA0VZ3Jc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"YXSOJg58J0KNRtLbh1Ep3CAlWeYzuRvR9pfbCdA0VZ3Jc"},"$type":"AuthorizeRequestValidationLog"}
2019-11-30 10:33:07.805 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-11-30 10:33:07.805 +00:00 [DBG] Creating Implicit Flow response.
2019-11-30 10:33:07.806 +00:00 [DBG] Getting claims for access token for client: angular
2019-11-30 10:33:07.806 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-11-30 10:33:07.810 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:33:07.813 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-11-30 10:33:07.815 +00:00 [DBG] Claim types from profile service that were filtered: ["sub"]
2019-11-30 10:33:07.824 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Cs1g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xyYA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRLG2LRMEV2:00000002","TimeStamp":"2019-11-30T10:33:07.0000000Z","ProcessId":1916,"LocalIpAddress":"::ffff:172.19.0.5:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-11-30 10:33:07.824 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"YXSOJg58J0KNRtLbh1Ep3CAlWeYzuRvR9pfbCdA0VZ3Jc","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-11-30 10:33:12.344 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:33:12.345 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-11-30 10:33:12.345 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:33:12.345 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:33:12.346 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-11-30 10:33:12.346 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-11-30 10:33:12.346 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-11-30 10:33:12.346 +00:00 [DBG] Start discovery request
2019-11-30 10:33:12.381 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-11-30 10:33:12.381 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-11-30 10:33:12.381 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-11-30 10:33:12.381 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-11-30 10:33:12.382 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-11-30 10:33:12.382 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-11-30 10:33:12.382 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-11-30 10:33:12.382 +00:00 [DBG] Start key discovery request
2019-11-30 10:34:41.236 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:34:41.412 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:34:41.465 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:34:41.481 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:34:41.490 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:34:41.494 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:34:41.495 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:34:41.502 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 10:43:23.274 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:43:23.357 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:43:23.438 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:43:23.446 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:43:23.454 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:43:23.456 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:43:23.459 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:43:23.465 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 10:47:51.243 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:47:51.410 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:47:51.496 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:47:51.498 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:47:51.551 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:47:51.553 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:47:51.555 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:47:51.558 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-11-30 10:55:17.285 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-11-30 10:55:17.367 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-11-30 10:55:17.403 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-11-30 10:55:17.403 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-11-30 10:55:17.403 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-11-30 10:55:17.403 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-11-30 10:55:17.403 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-11-30 10:55:17.403 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-02 20:41:47.828 +00:00 [WRN] No XML encryptor configured. Key {82b6ce49-0654-4074-883d-a89577970621} may be persisted to storage in unencrypted form.
2019-12-02 20:41:48.546 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-02 20:41:48.670 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-02 20:41:48.728 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-02 20:41:48.730 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-02 20:41:48.732 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-02 20:41:48.733 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-02 20:41:48.735 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-02 20:41:48.736 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-02 20:42:16.940 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-02 20:42:16.988 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-02 20:42:16.994 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-02 20:42:16.994 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-02 20:42:17.068 +00:00 [DBG] Login Url: /Account/Login
2019-12-02 20:42:17.068 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-02 20:42:17.072 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-02 20:42:17.073 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-02 20:42:17.074 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-02 20:42:17.075 +00:00 [DBG] Error Url: /home/error
2019-12-02 20:42:17.076 +00:00 [DBG] Error Id Parameter: errorId
2019-12-02 20:42:17.110 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-02 20:42:17.298 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-02 20:42:17.299 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-02 20:42:17.306 +00:00 [DBG] Start discovery request
2019-12-02 20:42:17.553 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-02 20:42:17.554 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-02 20:42:17.555 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-02 20:42:17.556 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-02 20:42:17.560 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-02 20:42:17.562 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-02 20:42:17.563 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-02 20:42:17.574 +00:00 [DBG] Start key discovery request
2019-12-02 20:42:17.646 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-02 20:42:17.683 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-02 20:42:17.683 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-02 20:42:17.695 +00:00 [DBG] Start authorize request
2019-12-02 20:42:17.713 +00:00 [DBG] No user present in authorize request
2019-12-02 20:42:17.721 +00:00 [DBG] Start authorize request protocol validation
2019-12-02 20:42:17.749 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-02 20:42:17.809 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-02 20:42:17.826 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT","UiLocales":null,"Nonce":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT"},"$type":"AuthorizeRequestValidationLog"}
2019-12-02 20:42:17.889 +00:00 [INF] Showing login: User is not authenticated
2019-12-02 20:42:18.189 +00:00 [DBG] Start authorize request protocol validation
2019-12-02 20:42:18.189 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-02 20:42:18.192 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-02 20:42:18.197 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-02 20:42:25.626 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-02 20:42:25.627 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-02 20:42:25.733 +00:00 [DBG] Start authorize request protocol validation
2019-12-02 20:42:25.734 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-02 20:42:25.735 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-02 20:42:27.160 +00:00 [DBG] Augmenting SignInContext
2019-12-02 20:42:27.164 +00:00 [DBG] Adding idp claim with value: local
2019-12-02 20:42:27.165 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-02 20:42:27.165 +00:00 [DBG] Adding auth_time claim with value: 1575319347
2019-12-02 20:42:27.187 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-02 20:42:27.327 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRND0F7J8D9:00000005","TimeStamp":"2019-12-02T20:42:27.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLoginSuccessEvent"}
2019-12-02 20:42:27.331 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-02 20:42:27.371 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-02 20:42:27.381 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-02 20:42:27.382 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-02 20:42:27.403 +00:00 [DBG] Start authorize callback request
2019-12-02 20:42:27.410 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-02 20:42:27.410 +00:00 [DBG] Start authorize request protocol validation
2019-12-02 20:42:27.410 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-02 20:42:27.411 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-02 20:42:27.411 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT","UiLocales":null,"Nonce":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd4307c3867c7bd0875732c64dd63e0f","Raw":{"response_type":"id_token token","client_id":"angular","state":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT"},"$type":"AuthorizeRequestValidationLog"}
2019-12-02 20:42:27.516 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-02 20:42:27.529 +00:00 [DBG] Creating Implicit Flow response.
2019-12-02 20:42:27.546 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-02 20:42:27.547 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-02 20:42:27.558 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-02 20:42:27.670 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-02 20:42:27.672 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-02 20:42:27.685 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****NcuA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****q28g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRND0F7J8D9:00000006","TimeStamp":"2019-12-02T20:42:27.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-02 20:42:27.690 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"NGjHSO1EDNODy4MifvjfY8MI9YeRiuCWPw9CTojIZ_tOT","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-02 20:42:27.716 +00:00 [DBG] Augmenting SignInContext
2019-12-02 20:42:27.718 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-02 20:43:01.049 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-02 20:43:01.049 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-02 20:43:01.050 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-02 20:43:01.051 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-02 20:43:01.052 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-02 20:43:01.053 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-02 20:43:01.053 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-02 20:43:01.053 +00:00 [DBG] Start discovery request
2019-12-02 20:43:01.104 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-02 20:43:01.104 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-02 20:43:01.104 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-02 20:43:01.104 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-02 20:43:01.105 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-02 20:43:01.106 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-02 20:43:01.106 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-02 20:43:01.107 +00:00 [DBG] Start key discovery request
2019-12-03 11:04:06.868 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 11:04:06.948 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 11:04:06.964 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 11:04:06.964 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 11:04:06.965 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 11:04:06.966 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 11:04:06.967 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 11:04:06.969 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 11:05:02.639 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:05:02.691 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:05:02.698 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:05:02.699 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:05:02.776 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 11:05:02.777 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 11:05:02.777 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 11:05:02.779 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 11:05:02.780 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 11:05:02.781 +00:00 [DBG] Error Url: /home/error
2019-12-03 11:05:02.782 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 11:05:02.822 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:05:03.040 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:05:03.042 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:05:03.048 +00:00 [DBG] Start discovery request
2019-12-03 11:05:03.204 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:05:03.205 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:05:03.206 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:05:03.228 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:05:03.240 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:05:03.249 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:05:03.295 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:05:03.309 +00:00 [DBG] Start key discovery request
2019-12-03 11:05:04.744 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 11:05:04.762 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 11:05:04.762 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 11:05:04.769 +00:00 [DBG] Start authorize request
2019-12-03 11:05:04.787 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:05:04.795 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:05:04.823 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:05:04.904 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:05:04.923 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"OZAiU0OouO9l_cdtZbD-mursKeeKglWyrPV3LgvuiEbgJ","UiLocales":null,"Nonce":"OZAiU0OouO9l_cdtZbD-mursKeeKglWyrPV3LgvuiEbgJ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd4307c3867c7bd0875732c64dd63e0f","Raw":{"response_type":"id_token token","client_id":"angular","state":"OZAiU0OouO9l_cdtZbD-mursKeeKglWyrPV3LgvuiEbgJ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"OZAiU0OouO9l_cdtZbD-mursKeeKglWyrPV3LgvuiEbgJ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 11:05:04.983 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 11:05:04.992 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 11:05:05.009 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 11:05:05.011 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:05:05.022 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:05:05.121 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 11:05:05.122 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:05:05.161 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****oRmg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aRqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNS2IJL69N:00000001","TimeStamp":"2019-12-03T11:05:05.0000000Z","ProcessId":179,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 11:05:05.165 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"OZAiU0OouO9l_cdtZbD-mursKeeKglWyrPV3LgvuiEbgJ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 11:05:13.407 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:05:13.409 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:05:13.415 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:05:13.419 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:05:13.421 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:05:13.424 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:05:13.427 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:05:13.463 +00:00 [DBG] Start discovery request
2019-12-03 11:05:13.490 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:05:13.491 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:05:13.493 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:05:13.499 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:05:13.502 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:05:13.514 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:05:13.515 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:05:13.516 +00:00 [DBG] Start key discovery request
2019-12-03 11:13:01.192 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 11:13:01.295 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 11:13:01.312 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 11:13:01.312 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 11:13:01.312 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 11:13:01.312 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 11:13:01.312 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 11:13:01.312 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 11:13:37.519 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:13:37.582 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:13:37.625 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:13:37.628 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:13:37.730 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 11:13:37.742 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 11:13:37.745 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 11:13:37.745 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 11:13:37.746 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 11:13:37.746 +00:00 [DBG] Error Url: /home/error
2019-12-03 11:13:37.746 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 11:13:37.801 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:13:38.134 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:13:38.138 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:13:38.148 +00:00 [DBG] Start discovery request
2019-12-03 11:13:38.353 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:13:38.353 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:13:38.354 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:13:38.354 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:13:38.356 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:13:38.364 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:13:38.365 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:13:38.373 +00:00 [DBG] Start key discovery request
2019-12-03 11:13:38.607 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 11:13:38.643 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 11:13:38.643 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 11:13:38.651 +00:00 [DBG] Start authorize request
2019-12-03 11:13:38.688 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:13:38.699 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:13:38.748 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:13:38.854 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:13:38.901 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"7eK1CIj75aED8onXHbP7VRDh2fTj3qjCWJ-UAU_U1agVs","UiLocales":null,"Nonce":"7eK1CIj75aED8onXHbP7VRDh2fTj3qjCWJ-UAU_U1agVs","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd4307c3867c7bd0875732c64dd63e0f","Raw":{"response_type":"id_token token","client_id":"angular","state":"7eK1CIj75aED8onXHbP7VRDh2fTj3qjCWJ-UAU_U1agVs","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"7eK1CIj75aED8onXHbP7VRDh2fTj3qjCWJ-UAU_U1agVs"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 11:13:40.605 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 11:13:40.619 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 11:13:40.634 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 11:13:40.635 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:13:40.647 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:13:40.740 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 11:13:40.742 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:13:40.782 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TDMA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IRTA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNS7BV0K6N:00000001","TimeStamp":"2019-12-03T11:13:40.0000000Z","ProcessId":301,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 11:13:40.786 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"7eK1CIj75aED8onXHbP7VRDh2fTj3qjCWJ-UAU_U1agVs","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 11:14:40.310 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:14:40.310 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:14:40.311 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:14:40.311 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:14:40.312 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:14:40.313 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:14:40.313 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:14:40.313 +00:00 [DBG] Start discovery request
2019-12-03 11:14:40.360 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:14:40.363 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:14:40.365 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:14:40.366 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:14:40.373 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:14:40.378 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:14:40.378 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:14:40.378 +00:00 [DBG] Start key discovery request
2019-12-03 11:14:40.445 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 11:14:40.447 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 11:14:40.447 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 11:14:40.448 +00:00 [DBG] Start authorize request
2019-12-03 11:14:40.449 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:14:40.449 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:14:40.459 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:14:40.460 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:14:40.461 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ofSPSWUNWiEEP0119xVXnNnmxSVANO-ianAu_FVXxVPnE","UiLocales":null,"Nonce":"ofSPSWUNWiEEP0119xVXnNnmxSVANO-ianAu_FVXxVPnE","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd4307c3867c7bd0875732c64dd63e0f","Raw":{"response_type":"id_token token","client_id":"angular","state":"ofSPSWUNWiEEP0119xVXnNnmxSVANO-ianAu_FVXxVPnE","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"ofSPSWUNWiEEP0119xVXnNnmxSVANO-ianAu_FVXxVPnE"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 11:14:40.560 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 11:14:40.561 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 11:14:40.561 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 11:14:40.561 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:14:40.562 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:14:40.565 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 11:14:40.566 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:14:40.576 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****YXJQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****M7Zw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNS7BV0K6N:00000002","TimeStamp":"2019-12-03T11:14:40.0000000Z","ProcessId":301,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 11:14:40.578 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"ofSPSWUNWiEEP0119xVXnNnmxSVANO-ianAu_FVXxVPnE","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 11:14:45.340 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:14:45.341 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:14:45.341 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:14:45.341 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:14:45.342 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:14:45.342 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:14:45.342 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:14:45.342 +00:00 [DBG] Start discovery request
2019-12-03 11:14:45.375 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:14:45.376 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:14:45.376 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:14:45.376 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:14:45.376 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:14:45.377 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:14:45.377 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:14:45.377 +00:00 [DBG] Start key discovery request
2019-12-03 11:31:09.235 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 11:31:09.296 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 11:31:09.312 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 11:31:09.313 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 11:31:09.314 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 11:31:09.315 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 11:31:09.315 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 11:31:09.316 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 11:34:09.238 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 11:34:09.318 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 11:34:09.338 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 11:34:09.339 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 11:34:09.341 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 11:34:09.342 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 11:34:09.344 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 11:34:09.349 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 11:34:33.431 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:34:33.488 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:34:33.494 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:34:33.495 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:34:33.577 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 11:34:33.578 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 11:34:33.579 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 11:34:33.580 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 11:34:33.581 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 11:34:33.582 +00:00 [DBG] Error Url: /home/error
2019-12-03 11:34:33.583 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 11:34:33.619 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:34:33.825 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:34:33.826 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:34:33.832 +00:00 [DBG] Start discovery request
2019-12-03 11:34:33.927 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:34:33.928 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:34:33.930 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:34:33.931 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:34:33.934 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:34:33.935 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:34:33.936 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:34:33.944 +00:00 [DBG] Start key discovery request
2019-12-03 11:34:34.018 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 11:34:34.032 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 11:34:34.033 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 11:34:34.039 +00:00 [DBG] Start authorize request
2019-12-03 11:34:34.056 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:34:34.066 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:34:34.089 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:34:34.153 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:34:34.176 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"AbaZr7bZwwi1dXbvJ70_Os_Sb6hVAWFE4-QTo-FYe4FT0","UiLocales":null,"Nonce":"AbaZr7bZwwi1dXbvJ70_Os_Sb6hVAWFE4-QTo-FYe4FT0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fd4307c3867c7bd0875732c64dd63e0f","Raw":{"response_type":"id_token token","client_id":"angular","state":"AbaZr7bZwwi1dXbvJ70_Os_Sb6hVAWFE4-QTo-FYe4FT0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"AbaZr7bZwwi1dXbvJ70_Os_Sb6hVAWFE4-QTo-FYe4FT0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 11:34:35.288 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 11:34:35.305 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 11:34:35.325 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 11:34:35.328 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:34:35.343 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:34:35.436 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 11:34:35.437 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:34:35.473 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ZXzw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****x9XQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNSJ2BAP6R:00000001","TimeStamp":"2019-12-03T11:34:35.0000000Z","ProcessId":926,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 11:34:35.476 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"AbaZr7bZwwi1dXbvJ70_Os_Sb6hVAWFE4-QTo-FYe4FT0","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 11:34:37.612 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:34:37.612 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:34:37.612 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:34:37.613 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:34:37.614 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:34:37.618 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:34:37.618 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:34:37.618 +00:00 [DBG] Start discovery request
2019-12-03 11:34:37.674 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:34:37.674 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:34:37.674 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:34:37.674 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:34:37.675 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:34:37.680 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:34:37.680 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:34:37.680 +00:00 [DBG] Start key discovery request
2019-12-03 11:43:45.679 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 11:43:45.778 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 11:43:45.828 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 11:43:45.836 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 11:43:45.838 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 11:43:45.840 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 11:43:45.842 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 11:43:45.844 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 11:44:21.470 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:44:21.522 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:44:21.528 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:44:21.529 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:44:21.603 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 11:44:21.604 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 11:44:21.605 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 11:44:21.608 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 11:44:21.609 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 11:44:21.610 +00:00 [DBG] Error Url: /home/error
2019-12-03 11:44:21.611 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 11:44:21.650 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:44:21.843 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:44:21.844 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:44:21.851 +00:00 [DBG] Start discovery request
2019-12-03 11:44:21.971 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:44:21.972 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:44:21.974 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:44:21.976 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:44:21.978 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:44:21.987 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:44:21.987 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:44:21.999 +00:00 [DBG] Start key discovery request
2019-12-03 11:44:22.038 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 11:44:22.051 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 11:44:22.051 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 11:44:22.058 +00:00 [DBG] Start authorize request
2019-12-03 11:44:22.074 +00:00 [DBG] No user present in authorize request
2019-12-03 11:44:22.083 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:44:22.108 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:44:22.169 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:44:22.186 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV","UiLocales":null,"Nonce":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 11:44:22.231 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 11:44:22.530 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:44:22.532 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:44:22.533 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:44:22.538 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:44:23.026 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:44:28.317 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:44:28.318 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 11:44:28.470 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:44:28.472 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:44:28.473 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:44:29.996 +00:00 [DBG] Augmenting SignInContext
2019-12-03 11:44:30.003 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 11:44:30.003 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 11:44:30.003 +00:00 [DBG] Adding auth_time claim with value: 1575373469
2019-12-03 11:44:30.030 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 11:44:30.161 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRNSOHJ3PP5:00000004","TimeStamp":"2019-12-03T11:44:30.0000000Z","ProcessId":1095,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 11:44:30.164 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:44:30.212 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 11:44:30.214 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 11:44:30.215 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 11:44:30.232 +00:00 [DBG] Start authorize callback request
2019-12-03 11:44:30.240 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:44:30.241 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 11:44:30.242 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 11:44:30.243 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 11:44:30.245 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV","UiLocales":null,"Nonce":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4d93d43908682eb7b4dacb3264fab810","Raw":{"response_type":"id_token token","client_id":"angular","state":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 11:44:30.341 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 11:44:30.354 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 11:44:30.371 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 11:44:30.372 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 11:44:30.383 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:44:30.490 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 11:44:30.493 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 11:44:30.509 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1hYw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_NKQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNSOHJ3PP5:00000005","TimeStamp":"2019-12-03T11:44:30.0000000Z","ProcessId":1095,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 11:44:30.512 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"WbvBxhP5GcKcdIspl_Ze0Mdh513xkrx_i06TIzATaD9aV","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 11:44:30.543 +00:00 [DBG] Augmenting SignInContext
2019-12-03 11:44:30.544 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 11:44:33.743 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:44:33.743 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 11:44:33.743 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:44:33.743 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:44:33.744 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:44:33.744 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:44:33.744 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:44:33.744 +00:00 [DBG] Start discovery request
2019-12-03 11:44:33.767 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:44:33.767 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 11:44:33.768 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 11:44:33.768 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 11:44:33.769 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:44:33.774 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:44:33.775 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:44:33.775 +00:00 [DBG] Start key discovery request
2019-12-03 11:46:59.916 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:46:59.916 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-12-03 11:46:59.916 +00:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-12-03 11:46:59.916 +00:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-12-03 11:46:59.917 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 11:46:59.918 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 11:46:59.918 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 11:46:59.918 +00:00 [DBG] Start discovery request
2019-12-03 11:47:00.020 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 11:47:00.020 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-12-03 11:47:00.020 +00:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-12-03 11:47:00.020 +00:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-12-03 11:47:00.021 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 11:47:00.021 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 11:47:00.021 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 11:47:00.022 +00:00 [DBG] Start key discovery request
2019-12-03 14:15:57.032 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 14:15:57.104 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 14:15:57.129 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 14:15:57.129 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 14:15:57.133 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 14:15:57.136 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 14:15:57.138 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 14:15:57.140 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 14:16:33.891 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:16:33.949 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:16:33.958 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:16:33.959 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:16:34.033 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 14:16:34.034 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 14:16:34.035 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 14:16:34.036 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 14:16:34.038 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 14:16:34.040 +00:00 [DBG] Error Url: /home/error
2019-12-03 14:16:34.041 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 14:16:34.084 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:16:34.319 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:16:34.320 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:16:34.327 +00:00 [DBG] Start discovery request
2019-12-03 14:16:34.444 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:16:34.445 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:16:34.448 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:16:34.448 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:16:34.450 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:16:34.452 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:16:34.453 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:16:34.473 +00:00 [DBG] Start key discovery request
2019-12-03 14:16:34.578 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 14:16:34.607 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 14:16:34.607 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 14:16:34.618 +00:00 [DBG] Start authorize request
2019-12-03 14:16:34.647 +00:00 [DBG] No user present in authorize request
2019-12-03 14:16:34.665 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:16:34.698 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:16:34.779 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:16:34.803 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ","UiLocales":null,"Nonce":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:16:34.853 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 14:16:35.134 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:16:35.134 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:16:35.135 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:16:35.135 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:16:35.136 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:16:35.145 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:16:35.145 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:16:35.150 +00:00 [DBG] Start discovery request
2019-12-03 14:16:35.183 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:16:35.183 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:16:35.184 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:16:35.184 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:16:35.184 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:16:35.191 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:16:35.192 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:16:35.193 +00:00 [DBG] Start key discovery request
2019-12-03 14:16:35.476 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:16:35.477 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:16:35.478 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:16:35.483 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:16:42.657 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:16:42.658 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 14:16:42.734 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:16:42.736 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:16:42.738 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:16:44.189 +00:00 [DBG] Augmenting SignInContext
2019-12-03 14:16:44.193 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 14:16:44.195 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 14:16:44.195 +00:00 [DBG] Adding auth_time claim with value: 1575382604
2019-12-03 14:16:44.213 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 14:16:44.296 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRNVDJ8V77U:00000002","TimeStamp":"2019-12-03T14:16:44.0000000Z","ProcessId":1329,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 14:16:44.299 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:16:44.337 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 14:16:44.339 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 14:16:44.339 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 14:16:44.351 +00:00 [DBG] Start authorize callback request
2019-12-03 14:16:44.357 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:16:44.358 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:16:44.358 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:16:44.358 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:16:44.359 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ","UiLocales":null,"Nonce":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"66d18edb47e783163579aba7211bbb2e","Raw":{"response_type":"id_token token","client_id":"angular","state":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:16:44.414 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 14:16:44.437 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 14:16:44.459 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 14:16:44.460 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:16:44.482 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:16:44.611 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 14:16:44.612 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:16:44.623 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****lunQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7T8w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNVDJ8V77U:00000003","TimeStamp":"2019-12-03T14:16:44.0000000Z","ProcessId":1329,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 14:16:44.626 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"1AMBk-7JbFSxEcfyn4G7kvVkUwj9K-3vSIJSKtNioYzvZ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 14:16:44.649 +00:00 [DBG] Augmenting SignInContext
2019-12-03 14:16:44.650 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 14:17:09.345 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:17:09.345 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:17:09.345 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:17:09.345 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:17:09.345 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:17:09.346 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:17:09.346 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:17:09.346 +00:00 [DBG] Start discovery request
2019-12-03 14:17:09.372 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:17:09.373 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:17:09.373 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:17:09.373 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:17:09.373 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:17:09.373 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:17:09.374 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:17:09.374 +00:00 [DBG] Start key discovery request
2019-12-03 14:17:09.395 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 14:17:09.397 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 14:17:09.398 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 14:17:09.399 +00:00 [DBG] Start authorize request
2019-12-03 14:17:09.400 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:17:09.402 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:17:09.403 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:17:09.405 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:17:09.414 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"D6ISkHqAkl67gH8djQeUTt1p9lus8a0Jfyy9Y-jNl5eGc","UiLocales":null,"Nonce":"D6ISkHqAkl67gH8djQeUTt1p9lus8a0Jfyy9Y-jNl5eGc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"66d18edb47e783163579aba7211bbb2e","Raw":{"response_type":"id_token token","client_id":"angular","state":"D6ISkHqAkl67gH8djQeUTt1p9lus8a0Jfyy9Y-jNl5eGc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"D6ISkHqAkl67gH8djQeUTt1p9lus8a0Jfyy9Y-jNl5eGc"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:17:09.470 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 14:17:09.480 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 14:17:09.485 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 14:17:09.493 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:17:09.495 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:17:09.503 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 14:17:09.505 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:17:09.509 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5-Zg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Z6tg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNVDJ8V77U:00000004","TimeStamp":"2019-12-03T14:17:09.0000000Z","ProcessId":1329,"LocalIpAddress":"::ffff:172.19.0.6:80","RemoteIpAddress":"::ffff:172.19.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 14:17:09.511 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"D6ISkHqAkl67gH8djQeUTt1p9lus8a0Jfyy9Y-jNl5eGc","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 14:17:11.729 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:17:11.730 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:17:11.730 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:17:11.730 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:17:11.730 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:17:11.731 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:17:11.731 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:17:11.731 +00:00 [DBG] Start discovery request
2019-12-03 14:17:11.750 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:17:11.750 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:17:11.750 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:17:11.750 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:17:11.750 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:17:11.751 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:17:11.751 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:17:11.751 +00:00 [DBG] Start key discovery request
2019-12-03 14:19:12.208 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 14:19:12.298 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 14:19:12.323 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 14:19:12.324 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 14:19:12.327 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 14:19:12.336 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 14:19:12.337 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 14:19:12.339 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 14:41:42.655 +00:00 [WRN] No XML encryptor configured. Key {9b6a4f13-3ffd-410a-9a6c-51e347ecbc9d} may be persisted to storage in unencrypted form.
2019-12-03 14:41:43.080 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 14:41:43.119 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 14:41:43.156 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 14:41:43.157 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 14:41:43.160 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 14:41:43.163 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 14:41:43.164 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 14:41:43.168 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 14:45:49.554 +00:00 [WRN] No XML encryptor configured. Key {58cd2db9-c208-4730-b9a9-f6933fdddd4c} may be persisted to storage in unencrypted form.
2019-12-03 14:45:49.928 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 14:45:49.985 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 14:45:50.022 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 14:45:50.028 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 14:45:50.030 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 14:45:50.033 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 14:45:50.035 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 14:45:50.038 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 14:47:29.999 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:47:30.052 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:47:30.060 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:47:30.060 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:47:30.144 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 14:47:30.145 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 14:47:30.145 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 14:47:30.146 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 14:47:30.147 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 14:47:30.148 +00:00 [DBG] Error Url: /home/error
2019-12-03 14:47:30.149 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 14:47:30.185 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:47:30.419 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:47:30.420 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:47:30.428 +00:00 [DBG] Start discovery request
2019-12-03 14:47:30.706 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:47:30.708 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:47:30.709 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:47:30.711 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:47:30.732 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:47:30.734 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:47:30.734 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:47:30.753 +00:00 [DBG] Start key discovery request
2019-12-03 14:47:30.800 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:30.801 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:30.806 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 14:47:30.822 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 14:47:30.823 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 14:47:30.833 +00:00 [DBG] Start authorize request
2019-12-03 14:47:30.848 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:30.856 +00:00 [DBG] No user present in authorize request
2019-12-03 14:47:30.868 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:47:30.897 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:47:30.981 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:47:31.004 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc","UiLocales":null,"Nonce":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:47:31.077 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 14:47:31.094 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:31.094 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:31.380 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:31.380 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:47:31.381 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:47:31.382 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:47:31.386 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:47:31.527 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {82b6ce49-0654-4074-883d-a89577970621} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-03 14:47:42.974 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:47:42.975 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 14:47:42.976 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:42.977 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:43.079 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:43.079 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:47:43.080 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:47:43.081 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:47:44.433 +00:00 [DBG] Augmenting SignInContext
2019-12-03 14:47:44.438 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 14:47:44.439 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 14:47:44.441 +00:00 [DBG] Adding auth_time claim with value: 1575384464
2019-12-03 14:47:44.450 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 14:47:44.466 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 14:47:44.571 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRNVUSE1NUD:00000003","TimeStamp":"2019-12-03T14:47:44.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 14:47:44.575 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:47:44.614 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 14:47:44.616 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 14:47:44.616 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 14:47:44.629 +00:00 [DBG] Start authorize callback request
2019-12-03 14:47:44.634 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:47:44.635 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:47:44.635 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:47:44.635 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:47:44.635 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc","UiLocales":null,"Nonce":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f8e14c1b59d1d10e3b3b8ced1d400963","Raw":{"response_type":"id_token token","client_id":"angular","state":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:47:44.718 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 14:47:44.730 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 14:47:44.746 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 14:47:44.747 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:47:44.762 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:47:44.871 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 14:47:44.875 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:47:44.885 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****a95w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****umWg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNVUSE1NUD:00000004","TimeStamp":"2019-12-03T14:47:44.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 14:47:44.888 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"qNZVUGBmIpS6_VKRjP3-smdj1t1KunZTAvrSPezZWBCgc","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 14:47:44.913 +00:00 [DBG] Augmenting SignInContext
2019-12-03 14:47:44.914 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 14:47:49.283 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:47:49.283 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:47:49.284 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:47:49.284 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:47:49.284 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:47:49.284 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:47:49.285 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:47:49.285 +00:00 [DBG] Start discovery request
2019-12-03 14:47:49.327 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:47:49.328 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:47:49.328 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:47:49.329 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:47:49.329 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:47:49.330 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:47:49.330 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:47:49.330 +00:00 [DBG] Start key discovery request
2019-12-03 14:52:46.024 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:52:46.045 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:52:46.046 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:52:46.046 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:52:46.046 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:52:46.046 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:52:46.047 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:52:46.047 +00:00 [DBG] Start discovery request
2019-12-03 14:52:46.067 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:52:46.068 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:52:46.068 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:52:46.068 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:52:46.069 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:52:46.070 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:52:46.071 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:52:46.071 +00:00 [DBG] Start key discovery request
2019-12-03 14:52:46.102 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 14:52:46.109 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 14:52:46.110 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 14:52:46.110 +00:00 [DBG] Start authorize request
2019-12-03 14:52:46.145 +00:00 [DBG] No user present in authorize request
2019-12-03 14:52:46.146 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:52:46.146 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:52:46.149 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:52:46.151 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1","UiLocales":null,"Nonce":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:52:46.152 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 14:52:46.161 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:52:46.162 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:52:46.163 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:52:46.164 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:52:51.756 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:52:51.756 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 14:52:51.760 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:52:51.761 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:52:51.761 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:52:52.056 +00:00 [DBG] Augmenting SignInContext
2019-12-03 14:52:52.057 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 14:52:52.057 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 14:52:52.058 +00:00 [DBG] Adding auth_time claim with value: 1575384772
2019-12-03 14:52:52.059 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 14:52:52.074 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRNVUSE1NUF:00000003","TimeStamp":"2019-12-03T14:52:52.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 14:52:52.075 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:52:52.082 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 14:52:52.084 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 14:52:52.084 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 14:52:52.085 +00:00 [DBG] Start authorize callback request
2019-12-03 14:52:52.086 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:52:52.086 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:52:52.087 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:52:52.088 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:52:52.088 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1","UiLocales":null,"Nonce":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:52:52.135 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 14:52:52.136 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 14:52:52.136 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 14:52:52.136 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:52:52.136 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:52:52.141 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 14:52:52.144 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:52:52.151 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bfWw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6tcg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNVUSE1NUF:00000004","TimeStamp":"2019-12-03T14:52:52.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 14:52:52.151 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"blr7LXYe2Hk3nN2PYbSD6zvPrSUdY5uP_tC7YwRAooeV1","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 14:52:52.151 +00:00 [DBG] Augmenting SignInContext
2019-12-03 14:52:52.152 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 14:52:54.811 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:52:54.811 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:52:54.812 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:52:54.812 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:52:54.812 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:52:54.813 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:52:54.813 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:52:54.813 +00:00 [DBG] Start discovery request
2019-12-03 14:52:54.842 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:52:54.842 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:52:54.842 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:52:54.843 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:52:54.843 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:52:54.844 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:52:54.844 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:52:54.844 +00:00 [DBG] Start key discovery request
2019-12-03 14:53:48.880 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:53:48.880 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 14:53:48.881 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:53:48.881 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:53:48.881 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 14:53:48.882 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 14:53:48.882 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 14:53:48.882 +00:00 [DBG] Start discovery request
2019-12-03 14:53:49.165 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 14:53:49.165 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 14:53:49.166 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 14:53:49.166 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 14:53:49.168 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 14:53:49.169 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 14:53:49.169 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 14:53:49.169 +00:00 [DBG] Start key discovery request
2019-12-03 14:53:49.305 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 14:53:49.307 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 14:53:49.307 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 14:53:49.307 +00:00 [DBG] Start authorize request
2019-12-03 14:53:49.325 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:53:49.325 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 14:53:49.325 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 14:53:49.326 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 14:53:49.326 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"PwkWXnjFYMhGRDVcex_I6LH6M-XdR45cvooXJwP1SvLPj","UiLocales":null,"Nonce":"PwkWXnjFYMhGRDVcex_I6LH6M-XdR45cvooXJwP1SvLPj","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f8e14c1b59d1d10e3b3b8ced1d400963","Raw":{"response_type":"id_token token","client_id":"angular","state":"PwkWXnjFYMhGRDVcex_I6LH6M-XdR45cvooXJwP1SvLPj","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"PwkWXnjFYMhGRDVcex_I6LH6M-XdR45cvooXJwP1SvLPj"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 14:53:49.368 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 14:53:49.373 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 14:53:49.388 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 14:53:49.388 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 14:53:49.388 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:53:49.429 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 14:53:49.430 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 14:53:49.447 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****63qQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IjPw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRNVUSE1NUI:00000001","TimeStamp":"2019-12-03T14:53:49.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 14:53:49.460 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"PwkWXnjFYMhGRDVcex_I6LH6M-XdR45cvooXJwP1SvLPj","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:00:24.701 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 15:00:24.812 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 15:00:24.844 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 15:00:24.848 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 15:00:24.852 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 15:00:24.854 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 15:00:24.856 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 15:00:24.859 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 15:09:02.592 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 15:09:02.642 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 15:09:02.657 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 15:09:02.658 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 15:09:02.658 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 15:09:02.660 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 15:09:02.662 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 15:09:02.662 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 15:09:35.407 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:09:35.462 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:09:35.468 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:09:35.469 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:09:35.549 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 15:09:35.549 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 15:09:35.551 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 15:09:35.553 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 15:09:35.555 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 15:09:35.558 +00:00 [DBG] Error Url: /home/error
2019-12-03 15:09:35.562 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 15:09:35.597 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:09:35.806 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:09:35.807 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:09:35.813 +00:00 [DBG] Start discovery request
2019-12-03 15:09:35.925 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:09:35.926 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:09:35.928 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:09:35.930 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:09:35.935 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:09:35.939 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:09:35.942 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:09:35.952 +00:00 [DBG] Start key discovery request
2019-12-03 15:09:36.044 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:09:36.059 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:09:36.062 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:09:36.068 +00:00 [DBG] Start authorize request
2019-12-03 15:09:36.086 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:09:36.094 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:09:36.117 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:09:36.179 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:09:36.199 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"3G_uQAKhlzBwivXfB8zpiM2z9JPMDnMu3O_MOpp9-47Nx","UiLocales":null,"Nonce":"3G_uQAKhlzBwivXfB8zpiM2z9JPMDnMu3O_MOpp9-47Nx","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"3G_uQAKhlzBwivXfB8zpiM2z9JPMDnMu3O_MOpp9-47Nx","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"3G_uQAKhlzBwivXfB8zpiM2z9JPMDnMu3O_MOpp9-47Nx"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:09:37.293 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:09:37.306 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:09:37.323 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:09:37.324 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:09:37.337 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:09:37.442 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:09:37.443 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:09:37.482 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5V1A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****O4cg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0B7DV7RQ:00000001","TimeStamp":"2019-12-03T15:09:37.0000000Z","ProcessId":581,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:09:37.486 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"3G_uQAKhlzBwivXfB8zpiM2z9JPMDnMu3O_MOpp9-47Nx","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:09:40.204 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:09:40.204 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:09:40.204 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:09:40.205 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:09:40.205 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:09:40.206 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:09:40.206 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:09:40.206 +00:00 [DBG] Start discovery request
2019-12-03 15:09:40.244 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:09:40.245 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:09:40.245 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:09:40.245 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:09:40.245 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:09:40.246 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:09:40.246 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:09:40.246 +00:00 [DBG] Start key discovery request
2019-12-03 15:12:24.184 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 15:12:24.339 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 15:12:24.386 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 15:12:24.387 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 15:12:24.394 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 15:12:24.395 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 15:12:24.397 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 15:12:24.399 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 15:16:10.545 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:16:10.596 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:16:10.603 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:16:10.603 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:16:10.676 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 15:16:10.676 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 15:16:10.678 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 15:16:10.680 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 15:16:10.681 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 15:16:10.683 +00:00 [DBG] Error Url: /home/error
2019-12-03 15:16:10.684 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 15:16:10.718 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:16:10.952 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:16:10.953 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:16:10.961 +00:00 [DBG] Start discovery request
2019-12-03 15:16:11.055 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:16:11.056 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:16:11.056 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:16:11.056 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:16:11.057 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:16:11.059 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:16:11.059 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:16:11.119 +00:00 [DBG] Start key discovery request
2019-12-03 15:16:11.186 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:16:11.201 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:16:11.201 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:16:11.208 +00:00 [DBG] Start authorize request
2019-12-03 15:16:11.225 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:16:11.235 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:16:11.259 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:16:11.318 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:16:11.339 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"-5qDL_I5e9i7m6c9a128PgJzI6cKQohvB6BBWTc8Zn78u","UiLocales":null,"Nonce":"-5qDL_I5e9i7m6c9a128PgJzI6cKQohvB6BBWTc8Zn78u","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f8e14c1b59d1d10e3b3b8ced1d400963","Raw":{"response_type":"id_token token","client_id":"angular","state":"-5qDL_I5e9i7m6c9a128PgJzI6cKQohvB6BBWTc8Zn78u","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"-5qDL_I5e9i7m6c9a128PgJzI6cKQohvB6BBWTc8Zn78u"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:16:12.447 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:16:12.460 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:16:12.476 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:16:12.477 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:16:12.489 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:16:12.592 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:16:12.594 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:16:12.634 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TlMw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pWwA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MPQ:00000001","TimeStamp":"2019-12-03T15:16:12.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:16:12.638 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"-5qDL_I5e9i7m6c9a128PgJzI6cKQohvB6BBWTc8Zn78u","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:18:06.190 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:18:06.190 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:18:06.190 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:18:06.190 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:18:06.191 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:18:06.191 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:18:06.191 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:18:06.191 +00:00 [DBG] Start discovery request
2019-12-03 15:18:06.545 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:18:06.546 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:18:06.546 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:18:06.546 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:18:06.547 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:18:06.555 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:18:06.555 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:18:06.555 +00:00 [DBG] Start key discovery request
2019-12-03 15:18:06.823 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:18:06.848 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:18:06.848 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:18:06.848 +00:00 [DBG] Start authorize request
2019-12-03 15:18:06.848 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:18:06.849 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:18:06.849 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:18:06.850 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:18:06.851 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"9SCK2wLiU2Oktr7jTP2I-sA0GIyOJbcp9HdjQ_UT3Ey-7","UiLocales":null,"Nonce":"9SCK2wLiU2Oktr7jTP2I-sA0GIyOJbcp9HdjQ_UT3Ey-7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"9SCK2wLiU2Oktr7jTP2I-sA0GIyOJbcp9HdjQ_UT3Ey-7","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"9SCK2wLiU2Oktr7jTP2I-sA0GIyOJbcp9HdjQ_UT3Ey-7"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:18:07.084 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:18:07.085 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:18:07.086 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:18:07.087 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:18:07.087 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:18:07.099 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:18:07.105 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:18:07.109 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****FsdA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Eq1w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MPS:00000001","TimeStamp":"2019-12-03T15:18:07.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:18:07.110 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"9SCK2wLiU2Oktr7jTP2I-sA0GIyOJbcp9HdjQ_UT3Ey-7","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:18:11.732 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:18:11.732 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:18:11.732 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:18:11.732 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:18:11.732 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:18:11.733 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:18:11.733 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:18:11.733 +00:00 [DBG] Start discovery request
2019-12-03 15:18:11.752 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:18:11.752 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:18:11.752 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:18:11.753 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:18:11.753 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:18:11.753 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:18:11.754 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:18:11.754 +00:00 [DBG] Start key discovery request
2019-12-03 15:18:11.785 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:18:11.786 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:18:11.786 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:18:11.786 +00:00 [DBG] Start authorize request
2019-12-03 15:18:11.786 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:18:11.787 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:18:11.787 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:18:11.787 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:18:11.787 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"kHlA3Vmp2qgwgZbtdCaFkqa6kLYc7GKXnV3Mav3gyki6_","UiLocales":null,"Nonce":"kHlA3Vmp2qgwgZbtdCaFkqa6kLYc7GKXnV3Mav3gyki6_","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"kHlA3Vmp2qgwgZbtdCaFkqa6kLYc7GKXnV3Mav3gyki6_","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"kHlA3Vmp2qgwgZbtdCaFkqa6kLYc7GKXnV3Mav3gyki6_"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:18:11.808 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:18:11.810 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:18:11.810 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:18:11.810 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:18:11.811 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:18:11.814 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:18:11.814 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:18:11.825 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AImQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zf_w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MPS:00000002","TimeStamp":"2019-12-03T15:18:11.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:18:11.825 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"kHlA3Vmp2qgwgZbtdCaFkqa6kLYc7GKXnV3Mav3gyki6_","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:18:15.077 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:18:15.077 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:18:15.077 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:18:15.078 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:18:15.078 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:18:15.079 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:18:15.079 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:18:15.079 +00:00 [DBG] Start discovery request
2019-12-03 15:18:15.110 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:18:15.110 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:18:15.112 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:18:15.112 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:18:15.113 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:18:15.114 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:18:15.115 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:18:15.115 +00:00 [DBG] Start key discovery request
2019-12-03 15:19:11.546 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:19:11.547 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:19:11.547 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:19:11.547 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:19:11.547 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:19:11.547 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:19:11.547 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:19:11.548 +00:00 [DBG] Start discovery request
2019-12-03 15:19:11.586 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:19:11.586 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:19:11.586 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:19:11.587 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:19:11.587 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:19:11.588 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:19:11.588 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:19:11.589 +00:00 [DBG] Start key discovery request
2019-12-03 15:24:14.469 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:24:14.470 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:24:14.471 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:24:14.471 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:24:14.471 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:24:14.471 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:24:14.471 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:24:14.471 +00:00 [DBG] Start discovery request
2019-12-03 15:24:14.635 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:24:14.635 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:24:14.635 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:24:14.635 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:24:14.635 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:24:14.635 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:24:14.636 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:24:14.636 +00:00 [DBG] Start key discovery request
2019-12-03 15:24:14.971 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:24:14.971 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:24:14.971 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:24:14.971 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:24:14.972 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:24:14.972 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:24:14.972 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:24:14.972 +00:00 [DBG] Start discovery request
2019-12-03 15:24:15.156 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:24:15.156 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:24:15.156 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:24:15.156 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:24:15.156 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:24:15.157 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:24:15.157 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:24:15.157 +00:00 [DBG] Start key discovery request
2019-12-03 15:24:15.908 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:24:15.908 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:24:15.911 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:24:15.912 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:24:15.913 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:24:15.914 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:24:15.915 +00:00 [DBG] Start authorize request
2019-12-03 15:24:15.915 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:24:15.915 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:24:15.917 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:24:15.922 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:24:15.922 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"t2sR4NZJMjJZ6njOpeemWgW3c04YxE6m3huODwdimUq-Z","UiLocales":null,"Nonce":"t2sR4NZJMjJZ6njOpeemWgW3c04YxE6m3huODwdimUq-Z","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f8e14c1b59d1d10e3b3b8ced1d400963","Raw":{"response_type":"id_token token","client_id":"angular","state":"t2sR4NZJMjJZ6njOpeemWgW3c04YxE6m3huODwdimUq-Z","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"t2sR4NZJMjJZ6njOpeemWgW3c04YxE6m3huODwdimUq-Z"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:24:15.922 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:24:15.922 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:24:15.922 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:24:15.922 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:24:15.924 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:24:15.929 +00:00 [DBG] Start authorize request
2019-12-03 15:24:15.930 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:24:15.930 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:24:15.933 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:24:15.936 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:24:15.939 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"PVEzDbjAnALjMYhYVkLX3725R00F4BeyhSgdOS3S0F6Eb","UiLocales":null,"Nonce":"PVEzDbjAnALjMYhYVkLX3725R00F4BeyhSgdOS3S0F6Eb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"PVEzDbjAnALjMYhYVkLX3725R00F4BeyhSgdOS3S0F6Eb","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"PVEzDbjAnALjMYhYVkLX3725R00F4BeyhSgdOS3S0F6Eb"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:24:15.941 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:24:15.941 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:24:15.943 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:24:15.943 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:24:15.944 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:24:15.945 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:24:15.946 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:24:15.951 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:24:15.952 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Y6hw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZQbQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MQ2:00000001","TimeStamp":"2019-12-03T15:24:15.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:24:15.951 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:24:15.952 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"t2sR4NZJMjJZ6njOpeemWgW3c04YxE6m3huODwdimUq-Z","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:24:15.956 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jcxw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wc9A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MPV:00000001","TimeStamp":"2019-12-03T15:24:15.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:24:15.957 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"PVEzDbjAnALjMYhYVkLX3725R00F4BeyhSgdOS3S0F6Eb","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:27:00.819 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:27:00.819 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:27:00.819 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:27:00.819 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:27:00.822 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:27:00.823 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:27:00.823 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:27:00.823 +00:00 [DBG] Start discovery request
2019-12-03 15:27:00.844 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:27:00.845 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:27:00.845 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:27:00.846 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:27:00.847 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:27:00.847 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:27:00.848 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:27:00.848 +00:00 [DBG] Start key discovery request
2019-12-03 15:27:00.882 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:27:00.884 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:27:00.885 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:27:00.885 +00:00 [DBG] Start authorize request
2019-12-03 15:27:00.886 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:27:00.886 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:27:00.887 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:27:00.888 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:27:00.889 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"GW-nrGPIp7GvEYYdTqRNwSM17mZbLXdv-O1IHnZCwBV3l","UiLocales":null,"Nonce":"GW-nrGPIp7GvEYYdTqRNwSM17mZbLXdv-O1IHnZCwBV3l","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"GW-nrGPIp7GvEYYdTqRNwSM17mZbLXdv-O1IHnZCwBV3l","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"GW-nrGPIp7GvEYYdTqRNwSM17mZbLXdv-O1IHnZCwBV3l"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:27:00.908 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:27:00.950 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:27:00.951 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:27:00.951 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:27:00.952 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:27:00.996 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:27:00.997 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:27:01.001 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jB7g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YAlA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MPV:00000002","TimeStamp":"2019-12-03T15:27:01.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:27:01.002 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"GW-nrGPIp7GvEYYdTqRNwSM17mZbLXdv-O1IHnZCwBV3l","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:27:04.045 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:27:04.045 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:27:04.045 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:27:04.046 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:27:04.046 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:27:04.047 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:27:04.047 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:27:04.047 +00:00 [DBG] Start discovery request
2019-12-03 15:27:04.078 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:27:04.079 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:27:04.079 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:27:04.080 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:27:04.081 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:27:04.081 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:27:04.082 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:27:04.082 +00:00 [DBG] Start key discovery request
2019-12-03 15:35:53.115 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:35:53.116 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:35:53.116 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:35:53.116 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:35:53.117 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:35:53.118 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:35:53.118 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:35:53.119 +00:00 [DBG] Start discovery request
2019-12-03 15:35:53.401 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:35:53.403 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:35:53.403 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:35:53.404 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:35:53.415 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:35:53.416 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:35:53.416 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:35:53.417 +00:00 [DBG] Start key discovery request
2019-12-03 15:35:53.827 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:35:53.829 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:35:53.856 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:35:53.856 +00:00 [DBG] Start authorize request
2019-12-03 15:35:53.856 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:35:53.856 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:35:53.857 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:35:53.858 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:35:53.859 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"PYqGmlKA-rp4LkIA94CsJz1TFXlgJXFtpNaubWFLug_K6","UiLocales":null,"Nonce":"PYqGmlKA-rp4LkIA94CsJz1TFXlgJXFtpNaubWFLug_K6","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"PYqGmlKA-rp4LkIA94CsJz1TFXlgJXFtpNaubWFLug_K6","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"PYqGmlKA-rp4LkIA94CsJz1TFXlgJXFtpNaubWFLug_K6"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:35:53.996 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:35:53.997 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:35:53.999 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:35:54.012 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:35:54.013 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:35:54.030 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:35:54.043 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:35:54.047 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****q6kA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****z5xA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MQ6:00000001","TimeStamp":"2019-12-03T15:35:54.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:35:54.047 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"PYqGmlKA-rp4LkIA94CsJz1TFXlgJXFtpNaubWFLug_K6","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:37:36.252 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:37:36.252 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:37:36.252 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:37:36.253 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:37:36.253 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:37:36.254 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:37:36.254 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:37:36.254 +00:00 [DBG] Start discovery request
2019-12-03 15:37:36.270 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:37:36.270 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:37:36.271 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:37:36.271 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:37:36.272 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:37:36.272 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:37:36.273 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:37:36.273 +00:00 [DBG] Start key discovery request
2019-12-03 15:37:36.400 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:37:36.401 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:37:36.401 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:37:36.401 +00:00 [DBG] Start authorize request
2019-12-03 15:37:36.401 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:37:36.401 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:37:36.402 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:37:36.402 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:37:36.402 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Ve9Ucehl3nqKZ9B5493kNm80tXCGtbrEHDmy0yJyac2Em","UiLocales":null,"Nonce":"Ve9Ucehl3nqKZ9B5493kNm80tXCGtbrEHDmy0yJyac2Em","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"Ve9Ucehl3nqKZ9B5493kNm80tXCGtbrEHDmy0yJyac2Em","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"Ve9Ucehl3nqKZ9B5493kNm80tXCGtbrEHDmy0yJyac2Em"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:37:36.455 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:37:36.455 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:37:36.455 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:37:36.455 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:37:36.459 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:37:36.462 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:37:36.462 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:37:36.466 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5XUA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AqRw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MQ6:00000002","TimeStamp":"2019-12-03T15:37:36.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:37:36.466 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"Ve9Ucehl3nqKZ9B5493kNm80tXCGtbrEHDmy0yJyac2Em","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:37:39.263 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:37:39.263 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:37:39.263 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:37:39.264 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:37:39.264 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:37:39.265 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:37:39.265 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:37:39.265 +00:00 [DBG] Start discovery request
2019-12-03 15:37:39.295 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:37:39.296 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:37:39.296 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:37:39.297 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:37:39.297 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:37:39.297 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:37:39.297 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:37:39.298 +00:00 [DBG] Start key discovery request
2019-12-03 15:49:45.754 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:49:45.755 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:49:45.755 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:49:45.755 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:49:45.755 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:49:45.755 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:49:45.755 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:49:45.755 +00:00 [DBG] Start discovery request
2019-12-03 15:49:45.957 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:49:45.958 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:49:45.958 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:49:45.959 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:49:45.960 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:49:45.960 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:49:45.961 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:49:45.961 +00:00 [DBG] Start key discovery request
2019-12-03 15:49:46.079 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:49:46.093 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:49:46.094 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:49:46.094 +00:00 [DBG] Start authorize request
2019-12-03 15:49:46.095 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:49:46.095 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:49:46.096 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:49:46.097 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:49:46.116 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ohI5_Vc43o3cdyQoYANDOjwlp-mxWkQPfAdHMjblbIemr","UiLocales":null,"Nonce":"ohI5_Vc43o3cdyQoYANDOjwlp-mxWkQPfAdHMjblbIemr","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"ohI5_Vc43o3cdyQoYANDOjwlp-mxWkQPfAdHMjblbIemr","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"ohI5_Vc43o3cdyQoYANDOjwlp-mxWkQPfAdHMjblbIemr"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:49:46.216 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:49:46.217 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:49:46.217 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:49:46.217 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:49:46.218 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:49:46.226 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:49:46.227 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:49:46.232 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pk8g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bv7w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MQA:00000001","TimeStamp":"2019-12-03T15:49:46.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:49:46.237 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"ohI5_Vc43o3cdyQoYANDOjwlp-mxWkQPfAdHMjblbIemr","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:51:07.463 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:51:07.468 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:51:07.468 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:51:07.469 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:51:07.470 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:51:07.481 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:51:07.481 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:51:07.481 +00:00 [DBG] Start discovery request
2019-12-03 15:51:07.514 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:51:07.514 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:51:07.515 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:51:07.515 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:51:07.517 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:51:07.521 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:51:07.521 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:51:07.521 +00:00 [DBG] Start key discovery request
2019-12-03 15:51:07.568 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:51:07.578 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:51:07.579 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:51:07.580 +00:00 [DBG] Start authorize request
2019-12-03 15:51:07.580 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:51:07.581 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:51:07.588 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:51:07.592 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:51:07.593 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ip2S8suW63W5VrgWac1yDe224wqFOyUOB8pUW19pgWjbf","UiLocales":null,"Nonce":"ip2S8suW63W5VrgWac1yDe224wqFOyUOB8pUW19pgWjbf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"ip2S8suW63W5VrgWac1yDe224wqFOyUOB8pUW19pgWjbf","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"ip2S8suW63W5VrgWac1yDe224wqFOyUOB8pUW19pgWjbf"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:51:07.612 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:51:07.614 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:51:07.618 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:51:07.619 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:51:07.620 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:51:07.626 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:51:07.629 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:51:07.634 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jZWw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****lXnA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO0ET64MQA:00000002","TimeStamp":"2019-12-03T15:51:07.0000000Z","ProcessId":719,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:51:07.634 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"ip2S8suW63W5VrgWac1yDe224wqFOyUOB8pUW19pgWjbf","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:51:11.177 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:51:11.177 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:51:11.178 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:51:11.178 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:51:11.179 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:51:11.180 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:51:11.180 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:51:11.180 +00:00 [DBG] Start discovery request
2019-12-03 15:51:11.217 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:51:11.218 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:51:11.219 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:51:11.219 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:51:11.219 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:51:11.221 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:51:11.222 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:51:11.222 +00:00 [DBG] Start key discovery request
2019-12-03 15:56:55.690 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 15:56:55.741 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 15:56:55.762 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 15:56:55.763 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 15:56:55.763 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 15:56:55.763 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 15:56:55.763 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 15:56:55.763 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 15:57:12.388 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:57:12.439 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:57:12.447 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:57:12.447 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:57:12.525 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 15:57:12.526 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 15:57:12.526 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 15:57:12.526 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 15:57:12.526 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 15:57:12.526 +00:00 [DBG] Error Url: /home/error
2019-12-03 15:57:12.526 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 15:57:12.568 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:57:12.782 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:57:12.787 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:57:12.794 +00:00 [DBG] Start discovery request
2019-12-03 15:57:12.893 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:57:12.894 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:57:12.895 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:57:12.895 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:57:12.897 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:57:12.899 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:57:12.901 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:57:12.921 +00:00 [DBG] Start key discovery request
2019-12-03 15:57:14.259 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 15:57:14.277 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 15:57:14.277 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 15:57:14.286 +00:00 [DBG] Start authorize request
2019-12-03 15:57:14.306 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:57:14.316 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 15:57:14.340 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 15:57:14.407 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 15:57:14.424 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"LG7CRcGhD1VXYV49ABXyb6hb6pXtGCYYqN13RZGCWYG_9","UiLocales":null,"Nonce":"LG7CRcGhD1VXYV49ABXyb6hb6pXtGCYYqN13RZGCWYG_9","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"LG7CRcGhD1VXYV49ABXyb6hb6pXtGCYYqN13RZGCWYG_9","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"LG7CRcGhD1VXYV49ABXyb6hb6pXtGCYYqN13RZGCWYG_9"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 15:57:14.486 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 15:57:14.497 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 15:57:14.513 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 15:57:14.514 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 15:57:14.526 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:57:14.635 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 15:57:14.635 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 15:57:14.678 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****9Vbg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****QWsA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO15QS3V0U:00000001","TimeStamp":"2019-12-03T15:57:14.0000000Z","ProcessId":1835,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 15:57:14.684 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"LG7CRcGhD1VXYV49ABXyb6hb6pXtGCYYqN13RZGCWYG_9","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 15:57:21.434 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:57:21.434 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 15:57:21.435 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:57:21.435 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:57:21.435 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 15:57:21.436 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 15:57:21.436 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 15:57:21.436 +00:00 [DBG] Start discovery request
2019-12-03 15:57:21.485 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 15:57:21.485 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 15:57:21.485 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 15:57:21.485 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 15:57:21.485 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 15:57:21.486 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 15:57:21.486 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 15:57:21.486 +00:00 [DBG] Start key discovery request
2019-12-03 16:06:20.382 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:06:20.383 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 16:06:20.383 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:06:20.383 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:06:20.383 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 16:06:20.383 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 16:06:20.383 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 16:06:20.383 +00:00 [DBG] Start discovery request
2019-12-03 16:06:20.495 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:06:20.495 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 16:06:20.495 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:06:20.495 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:06:20.496 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 16:06:20.496 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 16:06:20.497 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 16:06:20.497 +00:00 [DBG] Start key discovery request
2019-12-03 16:06:20.729 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 16:06:20.765 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 16:06:20.765 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 16:06:20.765 +00:00 [DBG] Start authorize request
2019-12-03 16:06:20.835 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 16:06:20.841 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 16:06:20.856 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 16:06:20.858 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 16:06:20.858 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"lqBc8omJ6aKjlln8zVhszEoa-UCLX1uljXZMKTUAtkZT5","UiLocales":null,"Nonce":"lqBc8omJ6aKjlln8zVhszEoa-UCLX1uljXZMKTUAtkZT5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"lqBc8omJ6aKjlln8zVhszEoa-UCLX1uljXZMKTUAtkZT5","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"lqBc8omJ6aKjlln8zVhszEoa-UCLX1uljXZMKTUAtkZT5"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 16:06:21.295 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 16:06:21.324 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 16:06:21.325 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 16:06:21.325 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 16:06:21.325 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 16:06:21.329 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 16:06:21.330 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 16:06:21.350 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vilA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zwxA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO15QS3V11:00000001","TimeStamp":"2019-12-03T16:06:21.0000000Z","ProcessId":1835,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 16:06:21.351 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"lqBc8omJ6aKjlln8zVhszEoa-UCLX1uljXZMKTUAtkZT5","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 16:06:33.395 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:06:33.396 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 16:06:33.396 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:06:33.396 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:06:33.396 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 16:06:33.396 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 16:06:33.396 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 16:06:33.396 +00:00 [DBG] Start discovery request
2019-12-03 16:06:33.429 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:06:33.429 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 16:06:33.430 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:06:33.430 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:06:33.430 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 16:06:33.430 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 16:06:33.430 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 16:06:33.431 +00:00 [DBG] Start key discovery request
2019-12-03 16:06:33.481 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 16:06:33.483 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 16:06:33.483 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 16:06:33.483 +00:00 [DBG] Start authorize request
2019-12-03 16:06:33.484 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 16:06:33.484 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 16:06:33.485 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 16:06:33.486 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 16:06:33.486 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"be7xfV1zcL57G_rz_EHvx9ie4ewY8fuspax57HIlzF_Pj","UiLocales":null,"Nonce":"be7xfV1zcL57G_rz_EHvx9ie4ewY8fuspax57HIlzF_Pj","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"be7xfV1zcL57G_rz_EHvx9ie4ewY8fuspax57HIlzF_Pj","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"be7xfV1zcL57G_rz_EHvx9ie4ewY8fuspax57HIlzF_Pj"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 16:06:33.506 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 16:06:33.514 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 16:06:33.515 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 16:06:33.515 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 16:06:33.515 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 16:06:33.522 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 16:06:33.523 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 16:06:33.526 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8eOQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CiLQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO15QS3V11:00000002","TimeStamp":"2019-12-03T16:06:33.0000000Z","ProcessId":1835,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 16:06:33.531 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"be7xfV1zcL57G_rz_EHvx9ie4ewY8fuspax57HIlzF_Pj","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 16:06:37.059 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:06:37.060 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 16:06:37.060 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:06:37.060 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:06:37.060 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 16:06:37.060 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 16:06:37.061 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 16:06:37.061 +00:00 [DBG] Start discovery request
2019-12-03 16:06:37.098 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:06:37.098 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 16:06:37.098 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:06:37.099 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:06:37.099 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 16:06:37.100 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 16:06:37.100 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 16:06:37.100 +00:00 [DBG] Start key discovery request
2019-12-03 16:11:42.520 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:11:42.524 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 16:11:42.525 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:11:42.528 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:11:42.531 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 16:11:42.533 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 16:11:42.534 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 16:11:42.535 +00:00 [DBG] Start discovery request
2019-12-03 16:11:42.552 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 16:11:42.552 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 16:11:42.553 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 16:11:42.553 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 16:11:42.553 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 16:11:42.553 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 16:11:42.553 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 16:11:42.553 +00:00 [DBG] Start key discovery request
2019-12-03 16:11:42.617 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 16:11:42.619 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 16:11:42.619 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 16:11:42.619 +00:00 [DBG] Start authorize request
2019-12-03 16:11:42.619 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 16:11:42.619 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 16:11:42.619 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 16:11:42.620 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 16:11:42.620 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"i7DKcsYeN9Z7E9Au4lXrpMNQAmHCe8CkOUMk4IUb8mxVP","UiLocales":null,"Nonce":"i7DKcsYeN9Z7E9Au4lXrpMNQAmHCe8CkOUMk4IUb8mxVP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ad1020bead33fe4cbf239ea6fef410d9","Raw":{"response_type":"id_token token","client_id":"angular","state":"i7DKcsYeN9Z7E9Au4lXrpMNQAmHCe8CkOUMk4IUb8mxVP","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"i7DKcsYeN9Z7E9Au4lXrpMNQAmHCe8CkOUMk4IUb8mxVP"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 16:11:42.660 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 16:11:42.661 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 16:11:42.661 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 16:11:42.661 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 16:11:42.662 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 16:11:42.674 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 16:11:42.674 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 16:11:42.678 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Zy9w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BMeQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO15QS3V16:00000001","TimeStamp":"2019-12-03T16:11:42.0000000Z","ProcessId":1835,"LocalIpAddress":"::ffff:172.18.0.3:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 16:11:42.686 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"i7DKcsYeN9Z7E9Au4lXrpMNQAmHCe8CkOUMk4IUb8mxVP","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:13:35.165 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:13:35.320 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:13:35.332 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:13:35.332 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:13:35.332 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:13:35.332 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:13:35.332 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:13:35.332 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:13:36.087 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 20:13:36.089 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:13:36.089 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 20:13:36.089 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 20:13:36.089 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:13:36.089 +03:30 [DBG] Error Url: /home/error
2019-12-03 20:13:36.089 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 20:13:36.119 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:13:36.137 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:13:37.742 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:13:37.742 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:05.922 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:05.923 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:23.055 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:23.055 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:24.036 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:24.038 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:24.249 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:24.250 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:32.754 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:32.754 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:34.258 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:14:34.258 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:45.944 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:24:46.015 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:24:46.029 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:24:46.030 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:24:46.030 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:24:46.030 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:24:46.030 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:24:46.030 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:24:46.247 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 20:24:46.249 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:24:46.250 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 20:24:46.250 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 20:24:46.250 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:24:46.250 +03:30 [DBG] Error Url: /home/error
2019-12-03 20:24:46.250 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 20:24:46.261 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:46.288 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:56.511 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:56.511 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:56.745 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:56.746 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:56.784 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:24:56.785 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:17.610 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:17.610 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:20.321 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:20.321 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:20.417 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:20.417 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:23.173 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:23.173 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:23.223 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:23.223 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:23.270 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:26:23.271 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:27:21.862 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:27:21.862 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:27:22.147 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:27:22.148 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:27:22.203 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:27:22.203 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:01.997 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:01.997 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:02.251 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:02.252 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:02.311 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:02.311 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:56.604 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:56.604 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:56.660 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:56.660 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:56.716 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:28:56.716 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:33.651 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:33.651 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:33.695 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:33.695 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:33.756 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:33.756 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:40.135 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:40.135 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:44.659 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:29:44.659 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:04.850 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:04.850 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:05.218 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:05.219 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:05.310 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:05.310 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:06.040 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:06.040 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:11.860 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:11.860 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:11.942 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:11.942 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:11.984 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:11.985 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:17.837 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:17.837 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:18.123 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:18.123 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:18.181 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:30:18.181 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:15.060 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:15.060 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:15.448 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:15.449 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:15.535 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:15.535 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:24.266 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:31:24.338 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:31:24.351 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:31:24.351 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:31:24.351 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:31:24.351 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:31:24.351 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:31:24.351 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:31:24.582 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 20:31:24.585 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:31:24.585 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 20:31:24.585 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 20:31:24.585 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:31:24.585 +03:30 [DBG] Error Url: /home/error
2019-12-03 20:31:24.585 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 20:31:24.597 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:24.627 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:31.285 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:31.288 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:31.625 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:31.625 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:31.674 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:31.674 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:57.348 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:57.348 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:58.542 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:58.542 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:59.102 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:59.102 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:59.160 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:31:59.160 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:17.279 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:17.279 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:17.633 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:17.633 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:17.698 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:17.698 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:35.853 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:35.853 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:36.341 +03:30 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Account_Register.ExecuteAsync() in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Views\Account\Register.cshtml:line 11
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-03 20:34:43.387 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:43.387 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:43.639 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:43.639 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:43.705 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:43.705 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:06.601 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:06.601 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:06.638 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:06.638 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:06.707 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:06.707 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.327 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.327 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.366 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.366 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.438 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.439 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.488 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.488 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.544 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.544 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.606 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.606 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.655 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.655 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.693 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.693 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.764 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:08.764 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:41.248 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:41.248 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:41.574 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:
E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Views\Account\Register.cshtml(5,21): error CS1002: ; expected
   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(RazorCodeDocument codeDocument, String generatedCode)
   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)
   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)
   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)
   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)
   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)
   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)
   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-03 20:35:47.295 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:47.296 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:47.664 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:47.664 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:47.715 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:35:47.715 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:38.168 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:36:38.183 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 20:36:38.183 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:38.183 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:38.304 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:38.305 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:40.282 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:40.282 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:42.103 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:36:42.104 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 20:36:42.104 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:42.104 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:42.232 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:42.232 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:44.438 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:36:44.438 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:37:18.001 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:37:18.057 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:37:18.065 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:37:18.065 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:37:18.065 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:37:18.066 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:37:18.066 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:37:18.066 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:37:18.721 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 20:37:18.723 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:37:18.723 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 20:37:18.723 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 20:37:18.723 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:37:18.723 +03:30 [DBG] Error Url: /home/error
2019-12-03 20:37:18.723 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 20:37:18.763 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:37:18.784 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:26.559 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:26.560 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:28.172 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:28.173 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:28.278 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:28.279 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:50.570 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:38:50.582 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 20:38:50.583 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:50.583 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:38:59.928 +03:30 [WRN] User ab5892f5-22a2-4671-ba52-cb5e84ead1c9 password validation failed: PasswordRequiresNonAlphanumeric;PasswordRequiresLower;PasswordRequiresUpper.
2019-12-03 20:39:15.240 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:39:15.253 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:39:15.297 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:39:15.297 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:44:44.669 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:44:44.736 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:44:44.747 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:44:44.748 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:44:44.748 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:44:44.748 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:44:44.748 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:44:44.748 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:44:45.024 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 20:44:45.026 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:44:45.026 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 20:44:45.026 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 20:44:45.026 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:44:45.026 +03:30 [DBG] Error Url: /home/error
2019-12-03 20:44:45.026 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 20:44:45.038 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:44:45.073 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:34.160 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:34.161 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:34.382 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:34.382 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:34.438 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:34.439 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:43.975 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:43.975 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:44.027 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:44.028 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:44.087 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:44.087 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:45.328 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:45.328 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:45.362 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:45.362 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:45.441 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:45:45.442 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:53:30.882 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:53:30.883 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:53:30.938 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:53:30.938 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:53:30.994 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:53:30.994 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:46.896 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:46.896 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:48.729 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:48.729 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:48.796 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:48.796 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.028 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.028 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.073 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.073 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.133 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.134 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.707 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.707 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.749 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.750 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.810 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:00:51.810 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:03.197 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:03.198 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:03.680 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:03.681 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:03.747 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:03.747 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:04.383 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:04.383 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:04.427 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:04.427 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:04.473 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:01:04.473 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:07.672 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:07.672 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:07.955 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:07.956 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.015 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.015 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.672 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.672 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.709 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.710 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.773 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:08.774 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:43.825 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:43.825 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:44.290 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:44.290 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:44.344 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:44.344 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:53.184 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:53.184 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:53.504 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:53.504 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:53.570 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:02:53.570 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:09.249 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:09.249 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:09.534 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:09.534 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:09.597 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:09.597 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:20.472 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:20.472 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:20.770 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:20.770 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:20.832 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:20.832 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:31.689 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:31.689 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:32.048 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:32.048 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:32.117 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:05:32.120 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:16.866 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:16.866 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:17.150 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:17.150 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:17.206 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:17.206 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:24.627 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:24.627 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:24.965 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:24.965 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:25.031 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:25.031 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:49.298 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:49.299 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:49.621 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:49.622 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:49.697 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:06:49.698 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:15.241 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:15.241 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:15.596 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:15.596 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:15.667 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:15.667 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:30.714 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:30.714 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:31.008 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:31.008 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:31.062 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:31.062 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:46.586 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:46.586 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:46.852 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:46.853 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:46.905 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:46.905 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:59.240 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:59.240 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:59.576 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:59.576 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:59.631 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:07:59.631 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:17.433 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:17.433 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:17.701 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:17.701 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:17.765 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:17.765 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:27.523 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:27.524 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:27.874 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:27.875 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:27.933 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:27.933 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:46.794 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:46.794 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:47.099 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:47.099 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:47.159 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:47.159 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:58.554 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:58.554 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:58.918 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:58.918 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:58.975 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:08:58.975 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:09:37.857 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:09:37.857 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:09:38.286 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:09:38.286 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:09:38.342 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:09:38.342 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:10:13.838 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:10:13.885 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:10:13.895 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:10:13.895 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:10:13.895 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:10:13.895 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:10:13.895 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:10:13.895 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:10:14.235 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 21:10:14.237 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:10:14.237 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 21:10:14.237 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 21:10:14.237 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:10:14.238 +03:30 [DBG] Error Url: /home/error
2019-12-03 21:10:14.238 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 21:10:14.254 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:10:14.276 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:12:31.771 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:12:31.784 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:12:31.808 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:12:31.809 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:12:37.831 +03:30 [WRN] User 8034b054-1649-455f-8c5e-2166c127ebf4 password validation failed: PasswordRequiresLower;PasswordRequiresUpper.
2019-12-03 21:12:42.538 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:12:42.538 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:12:42.592 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:12:42.592 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:14:14.343 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:14:14.393 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:14:14.401 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:14:14.401 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:14:14.401 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:14:14.401 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:14:14.401 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:14:14.401 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:14:14.735 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 21:14:14.738 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:14:14.738 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 21:14:14.738 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 21:14:14.738 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:14:14.738 +03:30 [DBG] Error Url: /home/error
2019-12-03 21:14:14.738 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 21:14:14.755 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:14:14.774 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:21:53.103 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:53.119 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:21:53.121 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:21:53.121 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:22:00.388 +03:30 [WRN] User d6d6a3b4-7afc-436e-aa19-eec45b209f81 password validation failed: PasswordRequiresNonAlphanumeric.
2019-12-03 21:22:18.021 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:22:18.022 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:22:18.108 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:22:18.108 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:22:18.906 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:22:18.906 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:23:04.966 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:23:04.966 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:23:04.967 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:23:04.967 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:23:16.209 +03:30 [ERR] Failed executing DbCommand (480ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 4000), @p11='?' (Size = 256), @p12='?' (Size = 256), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 4000), @p17='?' (Size = 4000), @p18='?' (Size = 4000), @p19='?' (DbType = Boolean), @p20='?' (Size = 256), @p21='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [City], [ConcurrencyStamp], [Country], [Email], [EmailConfirmed], [LastName], [LockoutEnabled], [LockoutEnd], [Name], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [State], [Street], [TwoFactorEnabled], [UserName], [ZipCode])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
System.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'City', table 'Security.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
ClientConnectionId:545f6529-2e2d-493d-a1bb-26a0ea62e00b
Error Number:515,State:2,Class:16
2019-12-03 21:23:16.397 +03:30 [ERR] An exception occurred in the database while saving changes for context type 'Identity.API.Data.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details. ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'City', table 'Security.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IReadOnlyList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details. ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'City', table 'Security.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IReadOnlyList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2019-12-03 21:23:23.606 +03:30 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details. ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'City', table 'Security.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IReadOnlyList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(TUser user, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(TUser user, String password)
   at IdentityServer4.Quickstart.UI.AccountController.Register(RegisterViewModel model, String returnUrl) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 76
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-03 21:26:16.174 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:26:16.232 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:26:16.243 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:26:16.243 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:26:16.243 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:26:16.243 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:26:16.243 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:26:16.243 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:26:16.580 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 21:26:16.582 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:26:16.582 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 21:26:16.582 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 21:26:16.582 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:26:16.582 +03:30 [DBG] Error Url: /home/error
2019-12-03 21:26:16.582 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 21:26:16.599 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:26:16.617 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:26:32.117 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:26:32.118 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:26:32.668 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:26:32.668 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:27:05.292 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:27:05.318 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:27:05.319 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:27:05.319 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:27:08.256 +03:30 [ERR] Failed executing DbCommand (113ms) [Parameters=[@p0='?' (Size = 450), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (Size = 4000), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTimeOffset), @p10='?' (Size = 4000), @p11='?' (Size = 256), @p12='?' (Size = 256), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (DbType = Boolean), @p16='?' (Size = 4000), @p17='?' (Size = 4000), @p18='?' (Size = 4000), @p19='?' (DbType = Boolean), @p20='?' (Size = 256), @p21='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [City], [ConcurrencyStamp], [Country], [Email], [EmailConfirmed], [LastName], [LockoutEnabled], [LockoutEnd], [Name], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [State], [Street], [TwoFactorEnabled], [UserName], [ZipCode])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
System.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'City', table 'Security.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
ClientConnectionId:77f7b548-a356-4530-b0eb-d30e2c270a27
Error Number:515,State:2,Class:16
2019-12-03 21:27:08.326 +03:30 [ERR] An exception occurred in the database while saving changes for context type 'Identity.API.Data.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details. ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'City', table 'Security.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IReadOnlyList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details. ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'City', table 'Security.dbo.AspNetUsers'; column does not allow nulls. INSERT fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__122_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IReadOnlyList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2019-12-03 21:29:40.889 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:29:40.935 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:29:40.944 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:29:40.944 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:29:40.944 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:29:40.944 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:29:40.945 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:29:40.945 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:29:41.302 +03:30 [DBG] Login Url: /Account/Login
2019-12-03 21:29:41.304 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:29:41.304 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-03 21:29:41.304 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-03 21:29:41.304 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:29:41.304 +03:30 [DBG] Error Url: /home/error
2019-12-03 21:29:41.304 +03:30 [DBG] Error Id Parameter: errorId
2019-12-03 21:29:41.321 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:29:41.342 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:30:47.427 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:30:47.427 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:30:47.959 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:30:47.959 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:00.838 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:31:00.853 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:31:00.854 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:00.854 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:03.688 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:03.689 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:21.856 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:21.857 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:21.951 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:21.952 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:21.991 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:21.991 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:30.816 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:30.816 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:47.813 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:31:47.813 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:31:47.813 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:47.814 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:48.481 +03:30 [DBG] Augmenting SignInContext
2019-12-03 21:31:48.483 +03:30 [DBG] Adding idp claim with value: local
2019-12-03 21:31:48.483 +03:30 [DBG] Adding amr claim with value: pwd
2019-12-03 21:31:48.483 +03:30 [DBG] Adding auth_time claim with value: 1575396108
2019-12-03 21:31:48.490 +03:30 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 21:31:48.500 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 21:31:48.632 +03:30 [INF] {"Username":"user1@gmail.com","Provider":null,"ProviderUserId":null,"SubjectId":"397be4ba-329f-4325-b09a-2501d6b54489","DisplayName":"user1@gmail.com","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000021-0000-fb00-b63f-84710c7967bb","TimeStamp":"2019-12-03T18:01:48.0000000Z","ProcessId":19328,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-12-03 20:22:05.605 +00:00 [WRN] No XML encryptor configured. Key {afb203f8-08c1-4585-b408-79d5ce7a2609} may be persisted to storage in unencrypted form.
2019-12-03 20:22:06.049 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:22:06.120 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:22:06.158 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:22:06.159 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:22:06.162 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:22:06.164 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:22:06.165 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:22:06.171 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:23:38.815 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:23:38.871 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:23:38.880 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:23:38.880 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:23:38.957 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 20:23:38.959 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:23:38.961 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 20:23:38.963 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 20:23:38.964 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:23:38.965 +00:00 [DBG] Error Url: /home/error
2019-12-03 20:23:38.966 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 20:23:39.010 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:23:39.230 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:23:39.232 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:23:39.238 +00:00 [DBG] Start discovery request
2019-12-03 20:23:39.476 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:23:39.477 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:23:39.477 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:23:39.478 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:23:39.499 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:23:39.521 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:23:39.521 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:23:39.589 +00:00 [DBG] Start key discovery request
2019-12-03 20:23:39.687 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:39.688 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:39.692 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 20:23:39.710 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 20:23:39.711 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 20:23:39.719 +00:00 [DBG] Start authorize request
2019-12-03 20:23:39.732 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:39.739 +00:00 [DBG] No user present in authorize request
2019-12-03 20:23:39.749 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:23:39.777 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:23:39.843 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:23:39.866 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu","UiLocales":null,"Nonce":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:23:39.920 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 20:23:39.939 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:39.939 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:40.267 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:40.267 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:23:40.268 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:23:40.269 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:23:40.278 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:23:40.484 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {58cd2db9-c208-4730-b9a9-f6933fdddd4c} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-03 20:23:47.103 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:23:47.103 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 20:23:47.106 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:47.106 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:47.237 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:47.237 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:23:47.237 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:23:47.238 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:23:48.739 +00:00 [DBG] Augmenting SignInContext
2019-12-03 20:23:48.746 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 20:23:48.747 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 20:23:48.747 +00:00 [DBG] Adding auth_time claim with value: 1575404628
2019-12-03 20:23:48.751 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:23:48.763 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 20:23:48.839 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRO5QN6MB2O:00000003","TimeStamp":"2019-12-03T20:23:48.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.20.0.4:80","RemoteIpAddress":"::ffff:172.20.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 20:23:48.844 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:23:48.893 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 20:23:48.897 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 20:23:48.899 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 20:23:48.910 +00:00 [DBG] Start authorize callback request
2019-12-03 20:23:48.919 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:23:48.920 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:23:48.920 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:23:48.920 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:23:48.921 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu","UiLocales":null,"Nonce":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fccdd8f73e80c5477037f44f311e4124","Raw":{"response_type":"id_token token","client_id":"angular","state":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:23:49.033 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 20:23:49.048 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 20:23:49.067 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 20:23:49.069 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:23:49.082 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:23:49.187 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 20:23:49.189 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:23:49.204 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DWXA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****J4QA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO5QN6MB2O:00000004","TimeStamp":"2019-12-03T20:23:49.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.20.0.4:80","RemoteIpAddress":"::ffff:172.20.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 20:23:49.208 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"3Fo7fQW_4omOaDakU6Dj8wgsiV1J72dh0xZnJ1cClLyVu","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:23:49.236 +00:00 [DBG] Augmenting SignInContext
2019-12-03 20:23:49.238 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 20:23:59.056 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:23:59.056 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:23:59.056 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:23:59.056 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:23:59.056 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:23:59.057 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:23:59.057 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:23:59.057 +00:00 [DBG] Start discovery request
2019-12-03 20:23:59.078 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:23:59.079 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:23:59.079 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:23:59.079 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:23:59.080 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:23:59.089 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:23:59.089 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:23:59.089 +00:00 [DBG] Start key discovery request
2019-12-03 20:23:59.130 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 20:23:59.183 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 20:23:59.183 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 20:23:59.183 +00:00 [DBG] Start authorize request
2019-12-03 20:23:59.183 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:23:59.184 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:23:59.184 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:23:59.186 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:23:59.209 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"zy8zA5dbCGmM27hiqvtlls_3_pwoe8sjpU2DvJU2-8vd-","UiLocales":null,"Nonce":"zy8zA5dbCGmM27hiqvtlls_3_pwoe8sjpU2DvJU2-8vd-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fccdd8f73e80c5477037f44f311e4124","Raw":{"response_type":"id_token token","client_id":"angular","state":"zy8zA5dbCGmM27hiqvtlls_3_pwoe8sjpU2DvJU2-8vd-","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"zy8zA5dbCGmM27hiqvtlls_3_pwoe8sjpU2DvJU2-8vd-"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:23:59.239 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 20:23:59.239 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 20:23:59.240 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 20:23:59.240 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:23:59.240 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:23:59.253 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 20:23:59.256 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:23:59.280 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4ydg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****oCVw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO5QN6MB2O:00000005","TimeStamp":"2019-12-03T20:23:59.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.20.0.4:80","RemoteIpAddress":"::ffff:172.20.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 20:23:59.364 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"zy8zA5dbCGmM27hiqvtlls_3_pwoe8sjpU2DvJU2-8vd-","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:24:01.481 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:24:01.481 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:24:01.481 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:24:01.482 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:24:01.482 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:24:01.483 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:24:01.483 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:24:01.483 +00:00 [DBG] Start discovery request
2019-12-03 20:24:01.512 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:24:01.513 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:24:01.513 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:24:01.513 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:24:01.513 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:24:01.514 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:24:01.514 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:24:01.514 +00:00 [DBG] Start key discovery request
2019-12-03 20:31:20.769 +00:00 [WRN] No XML encryptor configured. Key {74e5efd4-03e1-429f-a63e-320a389f6fda} may be persisted to storage in unencrypted form.
2019-12-03 20:31:21.260 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:31:21.340 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:31:21.386 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:31:21.390 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:31:21.391 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:31:21.393 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:31:21.394 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:31:21.396 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:33:17.975 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:33:18.073 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:33:18.090 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:33:18.092 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:33:18.096 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:33:18.099 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:33:18.101 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:33:18.103 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:33:48.594 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:33:48.664 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:33:48.674 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:33:48.675 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:33:48.794 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 20:33:48.796 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:33:48.798 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 20:33:48.800 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 20:33:48.801 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:33:48.806 +00:00 [DBG] Error Url: /home/error
2019-12-03 20:33:48.810 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 20:33:48.861 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:33:49.142 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:33:49.147 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:33:49.155 +00:00 [DBG] Start discovery request
2019-12-03 20:33:49.273 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:33:49.276 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:33:49.280 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:33:49.286 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:33:49.289 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:33:49.293 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:33:49.304 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:33:49.312 +00:00 [DBG] Start key discovery request
2019-12-03 20:33:49.386 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:49.388 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:49.394 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 20:33:49.424 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 20:33:49.425 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 20:33:49.440 +00:00 [DBG] Start authorize request
2019-12-03 20:33:49.456 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:49.471 +00:00 [DBG] No user present in authorize request
2019-12-03 20:33:49.493 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:33:49.593 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:33:49.775 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:33:49.799 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W","UiLocales":null,"Nonce":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:33:49.853 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 20:33:49.872 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:49.872 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:50.246 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:33:50.247 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:33:50.247 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:33:50.252 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:33:50.258 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:33:50.462 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {afb203f8-08c1-4585-b408-79d5ce7a2609} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-03 20:34:00.590 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:34:00.595 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 20:34:00.596 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:00.597 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:00.699 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:00.699 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:34:00.699 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:34:00.699 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:34:02.545 +00:00 [DBG] Augmenting SignInContext
2019-12-03 20:34:02.552 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 20:34:02.553 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 20:34:02.555 +00:00 [DBG] Adding auth_time claim with value: 1575405242
2019-12-03 20:34:02.561 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-03 20:34:02.584 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 20:34:02.639 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRO60CRFNQ3:00000003","TimeStamp":"2019-12-03T20:34:02.0000000Z","ProcessId":113,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 20:34:02.643 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:34:02.689 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 20:34:02.692 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 20:34:02.692 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 20:34:02.707 +00:00 [DBG] Start authorize callback request
2019-12-03 20:34:02.713 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:34:02.713 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:34:02.714 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:34:02.714 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:34:02.716 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W","UiLocales":null,"Nonce":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f0f3bc50237161a2ed344da3b92da0b7","Raw":{"response_type":"id_token token","client_id":"angular","state":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:34:02.832 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 20:34:02.844 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 20:34:02.860 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 20:34:02.863 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:34:02.876 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:34:02.975 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 20:34:02.977 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:34:02.990 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4ykg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mTlA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO60CRFNQ3:00000004","TimeStamp":"2019-12-03T20:34:02.0000000Z","ProcessId":113,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 20:34:02.993 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"E9WQ72nL8rQ64LJcktZpnCqiYcwk-evr7IS_VIc42645W","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:34:03.025 +00:00 [DBG] Augmenting SignInContext
2019-12-03 20:34:03.027 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 20:34:18.270 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:34:18.270 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:34:18.270 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:34:18.271 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:34:18.271 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:34:18.271 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:34:18.272 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:34:18.272 +00:00 [DBG] Start discovery request
2019-12-03 20:34:18.305 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:34:18.305 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:34:18.305 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:34:18.305 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:34:18.305 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:34:18.306 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:34:18.306 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:34:18.306 +00:00 [DBG] Start key discovery request
2019-12-03 20:34:18.412 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 20:34:18.416 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 20:34:18.416 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 20:34:18.417 +00:00 [DBG] Start authorize request
2019-12-03 20:34:18.417 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:34:18.417 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:34:18.417 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:34:18.418 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:34:18.431 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"zL8qLNYHoFke6-RJM1qSDJgBYSmOEneZhC7ln75Sdj8yz","UiLocales":null,"Nonce":"zL8qLNYHoFke6-RJM1qSDJgBYSmOEneZhC7ln75Sdj8yz","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f0f3bc50237161a2ed344da3b92da0b7","Raw":{"response_type":"id_token token","client_id":"angular","state":"zL8qLNYHoFke6-RJM1qSDJgBYSmOEneZhC7ln75Sdj8yz","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"zL8qLNYHoFke6-RJM1qSDJgBYSmOEneZhC7ln75Sdj8yz"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:34:18.463 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 20:34:18.464 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 20:34:18.467 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 20:34:18.467 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:34:18.469 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:34:18.476 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 20:34:18.478 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:34:18.484 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****xeLQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****DSXw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO60CRFNQ3:00000005","TimeStamp":"2019-12-03T20:34:18.0000000Z","ProcessId":113,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 20:34:18.484 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"zL8qLNYHoFke6-RJM1qSDJgBYSmOEneZhC7ln75Sdj8yz","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:34:22.273 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:34:22.273 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:34:22.274 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:34:22.274 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:34:22.275 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:34:22.275 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:34:22.275 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:34:22.276 +00:00 [DBG] Start discovery request
2019-12-03 20:34:22.307 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:34:22.307 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:34:22.308 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:34:22.308 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:34:22.309 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:34:22.310 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:34:22.310 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:34:22.310 +00:00 [DBG] Start key discovery request
2019-12-03 20:50:29.499 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 20:50:29.636 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 20:50:29.669 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 20:50:29.670 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 20:50:29.676 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 20:50:29.684 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 20:50:29.685 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 20:50:29.686 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 20:50:42.990 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:50:43.043 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:50:43.054 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:50:43.054 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:50:43.135 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 20:50:43.135 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 20:50:43.135 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 20:50:43.135 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 20:50:43.135 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 20:50:43.135 +00:00 [DBG] Error Url: /home/error
2019-12-03 20:50:43.136 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 20:50:43.177 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:50:43.432 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:50:43.433 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:50:43.439 +00:00 [DBG] Start discovery request
2019-12-03 20:50:43.553 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:50:43.554 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:50:43.555 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:50:43.555 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:50:43.556 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:50:43.557 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:50:43.558 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:50:43.566 +00:00 [DBG] Start key discovery request
2019-12-03 20:50:43.660 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 20:50:43.674 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 20:50:43.675 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 20:50:43.685 +00:00 [DBG] Start authorize request
2019-12-03 20:50:43.704 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:50:43.712 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:50:43.739 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:50:43.805 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:50:43.822 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"BCtGf9pk_thd4hjdzONjyZoB6VK-Y5445ytzKUpk8ZtlJ","UiLocales":null,"Nonce":"BCtGf9pk_thd4hjdzONjyZoB6VK-Y5445ytzKUpk8ZtlJ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f0f3bc50237161a2ed344da3b92da0b7","Raw":{"response_type":"id_token token","client_id":"angular","state":"BCtGf9pk_thd4hjdzONjyZoB6VK-Y5445ytzKUpk8ZtlJ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"BCtGf9pk_thd4hjdzONjyZoB6VK-Y5445ytzKUpk8ZtlJ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:50:45.019 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 20:50:45.032 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 20:50:45.050 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 20:50:45.051 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:50:45.066 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:50:45.171 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 20:50:45.172 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:50:45.211 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****fP2A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****z8tw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO69R86G4T:00000001","TimeStamp":"2019-12-03T20:50:45.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 20:50:45.214 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"BCtGf9pk_thd4hjdzONjyZoB6VK-Y5445ytzKUpk8ZtlJ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:51:09.452 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:09.452 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:09.452 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:09.452 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:09.452 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:09.453 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:09.453 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:09.453 +00:00 [DBG] Start discovery request
2019-12-03 20:51:09.503 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:09.503 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:09.504 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:09.504 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:09.505 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:09.507 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:09.507 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:09.507 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:09.581 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 20:51:09.585 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 20:51:09.585 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 20:51:09.586 +00:00 [DBG] Start authorize request
2019-12-03 20:51:09.586 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:51:09.588 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:51:09.589 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:51:09.590 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:51:09.634 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"FZvhgQWm9ixDq02SfG4xAv0_sTGNRzXzbHs-0il7Q_hXB","UiLocales":null,"Nonce":"FZvhgQWm9ixDq02SfG4xAv0_sTGNRzXzbHs-0il7Q_hXB","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f0f3bc50237161a2ed344da3b92da0b7","Raw":{"response_type":"id_token token","client_id":"angular","state":"FZvhgQWm9ixDq02SfG4xAv0_sTGNRzXzbHs-0il7Q_hXB","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"FZvhgQWm9ixDq02SfG4xAv0_sTGNRzXzbHs-0il7Q_hXB"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:51:09.810 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 20:51:09.810 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 20:51:09.811 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 20:51:09.811 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:51:09.811 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:51:09.815 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 20:51:09.825 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:51:09.829 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Gdew","$type":"Token"},{"TokenType":"access_token","TokenValue":"****r17g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO69R86G4T:00000002","TimeStamp":"2019-12-03T20:51:09.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 20:51:09.831 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"FZvhgQWm9ixDq02SfG4xAv0_sTGNRzXzbHs-0il7Q_hXB","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:51:22.731 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:22.732 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:22.733 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:22.733 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:22.733 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:22.733 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:22.733 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:22.733 +00:00 [DBG] Start discovery request
2019-12-03 20:51:22.782 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:22.784 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:22.787 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:22.790 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:22.797 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:22.798 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:22.798 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:22.798 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:29.182 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:29.182 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:29.182 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:29.183 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:29.183 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:29.183 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:29.183 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:29.183 +00:00 [DBG] Start discovery request
2019-12-03 20:51:29.198 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:29.198 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:29.199 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:29.199 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:29.199 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:29.199 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:29.200 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:29.200 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:29.830 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:29.830 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:29.830 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:29.830 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:29.831 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:29.831 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:29.831 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:29.831 +00:00 [DBG] Start discovery request
2019-12-03 20:51:29.846 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:29.846 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:29.846 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:29.846 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:29.847 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:29.848 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:29.848 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:29.848 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:30.013 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:30.014 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:30.014 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:30.014 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:30.014 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:30.015 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:30.015 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:30.015 +00:00 [DBG] Start discovery request
2019-12-03 20:51:30.029 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:30.029 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:30.029 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:30.029 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:30.029 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:30.030 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:30.030 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:30.030 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:36.478 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:36.479 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:36.479 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:36.480 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:36.481 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:36.482 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:36.483 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:36.483 +00:00 [DBG] Start discovery request
2019-12-03 20:51:36.495 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:36.496 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:36.496 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:36.496 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:36.496 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:36.496 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:36.496 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:36.496 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:37.111 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:37.112 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:37.113 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:37.114 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:37.115 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:37.116 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:37.116 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:37.116 +00:00 [DBG] Start discovery request
2019-12-03 20:51:37.135 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:37.136 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:37.136 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:37.136 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:37.137 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:37.138 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:37.138 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:37.138 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:37.320 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:37.320 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:37.320 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:37.320 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:37.320 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:37.320 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:37.320 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:37.321 +00:00 [DBG] Start discovery request
2019-12-03 20:51:37.335 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:37.335 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:37.336 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:37.336 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:37.337 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:37.338 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:37.339 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:37.340 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:38.256 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:38.256 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:38.256 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:38.257 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:38.257 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:38.257 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:38.258 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:38.258 +00:00 [DBG] Start discovery request
2019-12-03 20:51:38.270 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:38.271 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:38.271 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:38.271 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:38.272 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:38.273 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:38.273 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:38.273 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:38.437 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:38.437 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:38.437 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:38.438 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:38.439 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:38.439 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:38.440 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:38.440 +00:00 [DBG] Start discovery request
2019-12-03 20:51:38.457 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:38.457 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:38.458 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:38.458 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:38.459 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:38.460 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:38.460 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:38.461 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:39.840 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:39.840 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:39.840 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:39.841 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:39.841 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:39.842 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:39.842 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:39.842 +00:00 [DBG] Start discovery request
2019-12-03 20:51:39.857 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:39.857 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:39.858 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:39.858 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:39.859 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:39.860 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:39.860 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:39.860 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:41.686 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:41.687 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:41.688 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:41.688 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:41.688 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:41.688 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:41.689 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:41.689 +00:00 [DBG] Start discovery request
2019-12-03 20:51:41.702 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:41.703 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:41.703 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:41.703 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:41.704 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:41.705 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:41.705 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:41.705 +00:00 [DBG] Start key discovery request
2019-12-03 20:51:41.957 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:41.957 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:51:41.957 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:41.958 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:41.958 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:51:41.959 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:51:41.959 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:51:41.959 +00:00 [DBG] Start discovery request
2019-12-03 20:51:41.971 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:51:41.971 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:51:41.972 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:51:41.972 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:51:41.973 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:51:41.974 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:51:41.974 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:51:41.975 +00:00 [DBG] Start key discovery request
2019-12-03 20:57:47.459 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:57:47.459 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:57:47.460 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:57:47.460 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:57:47.460 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:57:47.460 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:57:47.460 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:57:47.460 +00:00 [DBG] Start discovery request
2019-12-03 20:57:47.644 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:57:47.648 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:57:47.648 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:57:47.648 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:57:47.649 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:57:47.649 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:57:47.649 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:57:47.649 +00:00 [DBG] Start key discovery request
2019-12-03 20:57:47.787 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 20:57:47.825 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 20:57:47.827 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 20:57:47.827 +00:00 [DBG] Start authorize request
2019-12-03 20:57:47.855 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:57:47.855 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 20:57:47.855 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 20:57:47.856 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 20:57:47.856 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"mPkTSbNgUuMybC_rMXzYp166IUBAv6LXu6d8hfLBereND","UiLocales":null,"Nonce":"mPkTSbNgUuMybC_rMXzYp166IUBAv6LXu6d8hfLBereND","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f0f3bc50237161a2ed344da3b92da0b7","Raw":{"response_type":"id_token token","client_id":"angular","state":"mPkTSbNgUuMybC_rMXzYp166IUBAv6LXu6d8hfLBereND","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"mPkTSbNgUuMybC_rMXzYp166IUBAv6LXu6d8hfLBereND"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 20:57:47.967 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 20:57:47.967 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 20:57:47.967 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 20:57:47.967 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 20:57:47.967 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:57:48.022 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 20:57:48.022 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 20:57:48.026 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DFzw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qzXA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO69R86G54:00000001","TimeStamp":"2019-12-03T20:57:48.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 20:57:48.027 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/","State":"mPkTSbNgUuMybC_rMXzYp166IUBAv6LXu6d8hfLBereND","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 20:58:13.703 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:58:13.704 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:58:13.704 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:58:13.704 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:58:13.704 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:58:13.709 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:58:13.709 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:58:13.709 +00:00 [DBG] Start discovery request
2019-12-03 20:58:13.723 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:58:13.723 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:58:13.724 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:58:13.724 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:58:13.724 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:58:13.724 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:58:13.724 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:58:13.724 +00:00 [DBG] Start key discovery request
2019-12-03 20:58:14.230 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:58:14.230 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:58:14.230 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:58:14.230 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:58:14.231 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:58:14.232 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:58:14.233 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:58:14.233 +00:00 [DBG] Start discovery request
2019-12-03 20:58:14.248 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:58:14.248 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:58:14.248 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:58:14.249 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:58:14.249 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:58:14.249 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:58:14.250 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:58:14.250 +00:00 [DBG] Start key discovery request
2019-12-03 20:58:14.431 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:58:14.432 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 20:58:14.432 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:58:14.433 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:58:14.434 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 20:58:14.435 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 20:58:14.436 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 20:58:14.436 +00:00 [DBG] Start discovery request
2019-12-03 20:58:14.451 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 20:58:14.452 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 20:58:14.452 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 20:58:14.452 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 20:58:14.453 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 20:58:14.454 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 20:58:14.454 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 20:58:14.454 +00:00 [DBG] Start key discovery request
2019-12-03 21:02:46.980 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:02:46.980 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:02:46.986 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:02:46.989 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:02:46.992 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:02:46.993 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:02:46.993 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:02:46.994 +00:00 [DBG] Start discovery request
2019-12-03 21:02:47.011 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:02:47.017 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:02:47.017 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:02:47.018 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:02:47.018 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:02:47.019 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:02:47.020 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:02:47.020 +00:00 [DBG] Start key discovery request
2019-12-03 21:02:47.075 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:02:47.096 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:02:47.097 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:02:47.097 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:02:47.098 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:02:47.098 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:02:47.098 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:02:47.099 +00:00 [DBG] Start discovery request
2019-12-03 21:02:47.117 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:02:47.118 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:02:47.118 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:02:47.118 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:02:47.119 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:02:47.121 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:02:47.121 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:02:47.121 +00:00 [DBG] Start key discovery request
2019-12-03 21:02:47.260 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:02:47.266 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:02:47.266 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:02:47.266 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:02:47.267 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:02:47.268 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:02:47.268 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:02:47.268 +00:00 [DBG] Start discovery request
2019-12-03 21:02:47.306 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:02:47.306 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:02:47.307 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:02:47.307 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:02:47.308 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:02:47.308 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:02:47.308 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:02:47.309 +00:00 [DBG] Start key discovery request
2019-12-03 21:03:56.283 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:03:56.284 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:03:56.284 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:03:56.285 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:03:56.285 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:03:56.286 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:03:56.287 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:03:56.287 +00:00 [DBG] Start discovery request
2019-12-03 21:03:56.299 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:03:56.299 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:03:56.300 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:03:56.300 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:03:56.301 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:03:56.302 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:03:56.302 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:03:56.302 +00:00 [DBG] Start key discovery request
2019-12-03 21:03:58.761 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:03:58.761 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:03:58.761 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:03:58.761 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:03:58.763 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:03:58.764 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:03:58.764 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:03:58.764 +00:00 [DBG] Start discovery request
2019-12-03 21:03:58.794 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:03:58.794 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:03:58.794 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:03:58.794 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:03:58.794 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:03:58.795 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:03:58.795 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:03:58.795 +00:00 [DBG] Start key discovery request
2019-12-03 21:03:59.040 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:03:59.041 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:03:59.041 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:03:59.042 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:03:59.043 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:03:59.044 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:03:59.044 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:03:59.044 +00:00 [DBG] Start discovery request
2019-12-03 21:03:59.061 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:03:59.061 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:03:59.061 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:03:59.061 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:03:59.062 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:03:59.064 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:03:59.064 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:03:59.064 +00:00 [DBG] Start key discovery request
2019-12-03 21:04:22.417 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:04:22.417 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:04:22.417 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:04:22.418 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:04:22.418 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:04:22.419 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:04:22.419 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:04:22.420 +00:00 [DBG] Start discovery request
2019-12-03 21:04:22.436 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:04:22.437 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:04:22.437 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:04:22.437 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:04:22.438 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:04:22.439 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:04:22.439 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:04:22.439 +00:00 [DBG] Start key discovery request
2019-12-03 21:04:41.051 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:04:41.052 +00:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:04:41.168 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-03 21:04:41.170 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-03 21:04:41.173 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-03 21:04:41.174 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRO69R86G57:00000007","TimeStamp":"2019-12-03T21:04:41.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-03 21:04:41.284 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-03 21:04:41.289 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-03 21:04:41.289 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-03 21:04:41.319 +00:00 [DBG] Processing signout callback request
2019-12-03 21:04:41.348 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:04:41.349 +00:00 [DBG] No client front-channel logout URLs
2019-12-03 21:04:41.349 +00:00 [DBG] No client back-channel logout URLs
2019-12-03 21:04:41.349 +00:00 [INF] Successful signout callback.
2019-12-03 21:04:41.349 +00:00 [DBG] No client front-channel iframe urls
2019-12-03 21:04:41.349 +00:00 [DBG] No client back-channel iframe urls
2019-12-03 21:04:53.935 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:04:53.935 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:04:53.935 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:04:53.935 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:04:53.936 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:04:53.936 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:04:53.936 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:04:53.936 +00:00 [DBG] Start discovery request
2019-12-03 21:04:53.954 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:04:53.955 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:04:53.955 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:04:53.955 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:04:53.956 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:04:53.956 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:04:53.956 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:04:53.956 +00:00 [DBG] Start key discovery request
2019-12-03 21:04:53.993 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:04:54.019 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:04:54.019 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:04:54.019 +00:00 [DBG] Start authorize request
2019-12-03 21:04:54.020 +00:00 [DBG] No user present in authorize request
2019-12-03 21:04:54.020 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:04:54.021 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:04:54.022 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"XL9eTRDp9fg7AyGrwVE-6LZ5O9ubXm7h1dYaJg2RwZgWo","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"XL9eTRDp9fg7AyGrwVE-6LZ5O9ubXm7h1dYaJg2RwZgWo"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:04:54.028 +00:00 [ERR] Request validation failed
2019-12-03 21:04:54.030 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"XL9eTRDp9fg7AyGrwVE-6LZ5O9ubXm7h1dYaJg2RwZgWo","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"XL9eTRDp9fg7AyGrwVE-6LZ5O9ubXm7h1dYaJg2RwZgWo"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:04:54.037 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRO69R86G57:0000000D","TimeStamp":"2019-12-03T21:04:54.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-03 21:05:18.921 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:05:18.922 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:05:18.922 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:05:18.922 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:05:18.922 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:05:18.922 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:05:18.923 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:05:18.923 +00:00 [DBG] Start discovery request
2019-12-03 21:05:18.938 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:05:18.938 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:05:18.939 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:05:18.939 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:05:18.939 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:05:18.940 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:05:18.941 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:05:18.942 +00:00 [DBG] Start key discovery request
2019-12-03 21:05:18.976 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:05:18.977 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:05:18.978 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:05:18.978 +00:00 [DBG] Start authorize request
2019-12-03 21:05:18.980 +00:00 [DBG] No user present in authorize request
2019-12-03 21:05:18.981 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:05:18.981 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:05:18.981 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"LqBwOMhsb53LXE5m87Hf9ZANGYabOfiPRcXio8PN0tKmG","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"LqBwOMhsb53LXE5m87Hf9ZANGYabOfiPRcXio8PN0tKmG"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:05:18.982 +00:00 [ERR] Request validation failed
2019-12-03 21:05:18.982 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"LqBwOMhsb53LXE5m87Hf9ZANGYabOfiPRcXio8PN0tKmG","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"LqBwOMhsb53LXE5m87Hf9ZANGYabOfiPRcXio8PN0tKmG"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:05:18.982 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRO69R86G57:00000010","TimeStamp":"2019-12-03T21:05:18.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-03 21:07:58.589 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:07:58.595 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:07:58.598 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:07:58.599 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:07:58.611 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:07:58.612 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:07:58.614 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:07:58.616 +00:00 [DBG] Start discovery request
2019-12-03 21:07:58.630 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:07:58.631 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:07:58.632 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:07:58.633 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:07:58.635 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:07:58.637 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:07:58.643 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:07:58.644 +00:00 [DBG] Start key discovery request
2019-12-03 21:07:58.740 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:07:58.743 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:07:58.744 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:07:58.744 +00:00 [DBG] Start authorize request
2019-12-03 21:07:58.746 +00:00 [DBG] No user present in authorize request
2019-12-03 21:07:58.747 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:07:58.749 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:07:58.750 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"0PHWG8hGuZvzGTuXzhUkRvB0cPbZ5uZD8nDq00R3wu7KB","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"0PHWG8hGuZvzGTuXzhUkRvB0cPbZ5uZD8nDq00R3wu7KB"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:07:58.751 +00:00 [ERR] Request validation failed
2019-12-03 21:07:58.752 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"0PHWG8hGuZvzGTuXzhUkRvB0cPbZ5uZD8nDq00R3wu7KB","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"0PHWG8hGuZvzGTuXzhUkRvB0cPbZ5uZD8nDq00R3wu7KB"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:07:58.753 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRO69R86G5B:00000001","TimeStamp":"2019-12-03T21:07:58.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-03 21:08:32.462 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:08:32.463 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:09:16.749 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:09:16.750 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:09:16.751 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:09:16.763 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:09:16.765 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:09:16.768 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:09:16.769 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:09:16.771 +00:00 [DBG] Start discovery request
2019-12-03 21:09:16.781 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:09:16.783 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:09:16.785 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:09:16.786 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:09:16.788 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:09:16.789 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:09:16.791 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:09:16.793 +00:00 [DBG] Start key discovery request
2019-12-03 21:09:16.808 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:09:16.816 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:09:16.818 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:09:16.820 +00:00 [DBG] Start authorize request
2019-12-03 21:09:16.821 +00:00 [DBG] No user present in authorize request
2019-12-03 21:09:16.823 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:09:16.830 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:09:16.833 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"2G5jXDwprHidhfFBZLwJ_cTSuw_aOQsu4HiL4OpbnZbs9","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"2G5jXDwprHidhfFBZLwJ_cTSuw_aOQsu4HiL4OpbnZbs9"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:09:16.836 +00:00 [ERR] Request validation failed
2019-12-03 21:09:16.838 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200/","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"2G5jXDwprHidhfFBZLwJ_cTSuw_aOQsu4HiL4OpbnZbs9","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"2G5jXDwprHidhfFBZLwJ_cTSuw_aOQsu4HiL4OpbnZbs9"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:09:16.841 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRO69R86G5F:00000003","TimeStamp":"2019-12-03T21:09:16.0000000Z","ProcessId":266,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-03 21:10:04.937 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:10:05.011 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:10:05.036 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:10:05.039 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:10:05.039 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:10:05.041 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:10:05.044 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:10:05.045 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:11:27.033 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:27.079 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:11:27.086 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:27.086 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:27.180 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 21:11:27.181 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:11:27.182 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 21:11:27.184 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 21:11:27.185 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:11:27.186 +00:00 [DBG] Error Url: /home/error
2019-12-03 21:11:27.187 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 21:11:27.237 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:11:27.501 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:11:27.502 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:11:27.510 +00:00 [DBG] Start discovery request
2019-12-03 21:11:27.637 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:27.639 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:11:27.639 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:27.639 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:27.640 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:11:27.668 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:11:27.669 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:11:27.735 +00:00 [DBG] Start key discovery request
2019-12-03 21:11:27.811 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:11:27.828 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:11:27.828 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:11:27.836 +00:00 [DBG] Start authorize request
2019-12-03 21:11:27.861 +00:00 [DBG] No user present in authorize request
2019-12-03 21:11:27.872 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:11:27.905 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:11:27.993 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:11:28.013 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-","UiLocales":null,"Nonce":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:11:28.060 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 21:11:28.355 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:28.355 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:11:28.356 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:11:28.358 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:11:28.358 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:28.360 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:28.361 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:11:28.364 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:11:28.367 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:11:28.377 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:11:28.377 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:11:28.378 +00:00 [DBG] Start discovery request
2019-12-03 21:11:28.388 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:28.390 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:11:28.396 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:28.397 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:28.402 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:11:28.409 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:11:28.409 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:11:28.410 +00:00 [DBG] Start key discovery request
2019-12-03 21:11:37.114 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:37.115 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:11:37.251 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:11:37.251 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:11:37.252 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:11:38.684 +00:00 [DBG] Augmenting SignInContext
2019-12-03 21:11:38.688 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 21:11:38.689 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 21:11:38.689 +00:00 [DBG] Adding auth_time claim with value: 1575407498
2019-12-03 21:11:38.710 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 21:11:38.775 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRO6LDVV3DP:00000003","TimeStamp":"2019-12-03T21:11:38.0000000Z","ProcessId":834,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 21:11:38.779 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:11:38.814 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 21:11:38.819 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 21:11:38.819 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 21:11:38.831 +00:00 [DBG] Start authorize callback request
2019-12-03 21:11:38.836 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:11:38.837 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:11:38.837 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:11:38.838 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:11:38.840 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-","UiLocales":null,"Nonce":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:11:38.938 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:11:38.951 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:11:38.969 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:11:38.975 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:11:38.991 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:11:39.098 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:11:39.100 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:11:39.112 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AebA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ctyA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6LDVV3DP:00000004","TimeStamp":"2019-12-03T21:11:39.0000000Z","ProcessId":834,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:11:39.117 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"LD28Q9iAKBGSSpMHzFh5e0IjCdPoY5qAkaqWEwC8uWMg-","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:11:39.145 +00:00 [DBG] Augmenting SignInContext
2019-12-03 21:11:39.147 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 21:11:53.413 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:53.413 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:11:53.413 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:53.413 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:53.413 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:11:53.414 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:11:53.414 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:11:53.414 +00:00 [DBG] Start discovery request
2019-12-03 21:11:53.436 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:53.436 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:11:53.436 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:53.436 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:53.437 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:11:53.438 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:11:53.438 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:11:53.438 +00:00 [DBG] Start key discovery request
2019-12-03 21:11:53.463 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:11:53.464 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:11:53.465 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:11:53.465 +00:00 [DBG] Start authorize request
2019-12-03 21:11:53.466 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:11:53.466 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:11:53.467 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:11:53.475 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:11:53.476 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"FCYKGlM8pnqKV1udVWWmq98xmH3BxQC6tr6-GMv_64uY7","UiLocales":null,"Nonce":"FCYKGlM8pnqKV1udVWWmq98xmH3BxQC6tr6-GMv_64uY7","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"FCYKGlM8pnqKV1udVWWmq98xmH3BxQC6tr6-GMv_64uY7","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"FCYKGlM8pnqKV1udVWWmq98xmH3BxQC6tr6-GMv_64uY7"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:11:53.516 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:11:53.516 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:11:53.516 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:11:53.516 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:11:53.517 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:11:53.525 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:11:53.525 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:11:53.535 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****kmOg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****eJMQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6LDVV3DP:00000005","TimeStamp":"2019-12-03T21:11:53.0000000Z","ProcessId":834,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:11:53.535 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"FCYKGlM8pnqKV1udVWWmq98xmH3BxQC6tr6-GMv_64uY7","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:11:55.635 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:55.636 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:11:55.636 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:55.636 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:55.637 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:11:55.637 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:11:55.638 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:11:55.638 +00:00 [DBG] Start discovery request
2019-12-03 21:11:55.670 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:11:55.671 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:11:55.671 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:11:55.671 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:11:55.671 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:11:55.672 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:11:55.672 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:11:55.673 +00:00 [DBG] Start key discovery request
2019-12-03 21:15:57.081 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:15:57.083 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:15:57.085 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:15:57.086 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:15:57.087 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:15:57.089 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:15:57.090 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:15:57.091 +00:00 [DBG] Start discovery request
2019-12-03 21:15:57.183 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:15:57.183 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:15:57.184 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:15:57.184 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:15:57.185 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:15:57.185 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:15:57.185 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:15:57.185 +00:00 [DBG] Start key discovery request
2019-12-03 21:15:57.315 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:15:57.317 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:15:57.317 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:15:57.317 +00:00 [DBG] Start authorize request
2019-12-03 21:15:57.318 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:15:57.318 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:15:57.318 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:15:57.321 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"-yjxyog5SoGUjhDw-FIjgCOMi_e4NQUWj4nbP3bysiPQd","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"-yjxyog5SoGUjhDw-FIjgCOMi_e4NQUWj4nbP3bysiPQd"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:15:57.326 +00:00 [ERR] Request validation failed
2019-12-03 21:15:57.327 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"-yjxyog5SoGUjhDw-FIjgCOMi_e4NQUWj4nbP3bysiPQd","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"-yjxyog5SoGUjhDw-FIjgCOMi_e4NQUWj4nbP3bysiPQd"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:15:57.349 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRO6LDVV3DP:00000006","TimeStamp":"2019-12-03T21:15:57.0000000Z","ProcessId":834,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-03 21:17:09.600 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:17:09.674 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:17:09.707 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:17:09.707 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:17:09.708 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:17:09.716 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:17:09.720 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:17:09.726 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:17:42.155 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 21:17:42.207 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:17:42.211 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 21:17:42.215 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 21:17:42.226 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:17:42.231 +00:00 [DBG] Error Url: /home/error
2019-12-03 21:17:42.236 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 21:17:57.429 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:17:57.485 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:17:57.496 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:17:57.498 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:17:57.513 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:17:57.521 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:17:57.524 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:17:57.553 +00:00 [DBG] Start discovery request
2019-12-03 21:17:57.691 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:17:57.692 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:17:57.694 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:17:57.697 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:17:57.699 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:17:57.705 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:17:57.706 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:17:57.714 +00:00 [DBG] Start key discovery request
2019-12-03 21:17:57.756 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:17:57.764 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:17:57.765 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:17:57.775 +00:00 [DBG] Start authorize request
2019-12-03 21:17:57.794 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:17:57.804 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:17:57.829 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:17:57.893 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:17:57.919 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"uFM_AbdanClzwlf-lD7UGIWt4YWvtY0AgihEQdDpJd64m","UiLocales":null,"Nonce":"uFM_AbdanClzwlf-lD7UGIWt4YWvtY0AgihEQdDpJd64m","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"uFM_AbdanClzwlf-lD7UGIWt4YWvtY0AgihEQdDpJd64m","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"uFM_AbdanClzwlf-lD7UGIWt4YWvtY0AgihEQdDpJd64m"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:17:59.003 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:17:59.020 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:17:59.043 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:17:59.045 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:17:59.059 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:17:59.197 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:17:59.200 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:17:59.244 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3bjA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Hdow","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6OTMR5Q1:00000003","TimeStamp":"2019-12-03T21:17:59.0000000Z","ProcessId":1049,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:17:59.248 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"uFM_AbdanClzwlf-lD7UGIWt4YWvtY0AgihEQdDpJd64m","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:18:11.333 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:18:11.334 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:18:11.334 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:18:11.334 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:18:11.335 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:18:11.335 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:18:11.335 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:18:11.336 +00:00 [DBG] Start discovery request
2019-12-03 21:18:11.350 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:18:11.350 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:18:11.350 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:18:11.350 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:18:11.351 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:18:11.351 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:18:11.352 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:18:11.352 +00:00 [DBG] Start key discovery request
2019-12-03 21:18:12.446 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:18:12.446 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:18:12.447 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:18:12.447 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:18:12.448 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:18:12.448 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:18:12.449 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:18:12.449 +00:00 [DBG] Start discovery request
2019-12-03 21:18:12.470 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:18:12.470 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:18:12.471 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:18:12.471 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:18:12.472 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:18:12.473 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:18:12.473 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:18:12.473 +00:00 [DBG] Start key discovery request
2019-12-03 21:18:14.916 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-03 21:18:14.919 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-03 21:18:14.919 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-03 21:18:14.932 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:18:14.943 +00:00 [DBG] Start end session request validation
2019-12-03 21:18:14.954 +00:00 [DBG] Start identity token validation
2019-12-03 21:18:14.963 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:18:14.963 +00:00 [DBG] Client found: angular / SPA Client
2019-12-03 21:18:15.066 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-03 21:18:15.070 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1575407879,"exp":1575408179,"iss":"http://localhost:5000","aud":"angular","nonce":"uFM_AbdanClzwlf-lD7UGIWt4YWvtY0AgihEQdDpJd64m","iat":1575407879,"at_hash":"gIJ9ZeyCW0ud9Am2KwD64w","sid":"b8a48101c814fc456aeb87c44ebfd8fa","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1575407498,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-03 21:18:15.083 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-03 21:18:15.087 +00:00 [ERR] Error processing end session request Invalid request
2019-12-03 21:19:01.027 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:19:01.027 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:19:01.027 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:19:01.027 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:19:01.027 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:19:01.027 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:19:01.028 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:19:01.028 +00:00 [DBG] Start discovery request
2019-12-03 21:19:01.045 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:19:01.046 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:19:01.046 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:19:01.047 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:19:01.049 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:19:01.049 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:19:01.050 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:19:01.050 +00:00 [DBG] Start key discovery request
2019-12-03 21:19:01.068 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:19:01.069 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:19:01.070 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:19:01.070 +00:00 [DBG] Start authorize request
2019-12-03 21:19:01.071 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:19:01.071 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:19:01.071 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:19:01.072 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:19:01.072 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"crsRLT_XqOe8vgxLPVNdIwjgDas5VqoNzMtXMxEg2D6Wb","UiLocales":null,"Nonce":"crsRLT_XqOe8vgxLPVNdIwjgDas5VqoNzMtXMxEg2D6Wb","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"crsRLT_XqOe8vgxLPVNdIwjgDas5VqoNzMtXMxEg2D6Wb","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"crsRLT_XqOe8vgxLPVNdIwjgDas5VqoNzMtXMxEg2D6Wb"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:19:01.208 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:19:01.209 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:19:01.209 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:19:01.209 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:19:01.209 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:19:01.220 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:19:01.227 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:19:01.232 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****cVRA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vkzg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6OTMR5Q1:00000007","TimeStamp":"2019-12-03T21:19:01.0000000Z","ProcessId":1049,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:19:01.234 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"crsRLT_XqOe8vgxLPVNdIwjgDas5VqoNzMtXMxEg2D6Wb","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:19:31.299 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:19:31.299 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:19:31.299 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:19:31.299 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:19:31.300 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:19:31.300 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:19:31.300 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:19:31.300 +00:00 [DBG] Start discovery request
2019-12-03 21:19:31.312 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:19:31.312 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:19:31.313 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:19:31.313 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:19:31.314 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:19:31.314 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:19:31.315 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:19:31.315 +00:00 [DBG] Start key discovery request
2019-12-03 21:19:32.261 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:19:32.262 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:19:32.262 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:19:32.262 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:19:32.263 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:19:32.264 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:19:32.264 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:19:32.264 +00:00 [DBG] Start discovery request
2019-12-03 21:19:32.288 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:19:32.288 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:19:32.288 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:19:32.288 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:19:32.289 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:19:32.290 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:19:32.290 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:19:32.290 +00:00 [DBG] Start key discovery request
2019-12-03 21:20:59.007 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:20:59.007 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:20:59.007 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:20:59.008 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:20:59.008 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:20:59.008 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:20:59.008 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:20:59.008 +00:00 [DBG] Start discovery request
2019-12-03 21:20:59.021 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:20:59.022 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:20:59.023 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:20:59.023 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:20:59.024 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:20:59.025 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:20:59.028 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:20:59.034 +00:00 [DBG] Start key discovery request
2019-12-03 21:20:59.888 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:20:59.888 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:20:59.888 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:20:59.888 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:20:59.888 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:20:59.889 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:20:59.889 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:20:59.889 +00:00 [DBG] Start discovery request
2019-12-03 21:20:59.896 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:20:59.897 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:20:59.897 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:20:59.897 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:20:59.898 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:20:59.898 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:20:59.899 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:20:59.899 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:02.518 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:02.519 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:02.519 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:02.519 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:02.520 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:02.520 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:02.521 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:02.521 +00:00 [DBG] Start discovery request
2019-12-03 21:21:02.529 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:02.530 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:02.530 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:02.530 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:02.531 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:02.531 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:02.531 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:02.532 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:02.708 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:02.708 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:02.709 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:02.709 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:02.709 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:02.709 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:02.709 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:02.710 +00:00 [DBG] Start discovery request
2019-12-03 21:21:02.718 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:02.718 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:02.718 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:02.718 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:02.719 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:02.719 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:02.719 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:02.719 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:02.876 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:02.876 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:02.876 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:02.877 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:02.877 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:02.878 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:02.878 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:02.878 +00:00 [DBG] Start discovery request
2019-12-03 21:21:02.887 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:02.888 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:02.888 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:02.888 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:02.888 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:02.889 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:02.890 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:02.890 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:07.359 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:07.359 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:07.359 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:07.359 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:07.359 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:07.359 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:07.360 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:07.360 +00:00 [DBG] Start discovery request
2019-12-03 21:21:07.368 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:07.368 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:07.369 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:07.369 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:07.370 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:07.370 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:07.370 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:07.371 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:07.788 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:07.788 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:07.788 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:07.788 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:07.789 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:07.789 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:07.789 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:07.789 +00:00 [DBG] Start discovery request
2019-12-03 21:21:07.801 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:07.801 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:07.802 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:07.802 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:07.803 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:07.804 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:07.805 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:07.805 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:08.036 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:08.036 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:08.036 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:08.037 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:08.037 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:08.037 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:08.037 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:08.037 +00:00 [DBG] Start discovery request
2019-12-03 21:21:08.044 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:08.045 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:08.045 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:08.045 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:08.045 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:08.046 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:08.046 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:08.046 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:09.325 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:09.326 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:09.326 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:09.327 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:09.327 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:09.328 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:09.328 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:09.329 +00:00 [DBG] Start discovery request
2019-12-03 21:21:09.341 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:09.341 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:09.341 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:09.342 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:09.342 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:09.343 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:09.343 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:09.343 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:27.416 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:27.416 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:27.416 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:27.417 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:27.417 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:27.418 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:27.418 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:27.419 +00:00 [DBG] Start discovery request
2019-12-03 21:21:27.443 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:27.443 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:27.444 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:27.444 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:27.445 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:27.446 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:27.446 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:27.446 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:27.470 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:21:27.472 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:21:27.472 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:21:27.472 +00:00 [DBG] Start authorize request
2019-12-03 21:21:27.473 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:21:27.473 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:21:27.474 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:21:27.476 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:21:27.476 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"9o0VagPfMXau0l2EqHZ1UfmMjUAUNIqeyrhEvJoWNOFPF","UiLocales":null,"Nonce":"9o0VagPfMXau0l2EqHZ1UfmMjUAUNIqeyrhEvJoWNOFPF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"9o0VagPfMXau0l2EqHZ1UfmMjUAUNIqeyrhEvJoWNOFPF","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"9o0VagPfMXau0l2EqHZ1UfmMjUAUNIqeyrhEvJoWNOFPF"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:21:27.559 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:21:27.582 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:21:27.589 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:21:27.589 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:21:27.590 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:21:27.594 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:21:27.595 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:21:27.600 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****qQ7g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AnxA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6OTMR5Q1:00000008","TimeStamp":"2019-12-03T21:21:27.0000000Z","ProcessId":1049,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:21:27.601 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"9o0VagPfMXau0l2EqHZ1UfmMjUAUNIqeyrhEvJoWNOFPF","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:21:31.657 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:31.657 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:31.658 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:31.658 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:31.658 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:31.658 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:31.658 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:31.658 +00:00 [DBG] Start discovery request
2019-12-03 21:21:31.691 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:31.691 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:31.692 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:31.692 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:31.692 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:31.693 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:31.693 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:31.693 +00:00 [DBG] Start key discovery request
2019-12-03 21:21:42.569 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:42.569 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:21:42.569 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:42.570 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:42.570 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:21:42.570 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:21:42.570 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:21:42.570 +00:00 [DBG] Start discovery request
2019-12-03 21:21:42.592 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:21:42.594 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:21:42.594 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:21:42.594 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:21:42.594 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:21:42.595 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:21:42.595 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:21:42.595 +00:00 [DBG] Start key discovery request
2019-12-03 21:22:18.125 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:22:18.206 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:22:18.246 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:22:18.247 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:22:18.251 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:22:18.253 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:22:18.256 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:22:18.257 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:29:45.617 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:29:45.767 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:29:45.783 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:29:45.785 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:29:45.933 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 21:29:45.935 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:29:45.936 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 21:29:45.937 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 21:29:45.938 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:29:45.940 +00:00 [DBG] Error Url: /home/error
2019-12-03 21:29:45.941 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 21:29:45.998 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:29:46.389 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:29:46.390 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:29:46.398 +00:00 [DBG] Start discovery request
2019-12-03 21:29:46.523 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:29:46.526 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:29:46.531 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:29:46.534 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:29:46.541 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:29:46.550 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:29:46.558 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:29:46.596 +00:00 [DBG] Start key discovery request
2019-12-03 21:29:46.761 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:29:46.811 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:29:46.815 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:29:46.834 +00:00 [DBG] Start authorize request
2019-12-03 21:29:46.879 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:29:46.900 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:29:46.977 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:29:47.017 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Tl9lvhzm06tBm31gnAc46b6-geV1qSZQHV3boxrVa1Oct","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"Tl9lvhzm06tBm31gnAc46b6-geV1qSZQHV3boxrVa1Oct"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:29:47.085 +00:00 [ERR] Request validation failed
2019-12-03 21:29:47.085 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Tl9lvhzm06tBm31gnAc46b6-geV1qSZQHV3boxrVa1Oct","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"Tl9lvhzm06tBm31gnAc46b6-geV1qSZQHV3boxrVa1Oct"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:29:47.154 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLRO6VLB4SL2:00000001","TimeStamp":"2019-12-03T21:29:47.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-03 21:41:59.473 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:41:59.473 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:41:59.474 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:41:59.474 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:41:59.474 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:41:59.497 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:41:59.497 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:41:59.497 +00:00 [DBG] Start discovery request
2019-12-03 21:41:59.523 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:41:59.523 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:41:59.523 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:41:59.523 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:41:59.523 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:41:59.524 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:41:59.524 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:41:59.525 +00:00 [DBG] Start key discovery request
2019-12-03 21:41:59.552 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:41:59.563 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:41:59.563 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:41:59.564 +00:00 [DBG] Start authorize request
2019-12-03 21:41:59.564 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:41:59.565 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:41:59.566 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:41:59.694 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:41:59.695 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"dPs4gp9UYvfjdoPR5dOnEvWHvGIsh59iofrX6tPnb4EJL","UiLocales":null,"Nonce":"dPs4gp9UYvfjdoPR5dOnEvWHvGIsh59iofrX6tPnb4EJL","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"dPs4gp9UYvfjdoPR5dOnEvWHvGIsh59iofrX6tPnb4EJL","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"dPs4gp9UYvfjdoPR5dOnEvWHvGIsh59iofrX6tPnb4EJL"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:41:59.751 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:41:59.780 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:41:59.822 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:41:59.824 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:41:59.843 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:41:59.962 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:41:59.963 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:41:59.974 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****z4ag","$type":"Token"},{"TokenType":"access_token","TokenValue":"****mGMQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000002","TimeStamp":"2019-12-03T21:41:59.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:41:59.981 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"dPs4gp9UYvfjdoPR5dOnEvWHvGIsh59iofrX6tPnb4EJL","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:43:32.667 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:43:32.667 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:43:32.667 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:43:32.668 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:43:32.669 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:43:32.670 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:43:32.671 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:43:32.671 +00:00 [DBG] Start discovery request
2019-12-03 21:43:32.689 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:43:32.690 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:43:32.690 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:43:32.690 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:43:32.690 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:43:32.691 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:43:32.691 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:43:32.691 +00:00 [DBG] Start key discovery request
2019-12-03 21:43:32.726 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:43:32.728 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:43:32.728 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:43:32.728 +00:00 [DBG] Start authorize request
2019-12-03 21:43:32.729 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:43:32.729 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:43:32.729 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:43:32.730 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:43:32.730 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"S08EPdtH5OfERtH6tVmRM6O9v1SZARAjD8msVgjfkgmik","UiLocales":null,"Nonce":"S08EPdtH5OfERtH6tVmRM6O9v1SZARAjD8msVgjfkgmik","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"S08EPdtH5OfERtH6tVmRM6O9v1SZARAjD8msVgjfkgmik","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"S08EPdtH5OfERtH6tVmRM6O9v1SZARAjD8msVgjfkgmik"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:43:32.792 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:43:32.798 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:43:32.799 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:43:32.800 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:43:32.800 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:43:32.807 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:43:32.808 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:43:32.813 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vKUA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IoaA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000003","TimeStamp":"2019-12-03T21:43:32.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:43:32.814 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"S08EPdtH5OfERtH6tVmRM6O9v1SZARAjD8msVgjfkgmik","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:44:47.488 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:44:47.489 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:44:47.489 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:44:47.489 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:44:47.491 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:44:47.492 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:44:47.493 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:44:47.493 +00:00 [DBG] Start discovery request
2019-12-03 21:44:47.513 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:44:47.513 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:44:47.514 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:44:47.514 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:44:47.516 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:44:47.517 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:44:47.517 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:44:47.517 +00:00 [DBG] Start key discovery request
2019-12-03 21:44:47.547 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:44:47.549 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:44:47.550 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:44:47.550 +00:00 [DBG] Start authorize request
2019-12-03 21:44:47.551 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:44:47.551 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:44:47.552 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:44:47.553 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:44:47.553 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Fndxv0hM1rXeMjNDDksjdJOh-H5fHgC47ThxgMlRBSbhH","UiLocales":null,"Nonce":"Fndxv0hM1rXeMjNDDksjdJOh-H5fHgC47ThxgMlRBSbhH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"Fndxv0hM1rXeMjNDDksjdJOh-H5fHgC47ThxgMlRBSbhH","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"Fndxv0hM1rXeMjNDDksjdJOh-H5fHgC47ThxgMlRBSbhH"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:44:47.613 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:44:47.614 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:44:47.614 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:44:47.614 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:44:47.614 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:44:47.617 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:44:47.660 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:44:47.664 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****E2Cw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9-og","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000004","TimeStamp":"2019-12-03T21:44:47.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:44:47.665 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"Fndxv0hM1rXeMjNDDksjdJOh-H5fHgC47ThxgMlRBSbhH","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:44:54.195 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:44:54.195 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:44:54.195 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:44:54.195 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:44:54.195 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:44:54.196 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:44:54.196 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:44:54.196 +00:00 [DBG] Start discovery request
2019-12-03 21:44:54.217 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:44:54.217 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:44:54.217 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:44:54.217 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:44:54.218 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:44:54.218 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:44:54.218 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:44:54.218 +00:00 [DBG] Start key discovery request
2019-12-03 21:45:55.176 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:45:55.176 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:45:55.177 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:45:55.177 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:45:55.177 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:45:55.178 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:45:55.178 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:45:55.178 +00:00 [DBG] Start discovery request
2019-12-03 21:45:55.199 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:45:55.200 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:45:55.200 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:45:55.200 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:45:55.200 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:45:55.201 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:45:55.201 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:45:55.202 +00:00 [DBG] Start key discovery request
2019-12-03 21:46:50.281 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:46:50.282 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:46:50.282 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:46:50.282 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:46:50.283 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:46:50.283 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:46:50.284 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:46:50.284 +00:00 [DBG] Start discovery request
2019-12-03 21:46:50.301 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:46:50.301 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:46:50.301 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:46:50.302 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:46:50.302 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:46:50.304 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:46:50.305 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:46:50.306 +00:00 [DBG] Start key discovery request
2019-12-03 21:46:50.341 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:46:50.342 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:46:50.343 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:46:50.343 +00:00 [DBG] Start authorize request
2019-12-03 21:46:50.343 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:46:50.343 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:46:50.344 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:46:50.344 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:46:50.345 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"F09n6MWXMahE-cQ3AW9vEzBhPFgcofMK-kmTKDHhEtCap","UiLocales":null,"Nonce":"F09n6MWXMahE-cQ3AW9vEzBhPFgcofMK-kmTKDHhEtCap","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"F09n6MWXMahE-cQ3AW9vEzBhPFgcofMK-kmTKDHhEtCap","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"F09n6MWXMahE-cQ3AW9vEzBhPFgcofMK-kmTKDHhEtCap"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:46:50.373 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:46:50.374 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:46:50.374 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:46:50.374 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:46:50.374 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:46:50.377 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:46:50.377 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:46:50.379 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****2GEQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****DkrA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000005","TimeStamp":"2019-12-03T21:46:50.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:46:50.380 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"F09n6MWXMahE-cQ3AW9vEzBhPFgcofMK-kmTKDHhEtCap","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:47:01.040 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:47:01.040 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:47:01.040 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:47:01.041 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:47:01.041 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:47:01.041 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:47:01.041 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:47:01.041 +00:00 [DBG] Start discovery request
2019-12-03 21:47:01.055 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:47:01.055 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:47:01.055 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:47:01.055 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:47:01.055 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:47:01.055 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:47:01.055 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:47:01.055 +00:00 [DBG] Start key discovery request
2019-12-03 21:47:02.711 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:47:02.712 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:47:02.712 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:47:02.712 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:47:02.713 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:47:02.713 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:47:02.713 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:47:02.713 +00:00 [DBG] Start discovery request
2019-12-03 21:47:02.739 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:47:02.739 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:47:02.740 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:47:02.740 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:47:02.741 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:47:02.742 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:47:02.742 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:47:02.742 +00:00 [DBG] Start key discovery request
2019-12-03 21:47:59.640 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-03 21:47:59.645 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-03 21:47:59.645 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-03 21:47:59.663 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:47:59.680 +00:00 [DBG] Start end session request validation
2019-12-03 21:47:59.689 +00:00 [DBG] Start identity token validation
2019-12-03 21:47:59.699 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:47:59.700 +00:00 [DBG] Client found: angular / SPA Client
2019-12-03 21:47:59.764 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-03 21:47:59.766 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1575409610,"exp":1575409910,"iss":"http://localhost:5000","aud":"angular","nonce":"F09n6MWXMahE-cQ3AW9vEzBhPFgcofMK-kmTKDHhEtCap","iat":1575409610,"at_hash":"dJL6XpTbFK6iy8KPBey96A","sid":"b8a48101c814fc456aeb87c44ebfd8fa","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1575407498,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-03 21:47:59.770 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-03 21:47:59.771 +00:00 [ERR] Error processing end session request Invalid request
2019-12-03 21:49:18.586 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:18.586 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:18.587 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:18.587 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:18.588 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:18.589 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:18.594 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:18.596 +00:00 [DBG] Start discovery request
2019-12-03 21:49:18.627 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:18.627 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:18.627 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:18.627 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:18.628 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:18.628 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:18.628 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:18.628 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:18.663 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:49:18.664 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:49:18.664 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:49:18.664 +00:00 [DBG] Start authorize request
2019-12-03 21:49:18.664 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:49:18.664 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:49:18.664 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:49:18.665 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:49:18.665 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"bRcwvyr7eVvBsa5UVQRl61w1dcuTthE_SDRGsKwdFkfDv","UiLocales":null,"Nonce":"bRcwvyr7eVvBsa5UVQRl61w1dcuTthE_SDRGsKwdFkfDv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"bRcwvyr7eVvBsa5UVQRl61w1dcuTthE_SDRGsKwdFkfDv","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"bRcwvyr7eVvBsa5UVQRl61w1dcuTthE_SDRGsKwdFkfDv"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:49:18.685 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:49:18.685 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:49:18.685 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:49:18.685 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:49:18.689 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:49:18.695 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:49:18.695 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:49:18.699 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****G8og","$type":"Token"},{"TokenType":"access_token","TokenValue":"****RuIg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL5:00000003","TimeStamp":"2019-12-03T21:49:18.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:49:18.699 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"bRcwvyr7eVvBsa5UVQRl61w1dcuTthE_SDRGsKwdFkfDv","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:49:21.262 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:21.262 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:21.262 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:21.262 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:21.262 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:21.266 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:21.268 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:21.268 +00:00 [DBG] Start discovery request
2019-12-03 21:49:21.295 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:21.295 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:21.296 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:21.296 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:21.296 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:21.296 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:21.301 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:21.301 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:22.393 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:22.394 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:22.394 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:22.394 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:22.394 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:22.395 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:22.395 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:22.395 +00:00 [DBG] Start discovery request
2019-12-03 21:49:22.445 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:22.446 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:22.446 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:22.447 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:22.448 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:22.449 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:22.450 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:22.450 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:32.406 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:32.407 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:32.407 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:32.407 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:32.407 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:32.407 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:32.407 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:32.408 +00:00 [DBG] Start discovery request
2019-12-03 21:49:32.431 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:32.431 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:32.432 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:32.432 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:32.432 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:32.432 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:32.432 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:32.432 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:33.648 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:33.648 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:33.648 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:33.648 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:33.648 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:33.649 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:33.649 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:33.649 +00:00 [DBG] Start discovery request
2019-12-03 21:49:33.666 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:33.666 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:33.667 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:33.667 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:33.668 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:33.668 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:33.669 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:33.669 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:36.342 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:36.342 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:36.343 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:36.344 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:36.345 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:36.346 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:36.346 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:36.346 +00:00 [DBG] Start discovery request
2019-12-03 21:49:36.353 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:36.354 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:36.354 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:36.354 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:36.354 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:36.355 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:36.355 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:36.355 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:36.822 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:36.823 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:36.824 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:36.824 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:36.825 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:36.825 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:36.826 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:36.826 +00:00 [DBG] Start discovery request
2019-12-03 21:49:36.834 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:36.834 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:36.835 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:36.835 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:36.835 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:36.835 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:36.836 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:36.836 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:37.076 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:37.077 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:37.078 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:37.078 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:37.079 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:37.079 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:37.079 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:37.080 +00:00 [DBG] Start discovery request
2019-12-03 21:49:37.087 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:37.088 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:37.088 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:37.088 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:37.089 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:37.090 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:37.090 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:37.090 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:42.878 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:42.878 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:42.879 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:42.879 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:42.879 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:42.879 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:42.880 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:42.880 +00:00 [DBG] Start discovery request
2019-12-03 21:49:42.891 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:42.891 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:42.891 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:42.891 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:42.892 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:42.892 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:42.892 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:42.892 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:43.701 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:43.701 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:43.702 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:43.702 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:43.702 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:43.703 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:43.703 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:43.704 +00:00 [DBG] Start discovery request
2019-12-03 21:49:43.715 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:43.715 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:43.715 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:43.716 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:43.716 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:43.717 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:43.717 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:43.717 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:43.952 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:43.952 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:43.952 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:43.952 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:43.952 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:43.953 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:43.953 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:43.953 +00:00 [DBG] Start discovery request
2019-12-03 21:49:43.963 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:43.963 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:43.965 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:43.965 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:43.967 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:43.968 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:43.968 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:43.968 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:44.526 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:44.527 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:44.527 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:44.527 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:44.528 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:44.528 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:44.529 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:44.529 +00:00 [DBG] Start discovery request
2019-12-03 21:49:44.538 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:44.538 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:44.539 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:44.539 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:44.540 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:44.541 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:44.541 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:44.541 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:48.239 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:48.239 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:48.240 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:48.240 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:48.240 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:48.240 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:48.240 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:48.240 +00:00 [DBG] Start discovery request
2019-12-03 21:49:48.247 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:48.248 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:48.248 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:48.248 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:48.248 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:48.248 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:48.249 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:48.249 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:48.616 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:48.618 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:48.619 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:48.619 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:48.620 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:48.621 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:48.621 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:48.622 +00:00 [DBG] Start discovery request
2019-12-03 21:49:48.634 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:48.634 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:48.634 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:48.634 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:48.635 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:48.636 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:48.636 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:48.638 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:49.073 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:49.073 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:49.074 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:49.074 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:49.074 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:49.075 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:49.075 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:49.075 +00:00 [DBG] Start discovery request
2019-12-03 21:49:49.091 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:49.092 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:49.092 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:49.092 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:49.093 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:49.093 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:49.093 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:49.093 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:49.300 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:49.300 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:49.300 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:49.300 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:49.300 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:49.300 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:49.300 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:49.301 +00:00 [DBG] Start discovery request
2019-12-03 21:49:49.310 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:49.311 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:49.311 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:49.311 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:49.311 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:49.311 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:49.312 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:49.312 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:49.485 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:49.485 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:49.485 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:49.485 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:49.485 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:49.485 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:49.486 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:49.486 +00:00 [DBG] Start discovery request
2019-12-03 21:49:49.496 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:49.496 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:49.497 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:49.497 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:49.498 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:49.498 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:49.498 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:49.499 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:52.568 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:52.569 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:52.569 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:52.569 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:52.570 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:52.570 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:52.571 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:52.571 +00:00 [DBG] Start discovery request
2019-12-03 21:49:52.585 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:52.586 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:52.586 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:52.587 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:52.587 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:52.588 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:52.588 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:52.588 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:52.624 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:49:52.626 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:49:52.626 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:49:52.626 +00:00 [DBG] Start authorize request
2019-12-03 21:49:52.626 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:49:52.626 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:49:52.626 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:49:52.627 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:49:52.627 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"cIlSD__g0AM1blEZgYLlwkk09lsOljr8Ehh-jwMvWv9KF","UiLocales":null,"Nonce":"cIlSD__g0AM1blEZgYLlwkk09lsOljr8Ehh-jwMvWv9KF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"cIlSD__g0AM1blEZgYLlwkk09lsOljr8Ehh-jwMvWv9KF","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"cIlSD__g0AM1blEZgYLlwkk09lsOljr8Ehh-jwMvWv9KF"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:49:52.698 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:49:52.720 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:49:52.721 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:49:52.721 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:49:52.721 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:49:52.729 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:49:52.730 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:49:52.733 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****rykA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****GolQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:0000000C","TimeStamp":"2019-12-03T21:49:52.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:49:52.737 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"cIlSD__g0AM1blEZgYLlwkk09lsOljr8Ehh-jwMvWv9KF","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:49:54.416 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:54.416 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:54.438 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:54.439 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:54.439 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:54.439 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:54.439 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:54.439 +00:00 [DBG] Start discovery request
2019-12-03 21:49:54.447 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:54.448 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:54.448 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:54.448 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:54.449 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:54.450 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:54.451 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:54.451 +00:00 [DBG] Start key discovery request
2019-12-03 21:49:55.684 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:55.685 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:49:55.685 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:55.685 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:55.685 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:49:55.685 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:49:55.686 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:49:55.686 +00:00 [DBG] Start discovery request
2019-12-03 21:49:55.694 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:49:55.695 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:49:55.695 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:49:55.695 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:49:55.695 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:49:55.695 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:49:55.695 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:49:55.696 +00:00 [DBG] Start key discovery request
2019-12-03 21:50:49.446 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:49.447 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:50:49.447 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:49.447 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:49.447 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:50:49.448 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:50:49.448 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:50:49.448 +00:00 [DBG] Start discovery request
2019-12-03 21:50:49.463 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:49.464 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:50:49.464 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:49.465 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:49.465 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:50:49.466 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:50:49.466 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:50:49.466 +00:00 [DBG] Start key discovery request
2019-12-03 21:50:49.997 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:49.998 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:50:49.999 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:49.999 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:50.000 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:50:50.001 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:50:50.001 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:50:50.001 +00:00 [DBG] Start discovery request
2019-12-03 21:50:50.014 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:50.015 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:50:50.015 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:50.015 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:50.016 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:50:50.017 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:50:50.017 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:50:50.017 +00:00 [DBG] Start key discovery request
2019-12-03 21:50:50.463 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:50.464 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:50:50.464 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:50.464 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:50.464 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:50:50.464 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:50:50.464 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:50:50.465 +00:00 [DBG] Start discovery request
2019-12-03 21:50:50.479 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:50.479 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:50:50.479 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:50.479 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:50.479 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:50:50.480 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:50:50.480 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:50:50.480 +00:00 [DBG] Start key discovery request
2019-12-03 21:50:54.233 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:54.233 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:50:54.234 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:54.234 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:54.234 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:50:54.234 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:50:54.234 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:50:54.234 +00:00 [DBG] Start discovery request
2019-12-03 21:50:54.250 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:54.251 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:50:54.252 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:54.252 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:54.253 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:50:54.254 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:50:54.254 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:50:54.255 +00:00 [DBG] Start key discovery request
2019-12-03 21:50:54.275 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:50:54.277 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:50:54.278 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:50:54.278 +00:00 [DBG] Start authorize request
2019-12-03 21:50:54.279 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:50:54.279 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:50:54.280 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:50:54.280 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:50:54.281 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Rbrrp0Sz2grnd3ExLRPy2LWsYqrL5iL1tI8HHsUUxMzh0","UiLocales":null,"Nonce":"Rbrrp0Sz2grnd3ExLRPy2LWsYqrL5iL1tI8HHsUUxMzh0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b8a48101c814fc456aeb87c44ebfd8fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"Rbrrp0Sz2grnd3ExLRPy2LWsYqrL5iL1tI8HHsUUxMzh0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"Rbrrp0Sz2grnd3ExLRPy2LWsYqrL5iL1tI8HHsUUxMzh0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:50:54.349 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:50:54.349 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:50:54.349 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:50:54.350 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:50:54.350 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:50:54.379 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:50:54.379 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:50:54.382 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****XReg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****p7Ww","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:0000000D","TimeStamp":"2019-12-03T21:50:54.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:50:54.383 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"Rbrrp0Sz2grnd3ExLRPy2LWsYqrL5iL1tI8HHsUUxMzh0","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:50:56.839 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:56.839 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:50:56.840 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:56.840 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:56.840 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:50:56.840 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:50:56.840 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:50:56.840 +00:00 [DBG] Start discovery request
2019-12-03 21:50:56.850 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:56.850 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:50:56.851 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:56.851 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:56.851 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:50:56.851 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:50:56.851 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:50:56.851 +00:00 [DBG] Start key discovery request
2019-12-03 21:50:57.214 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:57.215 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:50:57.215 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:57.216 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:57.217 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:50:57.217 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:50:57.218 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:50:57.218 +00:00 [DBG] Start discovery request
2019-12-03 21:50:57.236 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:50:57.237 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:50:57.238 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:50:57.238 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:50:57.238 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:50:57.239 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:50:57.239 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:50:57.239 +00:00 [DBG] Start key discovery request
2019-12-03 21:50:58.566 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-03 21:50:58.575 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-03 21:50:58.575 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-03 21:50:58.575 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:50:58.576 +00:00 [DBG] Start end session request validation
2019-12-03 21:50:58.576 +00:00 [DBG] Start identity token validation
2019-12-03 21:50:58.577 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:50:58.577 +00:00 [DBG] Client found: angular / SPA Client
2019-12-03 21:50:58.594 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-03 21:50:58.598 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1575409854,"exp":1575410154,"iss":"http://localhost:5000","aud":"angular","nonce":"Rbrrp0Sz2grnd3ExLRPy2LWsYqrL5iL1tI8HHsUUxMzh0","iat":1575409854,"at_hash":"VwQjGpXpUH_FgODaZhf2Kw","sid":"b8a48101c814fc456aeb87c44ebfd8fa","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1575407498,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-03 21:50:58.605 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-03 21:50:58.606 +00:00 [ERR] Error processing end session request Invalid request
2019-12-03 21:51:34.303 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:51:34.305 +00:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:51:34.390 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-03 21:51:34.391 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-03 21:51:34.393 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-03 21:51:34.394 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000010","TimeStamp":"2019-12-03T21:51:34.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-03 21:51:34.453 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-03 21:51:34.457 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-03 21:51:34.457 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-03 21:51:34.474 +00:00 [DBG] Processing signout callback request
2019-12-03 21:51:34.492 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:51:34.493 +00:00 [DBG] No client front-channel logout URLs
2019-12-03 21:51:34.493 +00:00 [DBG] No client back-channel logout URLs
2019-12-03 21:51:34.493 +00:00 [INF] Successful signout callback.
2019-12-03 21:51:34.493 +00:00 [DBG] No client front-channel iframe urls
2019-12-03 21:51:34.493 +00:00 [DBG] No client back-channel iframe urls
2019-12-03 21:52:52.187 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:52:52.187 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:52:52.191 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:52:52.191 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:52:52.192 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:52:52.193 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:52:52.193 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:52:52.193 +00:00 [DBG] Start discovery request
2019-12-03 21:52:52.202 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:52:52.215 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:52:52.215 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:52:52.215 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:52:52.216 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:52:52.216 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:52:52.216 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:52:52.216 +00:00 [DBG] Start key discovery request
2019-12-03 21:52:52.240 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:52:52.242 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:52:52.242 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:52:52.242 +00:00 [DBG] Start authorize request
2019-12-03 21:52:52.243 +00:00 [DBG] No user present in authorize request
2019-12-03 21:52:52.243 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:52:52.244 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:52:52.248 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:52:52.248 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","UiLocales":null,"Nonce":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:52:52.248 +00:00 [INF] Showing login: User is not authenticated
2019-12-03 21:52:52.328 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:52:52.330 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:52:52.332 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:52:52.337 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:52:57.460 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:52:57.460 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-03 21:52:57.488 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:52:57.489 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:52:57.490 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:52:57.650 +00:00 [DBG] Augmenting SignInContext
2019-12-03 21:52:57.661 +00:00 [DBG] Adding idp claim with value: local
2019-12-03 21:52:57.662 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-03 21:52:57.663 +00:00 [DBG] Adding auth_time claim with value: 1575409977
2019-12-03 21:52:57.703 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 21:52:57.727 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000014","TimeStamp":"2019-12-03T21:52:57.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLoginSuccessEvent"}
2019-12-03 21:52:57.733 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:52:57.782 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-03 21:52:57.784 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-03 21:52:57.784 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-03 21:52:57.797 +00:00 [DBG] Start authorize callback request
2019-12-03 21:52:57.805 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:52:57.805 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:52:57.805 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:52:57.806 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:52:57.806 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","UiLocales":null,"Nonce":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"335efb4a53953ccc3aad14d474554ffd","Raw":{"response_type":"id_token token","client_id":"angular","state":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:52:57.816 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:52:57.843 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:52:57.885 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:52:57.886 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:52:57.949 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:52:57.953 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:52:57.953 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:52:57.957 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****OdDA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****gIYg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000015","TimeStamp":"2019-12-03T21:52:57.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:52:57.958 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:52:57.974 +00:00 [DBG] Augmenting SignInContext
2019-12-03 21:52:57.975 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-03 21:53:00.053 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:00.053 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:00.053 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:00.053 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:00.054 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:00.054 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:00.055 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:00.055 +00:00 [DBG] Start discovery request
2019-12-03 21:53:00.065 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:00.065 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:00.066 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:00.069 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:00.069 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:00.069 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:00.069 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:00.069 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:00.829 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:00.830 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:00.830 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:00.831 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:00.831 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:00.832 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:00.832 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:00.832 +00:00 [DBG] Start discovery request
2019-12-03 21:53:00.856 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:00.856 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:00.857 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:00.857 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:00.858 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:00.858 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:00.858 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:00.859 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:02.141 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-03 21:53:02.141 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-03 21:53:02.141 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-03 21:53:02.142 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:53:02.142 +00:00 [DBG] Start end session request validation
2019-12-03 21:53:02.143 +00:00 [DBG] Start identity token validation
2019-12-03 21:53:02.143 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:53:02.144 +00:00 [DBG] Client found: angular / SPA Client
2019-12-03 21:53:02.164 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-03 21:53:02.166 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1575409977,"exp":1575410277,"iss":"http://localhost:5000","aud":"angular","nonce":"7NClJWBMG161yrJY2CSWJbuui2bbI0_9XdaxVW0MF_tt-","iat":1575409977,"at_hash":"S2rCN3U0SugzuevL3ouaXQ","sid":"335efb4a53953ccc3aad14d474554ffd","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1575409977,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-03 21:53:02.174 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-03 21:53:02.182 +00:00 [ERR] Error processing end session request Invalid request
2019-12-03 21:53:23.128 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:23.129 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:23.129 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:23.129 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:23.129 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:23.129 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:23.129 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:23.129 +00:00 [DBG] Start discovery request
2019-12-03 21:53:23.156 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:23.157 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:23.158 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:23.158 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:23.159 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:23.159 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:23.159 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:23.159 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:23.204 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:53:23.205 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:53:23.215 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:53:23.216 +00:00 [DBG] Start authorize request
2019-12-03 21:53:23.216 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:53:23.217 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:53:23.217 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:53:23.218 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:53:23.219 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"lPeQVn5N-b0Nao-5cQIzpDD8ljQlo-GITrUC_r8-dZW2D","UiLocales":null,"Nonce":"lPeQVn5N-b0Nao-5cQIzpDD8ljQlo-GITrUC_r8-dZW2D","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"335efb4a53953ccc3aad14d474554ffd","Raw":{"response_type":"id_token token","client_id":"angular","state":"lPeQVn5N-b0Nao-5cQIzpDD8ljQlo-GITrUC_r8-dZW2D","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"lPeQVn5N-b0Nao-5cQIzpDD8ljQlo-GITrUC_r8-dZW2D"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:53:23.241 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:53:23.241 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:53:23.242 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:53:23.242 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:53:23.268 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:53:23.271 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:53:23.272 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:53:23.276 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4xyQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****d1uQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000018","TimeStamp":"2019-12-03T21:53:23.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:53:23.289 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"lPeQVn5N-b0Nao-5cQIzpDD8ljQlo-GITrUC_r8-dZW2D","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:53:24.873 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:24.873 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:24.873 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:24.873 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:24.873 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:24.874 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:24.874 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:24.874 +00:00 [DBG] Start discovery request
2019-12-03 21:53:24.883 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:24.884 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:24.884 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:24.884 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:24.885 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:24.886 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:24.886 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:24.886 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:25.469 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:25.470 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:25.470 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:25.470 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:25.471 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:25.472 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:25.472 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:25.472 +00:00 [DBG] Start discovery request
2019-12-03 21:53:25.485 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:25.487 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:25.487 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:25.487 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:25.488 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:25.489 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:25.489 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:25.489 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:33.808 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:33.809 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:33.809 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:33.810 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:33.810 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:33.811 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:33.811 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:33.811 +00:00 [DBG] Start discovery request
2019-12-03 21:53:33.821 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:33.821 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:33.821 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:33.822 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:33.822 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:33.823 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:33.823 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:33.824 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:35.152 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:35.153 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:35.154 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:35.154 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:35.154 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:35.155 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:35.155 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:35.155 +00:00 [DBG] Start discovery request
2019-12-03 21:53:35.165 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:35.166 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:35.170 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:35.170 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:35.171 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:35.171 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:35.172 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:35.172 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:38.398 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:38.398 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:38.398 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:38.398 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:38.399 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:38.400 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:38.400 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:38.400 +00:00 [DBG] Start discovery request
2019-12-03 21:53:38.408 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:38.408 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:38.409 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:38.409 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:38.410 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:38.410 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:38.411 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:38.411 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:38.710 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:38.710 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:38.710 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:38.711 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:38.711 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:38.712 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:38.712 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:38.712 +00:00 [DBG] Start discovery request
2019-12-03 21:53:38.722 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:38.723 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:38.723 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:38.723 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:38.723 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:38.724 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:38.724 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:38.724 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:38.911 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:38.911 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:38.912 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:38.912 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:38.912 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:38.913 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:38.913 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:38.913 +00:00 [DBG] Start discovery request
2019-12-03 21:53:38.921 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:38.921 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:38.921 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:38.922 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:38.923 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:38.923 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:38.923 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:38.923 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:39.086 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:39.087 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:39.087 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:39.087 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:39.087 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:39.088 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:39.088 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:39.088 +00:00 [DBG] Start discovery request
2019-12-03 21:53:39.096 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:39.097 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:39.097 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:39.097 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:39.098 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:39.098 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:39.099 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:39.099 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:41.550 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:41.550 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:41.551 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:41.551 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:41.551 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:41.552 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:41.552 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:41.552 +00:00 [DBG] Start discovery request
2019-12-03 21:53:41.561 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:41.561 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:41.561 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:41.562 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:41.562 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:41.563 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:41.563 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:41.563 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:41.820 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:41.821 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:41.822 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:41.822 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:41.823 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:41.823 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:41.824 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:41.824 +00:00 [DBG] Start discovery request
2019-12-03 21:53:41.832 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:41.832 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:41.832 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:41.832 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:41.833 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:41.833 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:41.833 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:41.833 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:42.127 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:42.127 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:42.127 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:42.127 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:42.127 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:42.128 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:42.128 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:42.128 +00:00 [DBG] Start discovery request
2019-12-03 21:53:42.136 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:42.136 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:42.136 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:42.137 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:42.137 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:42.137 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:42.138 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:42.138 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:42.311 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:42.312 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:42.312 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:42.314 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:42.314 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:42.315 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:42.316 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:42.316 +00:00 [DBG] Start discovery request
2019-12-03 21:53:42.325 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:42.325 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:42.327 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:42.327 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:42.328 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:42.328 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:42.328 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:42.328 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:44.723 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:44.723 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:44.723 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:44.723 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:44.723 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:44.724 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:44.724 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:44.724 +00:00 [DBG] Start discovery request
2019-12-03 21:53:44.741 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:44.741 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:44.742 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:44.742 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:44.743 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:44.743 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:44.744 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:44.744 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:44.764 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:53:44.766 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:53:44.766 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:53:44.767 +00:00 [DBG] Start authorize request
2019-12-03 21:53:44.767 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:53:44.768 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:53:44.768 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:53:44.768 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:53:44.769 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"sEtYyzj3Ka2H57GozcRyXFFx97QNVbkOqfq5RX9yjsPBa","UiLocales":null,"Nonce":"sEtYyzj3Ka2H57GozcRyXFFx97QNVbkOqfq5RX9yjsPBa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"335efb4a53953ccc3aad14d474554ffd","Raw":{"response_type":"id_token token","client_id":"angular","state":"sEtYyzj3Ka2H57GozcRyXFFx97QNVbkOqfq5RX9yjsPBa","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"sEtYyzj3Ka2H57GozcRyXFFx97QNVbkOqfq5RX9yjsPBa"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:53:44.828 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:53:44.870 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:53:44.870 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:53:44.870 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:53:44.871 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:53:44.874 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:53:44.874 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:53:44.877 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_wdA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3Jkg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO6VLB4SL3:00000019","TimeStamp":"2019-12-03T21:53:44.0000000Z","ProcessId":1214,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:53:44.878 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"sEtYyzj3Ka2H57GozcRyXFFx97QNVbkOqfq5RX9yjsPBa","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:53:46.849 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:46.850 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:46.850 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:46.850 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:46.850 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:46.850 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:46.850 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:46.850 +00:00 [DBG] Start discovery request
2019-12-03 21:53:46.878 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:46.879 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:46.879 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:46.879 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:46.879 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:46.880 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:46.880 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:46.880 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:47.934 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:47.935 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:47.936 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:47.937 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:47.938 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:47.939 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:47.940 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:47.940 +00:00 [DBG] Start discovery request
2019-12-03 21:53:47.955 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:47.955 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:47.956 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:47.956 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:47.956 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:47.957 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:47.958 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:47.958 +00:00 [DBG] Start key discovery request
2019-12-03 21:53:50.670 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:50.670 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:53:50.670 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:50.670 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:50.670 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:53:50.671 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:53:50.671 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:53:50.671 +00:00 [DBG] Start discovery request
2019-12-03 21:53:50.680 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:53:50.680 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:53:50.681 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:53:50.681 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:53:50.681 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:53:50.681 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:53:50.681 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:53:50.682 +00:00 [DBG] Start key discovery request
2019-12-03 21:55:03.608 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-03 21:55:03.726 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-03 21:55:03.762 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-03 21:55:03.763 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-03 21:55:03.763 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-03 21:55:03.763 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-03 21:55:03.764 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-03 21:55:03.764 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-03 21:57:07.777 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:07.839 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:07.845 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:07.846 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:07.929 +00:00 [DBG] Login Url: /Account/Login
2019-12-03 21:57:07.929 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-03 21:57:07.929 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-03 21:57:07.929 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-03 21:57:07.929 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-03 21:57:07.930 +00:00 [DBG] Error Url: /home/error
2019-12-03 21:57:07.930 +00:00 [DBG] Error Id Parameter: errorId
2019-12-03 21:57:07.975 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:08.191 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:08.192 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:08.200 +00:00 [DBG] Start discovery request
2019-12-03 21:57:08.350 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:08.351 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:08.351 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:08.351 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:08.352 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:08.354 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:08.354 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:08.372 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:08.559 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:57:08.577 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:57:08.578 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:57:08.585 +00:00 [DBG] Start authorize request
2019-12-03 21:57:08.605 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:57:08.619 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:57:08.649 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:57:08.739 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:57:08.759 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"UouYzoL00T-lZxeafVgRvIkuYHlUUJnkxkLqmrv3pPvEO","UiLocales":null,"Nonce":"UouYzoL00T-lZxeafVgRvIkuYHlUUJnkxkLqmrv3pPvEO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"335efb4a53953ccc3aad14d474554ffd","Raw":{"response_type":"id_token token","client_id":"angular","state":"UouYzoL00T-lZxeafVgRvIkuYHlUUJnkxkLqmrv3pPvEO","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"UouYzoL00T-lZxeafVgRvIkuYHlUUJnkxkLqmrv3pPvEO"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:57:10.256 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:57:10.272 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:57:10.292 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:57:10.293 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:57:10.309 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:57:10.428 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:57:10.429 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:57:10.474 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ROJg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pJ2g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO7EUQ2RAU:00000001","TimeStamp":"2019-12-03T21:57:10.0000000Z","ProcessId":2114,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:57:10.479 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"UouYzoL00T-lZxeafVgRvIkuYHlUUJnkxkLqmrv3pPvEO","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:57:14.350 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:14.351 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:14.351 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:14.351 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:14.352 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:14.353 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:14.353 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:14.353 +00:00 [DBG] Start discovery request
2019-12-03 21:57:14.365 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:14.365 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:14.366 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:14.366 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:14.367 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:14.373 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:14.374 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:14.374 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:14.974 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:14.974 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:14.975 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:14.975 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:14.976 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:14.976 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:14.977 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:14.977 +00:00 [DBG] Start discovery request
2019-12-03 21:57:14.997 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:14.997 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:14.998 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:14.998 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:14.998 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:14.999 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:14.999 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:14.999 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:18.712 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:18.713 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:18.713 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:18.713 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:18.713 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:18.714 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:18.714 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:18.715 +00:00 [DBG] Start discovery request
2019-12-03 21:57:18.729 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:18.729 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:18.729 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:18.729 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:18.730 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:18.730 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:18.730 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:18.731 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:32.386 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:32.387 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:32.388 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:32.388 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:32.389 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:32.390 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:32.391 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:32.391 +00:00 [DBG] Start discovery request
2019-12-03 21:57:32.412 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:32.413 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:32.413 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:32.413 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:32.413 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:32.414 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:32.414 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:32.414 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:32.790 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:32.791 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:32.791 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:32.791 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:32.792 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:32.793 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:32.793 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:32.793 +00:00 [DBG] Start discovery request
2019-12-03 21:57:32.800 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:32.800 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:32.801 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:32.801 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:32.801 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:32.802 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:32.802 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:32.802 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:33.279 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:33.279 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:33.279 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:33.279 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:33.279 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:33.279 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:33.279 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:33.280 +00:00 [DBG] Start discovery request
2019-12-03 21:57:33.286 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:33.287 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:33.287 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:33.287 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:33.288 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:33.289 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:33.289 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:33.289 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:33.493 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:33.494 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:33.494 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:33.494 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:33.495 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:33.495 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:33.496 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:33.496 +00:00 [DBG] Start discovery request
2019-12-03 21:57:33.506 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:33.507 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:33.507 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:33.508 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:33.508 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:33.509 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:33.509 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:33.509 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:33.701 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:33.701 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:33.701 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:33.701 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:33.702 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:33.702 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:33.703 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:33.703 +00:00 [DBG] Start discovery request
2019-12-03 21:57:33.714 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:33.715 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:33.715 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:33.715 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:33.715 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:33.716 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:33.716 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:33.716 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:35.886 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:35.887 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:35.887 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:35.887 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:35.887 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:35.887 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:35.887 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:35.887 +00:00 [DBG] Start discovery request
2019-12-03 21:57:35.898 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:35.898 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:35.898 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:35.898 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:35.899 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:35.899 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:35.899 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:35.899 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:35.964 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-03 21:57:35.988 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-03 21:57:35.988 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-03 21:57:35.989 +00:00 [DBG] Start authorize request
2019-12-03 21:57:35.989 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:57:35.989 +00:00 [DBG] Start authorize request protocol validation
2019-12-03 21:57:35.989 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:57:35.990 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-03 21:57:35.990 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"h7Klu6wgEngrdobzSDcJK353i_kNpcnrcrm0L_-xjb7Nq","UiLocales":null,"Nonce":"h7Klu6wgEngrdobzSDcJK353i_kNpcnrcrm0L_-xjb7Nq","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"335efb4a53953ccc3aad14d474554ffd","Raw":{"response_type":"id_token token","client_id":"angular","state":"h7Klu6wgEngrdobzSDcJK353i_kNpcnrcrm0L_-xjb7Nq","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"h7Klu6wgEngrdobzSDcJK353i_kNpcnrcrm0L_-xjb7Nq"},"$type":"AuthorizeRequestValidationLog"}
2019-12-03 21:57:36.206 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-03 21:57:36.206 +00:00 [DBG] Creating Implicit Flow response.
2019-12-03 21:57:36.207 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-03 21:57:36.207 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:57:36.208 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:57:36.226 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-03 21:57:36.227 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-03 21:57:36.232 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****tRcQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Bv5A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRO7EUQ2RAV:00000001","TimeStamp":"2019-12-03T21:57:36.0000000Z","ProcessId":2114,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-03 21:57:36.267 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"h7Klu6wgEngrdobzSDcJK353i_kNpcnrcrm0L_-xjb7Nq","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-03 21:57:37.862 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:37.862 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:37.863 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:37.863 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:37.863 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:37.863 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:37.863 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:37.863 +00:00 [DBG] Start discovery request
2019-12-03 21:57:37.878 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:37.878 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:37.878 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:37.878 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:37.879 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:37.879 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:37.879 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:37.879 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:38.381 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:38.382 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-03 21:57:38.382 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:38.387 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:38.388 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-03 21:57:38.388 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-03 21:57:38.388 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-03 21:57:38.388 +00:00 [DBG] Start discovery request
2019-12-03 21:57:38.424 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-03 21:57:38.425 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-03 21:57:38.425 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-03 21:57:38.425 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-03 21:57:38.425 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-03 21:57:38.425 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-03 21:57:38.425 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-03 21:57:38.426 +00:00 [DBG] Start key discovery request
2019-12-03 21:57:39.628 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-03 21:57:39.632 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-03 21:57:39.632 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-03 21:57:39.647 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-03 21:57:39.659 +00:00 [DBG] Start end session request validation
2019-12-03 21:57:39.672 +00:00 [DBG] Start identity token validation
2019-12-03 21:57:39.683 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:57:39.683 +00:00 [DBG] Client found: angular / SPA Client
2019-12-03 21:57:39.720 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-03 21:57:39.725 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1575410256,"exp":1575410556,"iss":"http://localhost:5000","aud":"angular","nonce":"h7Klu6wgEngrdobzSDcJK353i_kNpcnrcrm0L_-xjb7Nq","iat":1575410256,"at_hash":"gGrtM2jYRtoWLJcRB7CwQw","sid":"335efb4a53953ccc3aad14d474554ffd","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1575409977,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-03 21:57:39.736 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-03 21:57:39.740 +00:00 [ERR] Error processing end session request Invalid request
2019-12-03 21:57:45.418 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-03 21:57:45.420 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-03 21:57:45.422 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-03 21:57:45.423 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRO7EUQ2RAV:00000003","TimeStamp":"2019-12-03T21:57:45.0000000Z","ProcessId":2114,"LocalIpAddress":"::ffff:172.21.0.4:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-03 21:57:45.488 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-03 21:57:45.491 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-03 21:57:45.492 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-03 21:57:45.507 +00:00 [DBG] Processing signout callback request
2019-12-03 21:57:45.539 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-03 21:57:45.539 +00:00 [DBG] No client front-channel logout URLs
2019-12-03 21:57:45.540 +00:00 [DBG] No client back-channel logout URLs
2019-12-03 21:57:45.540 +00:00 [INF] Successful signout callback.
2019-12-03 21:57:45.544 +00:00 [DBG] No client front-channel iframe urls
2019-12-03 21:57:45.545 +00:00 [DBG] No client back-channel iframe urls
2019-12-08 18:55:29.099 +00:00 [WRN] No XML encryptor configured. Key {a945e589-931b-4091-add9-a847c8047a95} may be persisted to storage in unencrypted form.
2019-12-08 18:55:29.569 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-08 18:55:29.598 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-08 18:55:29.625 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-08 18:55:29.627 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-08 18:55:29.633 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-08 18:55:29.635 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-08 18:55:29.641 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-08 18:55:29.646 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-08 19:08:18.643 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-08 19:08:18.736 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-08 19:08:18.767 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-08 19:08:18.768 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-08 19:08:18.772 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-08 19:08:18.773 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-08 19:08:18.774 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-08 19:08:18.777 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-08 19:10:56.235 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-08 19:10:56.321 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-08 19:10:56.350 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-08 19:10:56.352 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-08 19:10:56.355 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-08 19:10:56.361 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-08 19:10:56.366 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-08 19:10:56.371 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-08 20:15:57.486 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-08 20:15:57.604 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-08 20:15:57.628 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-08 20:15:57.629 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-08 20:15:57.630 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-08 20:15:57.631 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-08 20:15:57.634 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-08 20:15:57.637 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-08 20:52:17.934 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 20:52:17.991 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 20:52:17.998 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 20:52:17.998 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 20:52:18.101 +00:00 [DBG] Login Url: /Account/Login
2019-12-08 20:52:18.102 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-08 20:52:18.103 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-08 20:52:18.104 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-08 20:52:18.107 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-08 20:52:18.108 +00:00 [DBG] Error Url: /home/error
2019-12-08 20:52:18.110 +00:00 [DBG] Error Id Parameter: errorId
2019-12-08 20:52:18.173 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 20:52:18.427 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 20:52:18.429 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 20:52:18.442 +00:00 [DBG] Start discovery request
2019-12-08 20:52:18.575 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 20:52:18.577 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 20:52:18.578 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 20:52:18.582 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 20:52:18.591 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 20:52:18.596 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 20:52:18.596 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 20:52:18.610 +00:00 [DBG] Start key discovery request
2019-12-08 20:52:18.675 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 20:52:18.677 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 20:52:18.682 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-08 20:52:18.699 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-08 20:52:18.699 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-08 20:52:18.710 +00:00 [DBG] Start authorize request
2019-12-08 20:52:18.726 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 20:52:18.735 +00:00 [DBG] No user present in authorize request
2019-12-08 20:52:18.746 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 20:52:18.775 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 20:52:18.849 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 20:52:18.873 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"RiUHqqGkOGW6EVCMfwq_etluu-XmtQjPuuoCiXPrS4pBE","UiLocales":null,"Nonce":"RiUHqqGkOGW6EVCMfwq_etluu-XmtQjPuuoCiXPrS4pBE","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"RiUHqqGkOGW6EVCMfwq_etluu-XmtQjPuuoCiXPrS4pBE","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"RiUHqqGkOGW6EVCMfwq_etluu-XmtQjPuuoCiXPrS4pBE"},"$type":"AuthorizeRequestValidationLog"}
2019-12-08 20:52:18.942 +00:00 [INF] Showing login: User is not authenticated
2019-12-08 20:52:19.042 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 20:52:19.043 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 20:52:19.356 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 20:52:19.356 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 20:52:19.357 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 20:52:19.359 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 20:52:19.367 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 20:52:19.568 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {82b6ce49-0654-4074-883d-a89577970621} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-08 20:56:08.665 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-08 20:56:08.716 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-08 20:56:08.731 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-08 20:56:08.732 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-08 20:56:08.733 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-08 20:56:08.734 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-08 20:56:08.736 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-08 20:56:08.738 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-08 21:00:41.373 +00:00 [DBG] Login Url: /Account/Login
2019-12-08 21:00:41.376 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-08 21:00:41.376 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-08 21:00:41.378 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-08 21:00:41.379 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-08 21:00:41.380 +00:00 [DBG] Error Url: /home/error
2019-12-08 21:00:41.381 +00:00 [DBG] Error Id Parameter: errorId
2019-12-08 21:00:41.414 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:00:41.459 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:09:12.302 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:09:12.323 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 21:09:12.331 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:09:12.331 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:09:12.338 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 21:09:12.613 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 21:09:12.614 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 21:09:12.622 +00:00 [DBG] Start discovery request
2019-12-08 21:09:12.698 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:09:12.699 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 21:09:12.699 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:09:12.700 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:09:12.703 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 21:09:12.706 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 21:09:12.708 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 21:09:12.719 +00:00 [DBG] Start key discovery request
2019-12-08 21:09:12.856 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:09:12.857 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:09:12.858 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-08 21:09:12.885 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-08 21:09:12.886 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-08 21:09:12.897 +00:00 [DBG] Start authorize request
2019-12-08 21:09:12.916 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:09:12.924 +00:00 [DBG] No user present in authorize request
2019-12-08 21:09:12.937 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:09:12.976 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:09:13.052 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:09:13.072 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"nV7uYw_4iqCjoGpsa5lOQT2X4NohMqJrv7DQZph0vvGuy","UiLocales":null,"Nonce":"nV7uYw_4iqCjoGpsa5lOQT2X4NohMqJrv7DQZph0vvGuy","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"nV7uYw_4iqCjoGpsa5lOQT2X4NohMqJrv7DQZph0vvGuy","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"nV7uYw_4iqCjoGpsa5lOQT2X4NohMqJrv7DQZph0vvGuy"},"$type":"AuthorizeRequestValidationLog"}
2019-12-08 21:09:13.121 +00:00 [INF] Showing login: User is not authenticated
2019-12-08 21:09:13.278 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:09:13.278 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:09:13.421 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-08 21:09:13.422 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:09:13.424 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:09:13.426 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:09:13.433 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:10:22.356 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:10:22.356 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 21:10:22.356 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:10:22.356 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:10:22.357 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 21:10:22.388 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 21:10:22.388 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 21:10:22.388 +00:00 [DBG] Start discovery request
2019-12-08 21:10:22.433 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:10:22.433 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 21:10:22.434 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:10:22.435 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:10:22.435 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 21:10:22.436 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 21:10:22.437 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 21:10:22.438 +00:00 [DBG] Start key discovery request
2019-12-08 21:10:22.544 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-08 21:10:22.551 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-08 21:10:22.556 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-08 21:10:22.556 +00:00 [DBG] Start authorize request
2019-12-08 21:10:22.556 +00:00 [DBG] No user present in authorize request
2019-12-08 21:10:22.556 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:10:22.556 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:10:22.604 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:10:22.605 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj","UiLocales":null,"Nonce":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj"},"$type":"AuthorizeRequestValidationLog"}
2019-12-08 21:10:22.605 +00:00 [INF] Showing login: User is not authenticated
2019-12-08 21:10:22.629 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:10:22.629 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:10:22.632 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:10:22.639 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:10:29.687 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:10:29.688 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-08 21:10:29.761 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:10:29.762 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:10:29.763 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:10:31.409 +00:00 [DBG] Augmenting SignInContext
2019-12-08 21:10:31.413 +00:00 [DBG] Adding idp claim with value: local
2019-12-08 21:10:31.414 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-08 21:10:31.414 +00:00 [DBG] Adding auth_time claim with value: 1575839431
2019-12-08 21:10:31.440 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-08 21:10:31.605 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRS46NG0DQ9:00000004","TimeStamp":"2019-12-08T21:10:31.0000000Z","ProcessId":1434,"LocalIpAddress":"::ffff:172.21.0.6:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLoginSuccessEvent"}
2019-12-08 21:10:31.610 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:10:31.651 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-08 21:10:31.654 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-08 21:10:31.654 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-08 21:10:31.671 +00:00 [DBG] Start authorize callback request
2019-12-08 21:10:31.678 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:10:31.679 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:10:31.679 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:10:31.679 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:10:31.680 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj","UiLocales":null,"Nonce":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7e481c977a9b07f292440ca8829e748c","Raw":{"response_type":"id_token token","client_id":"angular","state":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj"},"$type":"AuthorizeRequestValidationLog"}
2019-12-08 21:10:31.783 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-08 21:10:31.798 +00:00 [DBG] Creating Implicit Flow response.
2019-12-08 21:10:31.819 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-08 21:10:31.820 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:10:31.832 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:10:32.095 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-08 21:10:32.097 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:10:32.111 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jcoA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YvCQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRS46NG0DQ9:00000005","TimeStamp":"2019-12-08T21:10:32.0000000Z","ProcessId":1434,"LocalIpAddress":"::ffff:172.21.0.6:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-08 21:10:32.114 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"31vdMlIUnCKYeKjr3f2wceiDj3aX6mv0uFdftgu_KyUuj","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-08 21:10:32.146 +00:00 [DBG] Augmenting SignInContext
2019-12-08 21:10:32.147 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-08 21:11:03.302 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:11:03.302 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 21:11:03.302 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:11:03.302 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:11:03.304 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 21:11:03.304 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 21:11:03.304 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 21:11:03.305 +00:00 [DBG] Start discovery request
2019-12-08 21:11:03.345 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:11:03.345 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 21:11:03.346 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:11:03.348 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:11:03.350 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 21:11:03.352 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 21:11:03.353 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 21:11:03.357 +00:00 [DBG] Start key discovery request
2019-12-08 21:22:52.644 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:22:52.644 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 21:22:52.644 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:22:52.644 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:22:52.645 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 21:22:52.645 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 21:22:52.645 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 21:22:52.646 +00:00 [DBG] Start discovery request
2019-12-08 21:22:52.671 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:22:52.671 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 21:22:52.671 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:22:52.672 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:22:52.672 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 21:22:52.673 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 21:22:52.673 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 21:22:52.673 +00:00 [DBG] Start key discovery request
2019-12-08 21:22:52.718 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-08 21:22:52.719 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-08 21:22:52.723 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-08 21:22:52.725 +00:00 [DBG] Start authorize request
2019-12-08 21:22:52.725 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:22:52.726 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:22:52.728 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:22:52.730 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:22:52.735 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Z3gseESEOXMROin0iIUVOp573D6WhsDZgRtR5eaQ86scF","UiLocales":null,"Nonce":"Z3gseESEOXMROin0iIUVOp573D6WhsDZgRtR5eaQ86scF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7e481c977a9b07f292440ca8829e748c","Raw":{"response_type":"id_token token","client_id":"angular","state":"Z3gseESEOXMROin0iIUVOp573D6WhsDZgRtR5eaQ86scF","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"Z3gseESEOXMROin0iIUVOp573D6WhsDZgRtR5eaQ86scF"},"$type":"AuthorizeRequestValidationLog"}
2019-12-08 21:22:52.948 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-08 21:22:52.952 +00:00 [DBG] Creating Implicit Flow response.
2019-12-08 21:22:52.953 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-08 21:22:52.956 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:22:52.960 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:22:52.964 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-08 21:22:52.965 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:22:52.970 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****G8eg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-BqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRS46NG0DQD:00000001","TimeStamp":"2019-12-08T21:22:52.0000000Z","ProcessId":1434,"LocalIpAddress":"::ffff:172.21.0.6:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-08 21:22:52.971 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"Z3gseESEOXMROin0iIUVOp573D6WhsDZgRtR5eaQ86scF","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-08 21:22:58.926 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:22:58.926 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 21:22:58.926 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:22:58.926 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:22:58.927 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 21:22:58.928 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 21:22:58.928 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 21:22:58.928 +00:00 [DBG] Start discovery request
2019-12-08 21:22:58.940 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:22:58.940 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 21:22:58.941 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:22:58.941 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:22:58.942 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 21:22:58.942 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 21:22:58.943 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 21:22:58.943 +00:00 [DBG] Start key discovery request
2019-12-08 21:22:58.967 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-08 21:22:58.969 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-08 21:22:58.969 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-08 21:22:58.969 +00:00 [DBG] Start authorize request
2019-12-08 21:22:58.970 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:22:58.970 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:22:58.970 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:22:58.971 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:22:58.972 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"4Ozk4gcamH5u-Ns3m9ryERdljoiSzm-frtWcH-SP6r6ib","UiLocales":null,"Nonce":"4Ozk4gcamH5u-Ns3m9ryERdljoiSzm-frtWcH-SP6r6ib","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7e481c977a9b07f292440ca8829e748c","Raw":{"response_type":"id_token token","client_id":"angular","state":"4Ozk4gcamH5u-Ns3m9ryERdljoiSzm-frtWcH-SP6r6ib","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"4Ozk4gcamH5u-Ns3m9ryERdljoiSzm-frtWcH-SP6r6ib"},"$type":"AuthorizeRequestValidationLog"}
2019-12-08 21:22:59.013 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-08 21:22:59.016 +00:00 [DBG] Creating Implicit Flow response.
2019-12-08 21:22:59.016 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-08 21:22:59.016 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:22:59.018 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:22:59.023 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-08 21:22:59.046 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:22:59.050 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ApYw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****G5YQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRS46NG0DQD:00000002","TimeStamp":"2019-12-08T21:22:59.0000000Z","ProcessId":1434,"LocalIpAddress":"::ffff:172.21.0.6:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-08 21:22:59.051 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"4Ozk4gcamH5u-Ns3m9ryERdljoiSzm-frtWcH-SP6r6ib","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-08 21:23:01.659 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:23:01.659 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 21:23:01.659 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:23:01.660 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:23:01.662 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 21:23:01.662 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 21:23:01.663 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 21:23:01.663 +00:00 [DBG] Start discovery request
2019-12-08 21:23:01.689 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:23:01.689 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 21:23:01.689 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:23:01.689 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:23:01.690 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 21:23:01.690 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 21:23:01.691 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 21:23:01.691 +00:00 [DBG] Start key discovery request
2019-12-08 21:23:01.723 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-08 21:23:01.725 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-08 21:23:01.725 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-08 21:23:01.725 +00:00 [DBG] Start authorize request
2019-12-08 21:23:01.725 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:23:01.726 +00:00 [DBG] Start authorize request protocol validation
2019-12-08 21:23:01.726 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:23:01.727 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-08 21:23:01.728 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"2gZnfHhXekHdVn2xobbUz4JVQ2AMfK3rnD9NSbrKtnYq-","UiLocales":null,"Nonce":"2gZnfHhXekHdVn2xobbUz4JVQ2AMfK3rnD9NSbrKtnYq-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7e481c977a9b07f292440ca8829e748c","Raw":{"response_type":"id_token token","client_id":"angular","state":"2gZnfHhXekHdVn2xobbUz4JVQ2AMfK3rnD9NSbrKtnYq-","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"2gZnfHhXekHdVn2xobbUz4JVQ2AMfK3rnD9NSbrKtnYq-"},"$type":"AuthorizeRequestValidationLog"}
2019-12-08 21:23:01.770 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-08 21:23:01.792 +00:00 [DBG] Creating Implicit Flow response.
2019-12-08 21:23:01.798 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-08 21:23:01.800 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-08 21:23:01.805 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:23:01.814 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-08 21:23:01.814 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-08 21:23:01.859 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****nPTA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****8O5g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRS46NG0DQD:00000003","TimeStamp":"2019-12-08T21:23:01.0000000Z","ProcessId":1434,"LocalIpAddress":"::ffff:172.21.0.6:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-08 21:23:01.860 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"2gZnfHhXekHdVn2xobbUz4JVQ2AMfK3rnD9NSbrKtnYq-","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-08 21:23:03.628 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:23:03.628 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-08 21:23:03.628 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:23:03.628 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:23:03.629 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-08 21:23:03.629 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-08 21:23:03.629 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-08 21:23:03.629 +00:00 [DBG] Start discovery request
2019-12-08 21:23:03.662 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-08 21:23:03.663 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-08 21:23:03.663 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-08 21:23:03.664 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-08 21:23:03.664 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-08 21:23:03.665 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-08 21:23:03.666 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-08 21:23:03.666 +00:00 [DBG] Start key discovery request
2019-12-08 21:23:50.953 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-08 21:23:50.957 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-08 21:23:50.958 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-08 21:23:50.963 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLRS46NG0DQD:00000006","TimeStamp":"2019-12-08T21:23:50.0000000Z","ProcessId":1434,"LocalIpAddress":"::ffff:172.21.0.6:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-08 21:23:51.096 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-08 21:23:51.111 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-08 21:23:51.113 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-08 21:23:51.137 +00:00 [DBG] Processing signout callback request
2019-12-08 21:23:51.164 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-08 21:23:51.166 +00:00 [DBG] No client front-channel logout URLs
2019-12-08 21:23:51.167 +00:00 [DBG] No client back-channel logout URLs
2019-12-08 21:23:51.167 +00:00 [INF] Successful signout callback.
2019-12-08 21:23:51.178 +00:00 [DBG] No client front-channel iframe urls
2019-12-08 21:23:51.178 +00:00 [DBG] No client back-channel iframe urls
2019-12-09 15:56:29.198 +00:00 [WRN] No XML encryptor configured. Key {0878c235-9110-4da5-b821-cc7aa0a8aa15} may be persisted to storage in unencrypted form.
2019-12-09 15:56:29.736 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-09 15:56:29.764 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-09 15:56:29.830 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-09 15:56:29.834 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-09 15:56:29.838 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-09 15:56:29.842 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-09 15:56:29.845 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-09 15:56:29.846 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-09 18:30:50.974 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-09 18:30:51.107 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-09 18:30:51.142 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-09 18:30:51.160 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-09 18:30:51.171 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-09 18:30:51.182 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-09 18:30:51.213 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-09 18:30:51.230 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-09 18:35:42.910 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-09 18:35:43.076 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-09 18:35:43.150 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-09 18:35:43.183 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-09 18:35:43.198 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-09 18:35:43.203 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-09 18:35:43.206 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-09 18:35:43.217 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-09 18:59:24.193 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-09 18:59:24.440 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-09 18:59:24.543 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-09 18:59:24.559 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-09 18:59:24.590 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-09 18:59:24.591 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-09 18:59:24.591 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-09 18:59:24.591 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 11:29:50.284 +00:00 [WRN] No XML encryptor configured. Key {ae71332c-bc09-4e16-a60a-21b19f35bc5f} may be persisted to storage in unencrypted form.
2019-12-10 11:29:50.636 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 11:29:50.671 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 11:29:50.689 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 11:29:50.689 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 11:29:50.691 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 11:29:50.692 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 11:29:50.693 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 11:29:50.694 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 11:33:09.717 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 11:33:09.810 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 11:33:09.825 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 11:33:09.825 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 11:33:09.826 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 11:33:09.827 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 11:33:09.828 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 11:33:09.829 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 12:58:46.743 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 12:58:46.942 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 12:58:46.982 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 12:58:46.984 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 12:58:46.986 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 12:58:46.987 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 12:58:46.988 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 12:58:46.991 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 13:36:50.869 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 13:36:50.953 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 13:36:50.984 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 13:36:50.984 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 13:36:50.984 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 13:36:50.985 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 13:36:50.985 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 13:36:50.985 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 13:50:08.473 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 13:50:08.544 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 13:50:08.561 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 13:50:08.562 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 13:50:08.563 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 13:50:08.566 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 13:50:08.571 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 13:50:08.578 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 14:04:51.860 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 14:04:52.085 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 14:04:52.143 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 14:04:52.143 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 14:04:52.145 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 14:04:52.147 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 14:04:52.151 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 14:04:52.168 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 17:28:05.151 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 17:28:05.277 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 17:28:05.318 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 17:28:05.324 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 17:28:05.326 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 17:28:05.328 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 17:28:05.330 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 17:28:05.333 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 17:33:10.862 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 17:33:10.918 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 17:33:10.934 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 17:33:10.934 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 17:33:10.934 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 17:33:10.934 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 17:33:10.940 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 17:33:10.940 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 17:48:47.249 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 17:48:47.380 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 17:48:47.436 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 17:48:47.437 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 17:48:47.438 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 17:48:47.457 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 17:48:47.461 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 17:48:47.463 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 17:53:33.044 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 17:53:33.128 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 17:53:33.154 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 17:53:33.155 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 17:53:33.158 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 17:53:33.165 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 17:53:33.170 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 17:53:33.172 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 17:56:04.312 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 17:56:04.479 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 17:56:04.511 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 17:56:04.512 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 17:56:04.513 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 17:56:04.516 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 17:56:04.518 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 17:56:04.519 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 18:23:33.555 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 18:23:33.643 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 18:23:33.665 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 18:23:33.668 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 18:23:33.672 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 18:23:33.676 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 18:23:33.677 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 18:23:33.679 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 18:35:17.731 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 18:35:17.848 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 18:35:17.912 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 18:35:17.941 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 18:35:17.942 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 18:35:17.944 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 18:35:17.948 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 18:35:17.949 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 18:38:44.771 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 18:38:44.842 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 18:38:44.864 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 18:38:44.865 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 18:38:44.866 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 18:38:44.868 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 18:38:44.868 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 18:38:44.869 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 18:45:32.121 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 18:45:32.206 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 18:45:32.266 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 18:45:32.276 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 18:45:32.285 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 18:45:32.289 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 18:45:32.304 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 18:45:32.307 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 18:52:01.921 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 18:52:02.021 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 18:52:02.054 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 18:52:02.060 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 18:52:02.066 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 18:52:02.068 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 18:52:02.071 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 18:52:02.073 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 18:56:33.766 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 18:56:33.838 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 18:56:33.869 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 18:56:33.870 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 18:56:33.872 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 18:56:33.873 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 18:56:33.875 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 18:56:33.876 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 19:14:00.959 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 19:14:01.029 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 19:14:01.046 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 19:14:01.047 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 19:14:01.047 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 19:14:01.049 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 19:14:01.051 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 19:14:01.052 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 19:17:30.285 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 19:17:30.344 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 19:17:30.360 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 19:17:30.360 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 19:17:30.361 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 19:17:30.362 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 19:17:30.366 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 19:17:30.366 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 19:26:21.598 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 19:26:21.659 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 19:26:21.678 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 19:26:21.679 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 19:26:21.680 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 19:26:21.680 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 19:26:21.681 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 19:26:21.682 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 19:29:10.878 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 19:29:10.958 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 19:29:11.035 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 19:29:11.037 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 19:29:11.039 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 19:29:11.046 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 19:29:11.048 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 19:29:11.050 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 19:30:43.603 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 19:30:43.827 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 19:30:43.896 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 19:30:43.913 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 19:30:43.940 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 19:30:43.944 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 19:30:43.951 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 19:30:43.954 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 20:12:27.477 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 20:12:27.635 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 20:12:27.744 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 20:12:27.782 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 20:12:27.786 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 20:12:27.789 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 20:12:27.792 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 20:12:27.792 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 20:25:14.971 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 20:25:15.262 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 20:25:15.340 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 20:25:15.342 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 20:25:15.354 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 20:25:15.358 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 20:25:15.370 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 20:25:15.378 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-10 20:28:07.873 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-10 20:28:08.033 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-10 20:28:08.115 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-10 20:28:08.115 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-10 20:28:08.116 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-10 20:28:08.125 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-10 20:28:08.127 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-10 20:28:08.128 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 16:17:01.020 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 16:17:01.083 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 16:17:01.102 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 16:17:01.102 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 16:17:01.104 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 16:17:01.105 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 16:17:01.107 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 16:17:01.116 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 16:53:24.176 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 16:53:24.277 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 16:53:24.294 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 16:53:24.296 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 16:53:24.299 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 16:53:24.300 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 16:53:24.301 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 16:53:24.301 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 17:27:15.999 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 17:27:16.151 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 17:27:16.178 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 17:27:16.178 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 17:27:16.180 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 17:27:16.183 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 17:27:16.184 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 17:27:16.186 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 17:36:33.107 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 17:36:33.224 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 17:36:33.249 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 17:36:33.250 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 17:36:33.255 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 17:36:33.256 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 17:36:33.256 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 17:36:33.260 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 17:40:57.161 +00:00 [WRN] No XML encryptor configured. Key {a679cd7d-1921-48f7-9483-f567f57b301e} may be persisted to storage in unencrypted form.
2019-12-11 17:40:57.499 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 17:40:57.585 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 17:40:57.616 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 17:40:57.625 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 17:40:57.629 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 17:40:57.630 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 17:40:57.632 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 17:40:57.634 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 17:49:23.119 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 17:49:23.189 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 17:49:23.213 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 17:49:23.213 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 17:49:23.215 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 17:49:23.216 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 17:49:23.218 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 17:49:23.219 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 18:02:01.401 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 18:02:01.507 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 18:02:01.561 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 18:02:01.570 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 18:02:01.576 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 18:02:01.577 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 18:02:01.579 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 18:02:01.580 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 18:04:40.756 +00:00 [WRN] No XML encryptor configured. Key {4b48e7ce-b35b-4cd0-8c03-e48c2dd2eed1} may be persisted to storage in unencrypted form.
2019-12-11 18:04:41.824 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-11 18:04:41.986 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-11 18:04:42.082 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-11 18:04:42.111 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-11 18:04:42.127 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-11 18:04:42.144 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-11 18:04:42.159 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-11 18:04:42.175 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-11 18:11:59.156 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-11 18:11:59.216 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-11 18:11:59.222 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-11 18:11:59.223 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-11 18:11:59.309 +00:00 [DBG] Login Url: /Account/Login
2019-12-11 18:11:59.309 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-11 18:11:59.310 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-11 18:11:59.311 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-11 18:11:59.312 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-11 18:11:59.314 +00:00 [DBG] Error Url: /home/error
2019-12-11 18:11:59.316 +00:00 [DBG] Error Id Parameter: errorId
2019-12-11 18:11:59.358 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-11 18:11:59.608 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-11 18:11:59.609 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-11 18:11:59.617 +00:00 [DBG] Start discovery request
2019-12-11 18:11:59.761 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-11 18:11:59.762 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-11 18:11:59.762 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-11 18:11:59.762 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-11 18:11:59.764 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-11 18:11:59.772 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-11 18:11:59.776 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-11 18:11:59.785 +00:00 [DBG] Start key discovery request
2019-12-11 18:11:59.881 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-11 18:11:59.906 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-11 18:11:59.906 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-11 18:11:59.915 +00:00 [DBG] Start authorize request
2019-12-11 18:11:59.946 +00:00 [DBG] No user present in authorize request
2019-12-11 18:11:59.961 +00:00 [DBG] Start authorize request protocol validation
2019-12-11 18:11:59.995 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:12:00.085 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-11 18:12:00.106 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2","UiLocales":null,"Nonce":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2"},"$type":"AuthorizeRequestValidationLog"}
2019-12-11 18:12:00.269 +00:00 [INF] Showing login: User is not authenticated
2019-12-11 18:12:00.613 +00:00 [DBG] Start authorize request protocol validation
2019-12-11 18:12:00.613 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:12:00.616 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-11 18:12:00.621 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:12:00.787 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {a945e589-931b-4091-add9-a847c8047a95} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-11 18:12:15.754 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-11 18:12:15.755 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-11 18:12:15.838 +00:00 [DBG] Start authorize request protocol validation
2019-12-11 18:12:15.838 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:12:15.839 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-11 18:12:31.480 +00:00 [ERR] An error occurred using the connection to database 'Security' on server '192.168.1.2,1433'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-12-11 18:12:31.561 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-12-11 18:12:31.594 +00:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Identity.API.Data.ApplicationDbContext'.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-12-11 18:12:53.261 +00:00 [ERR] An exception occurred while calculating the database error page content. Skipping display of the database error page.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-12-11 18:12:53.273 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server)
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\First.cs:line 144
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)
   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\Select.cs:line 106
   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\a\1\s\Ix.NET\Source\System.Interactive.Async\AsyncIterator.cs:line 98
   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(String userName)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer4.Quickstart.UI.AccountController.Login(LoginInputModel model, String button) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 164
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:00000000-0000-0000-0000-000000000000
2019-12-11 18:13:27.195 +00:00 [DBG] Start authorize request protocol validation
2019-12-11 18:13:27.195 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:13:27.196 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-11 18:13:27.197 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:13:32.368 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-11 18:13:32.369 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-11 18:13:32.440 +00:00 [DBG] Start authorize request protocol validation
2019-12-11 18:13:32.441 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:13:32.442 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-11 18:13:33.484 +00:00 [DBG] Augmenting SignInContext
2019-12-11 18:13:33.488 +00:00 [DBG] Adding idp claim with value: local
2019-12-11 18:13:33.488 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-11 18:13:33.489 +00:00 [DBG] Adding auth_time claim with value: 1576088013
2019-12-11 18:13:33.509 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-11 18:13:33.678 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLRUCMEI808G:00000006","TimeStamp":"2019-12-11T18:13:33.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.21.0.2:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"UserLoginSuccessEvent"}
2019-12-11 18:13:33.682 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:13:33.700 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-11 18:13:33.703 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-11 18:13:33.703 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-11 18:13:33.714 +00:00 [DBG] Start authorize callback request
2019-12-11 18:13:33.721 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-11 18:13:33.721 +00:00 [DBG] Start authorize request protocol validation
2019-12-11 18:13:33.721 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-11 18:13:33.721 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-11 18:13:33.722 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2","UiLocales":null,"Nonce":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"da87ac0b120d8f464d79217c5357cbbb","Raw":{"response_type":"id_token token","client_id":"angular","state":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2"},"$type":"AuthorizeRequestValidationLog"}
2019-12-11 18:13:33.794 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-11 18:13:33.809 +00:00 [DBG] Creating Implicit Flow response.
2019-12-11 18:13:33.828 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-11 18:13:33.830 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-11 18:13:33.842 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-11 18:13:33.977 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-11 18:13:33.978 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-11 18:13:33.991 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****5cng","$type":"Token"},{"TokenType":"access_token","TokenValue":"****I4eg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLRUCMEI808G:00000007","TimeStamp":"2019-12-11T18:13:33.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.21.0.2:80","RemoteIpAddress":"::ffff:172.21.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-11 18:13:33.994 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"3Z_PEAvr7Opq5UhFOhq4bV69Q57-I54QL_4tPDdgZ9ep2","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-11 18:13:34.023 +00:00 [DBG] Augmenting SignInContext
2019-12-11 18:13:34.024 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-11 18:15:29.052 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-11 18:15:29.052 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-11 18:15:29.052 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-11 18:15:29.052 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-11 18:15:29.053 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-11 18:15:29.053 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-11 18:15:29.053 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-11 18:15:29.053 +00:00 [DBG] Start discovery request
2019-12-11 18:15:29.102 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-11 18:15:29.103 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-11 18:15:29.108 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-11 18:15:29.109 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-11 18:15:29.111 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-11 18:15:29.124 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-11 18:15:29.125 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-11 18:15:29.127 +00:00 [DBG] Start key discovery request
2019-12-14 07:27:19.671 +00:00 [WRN] No XML encryptor configured. Key {c94d0a66-4a1b-40bc-9d64-7cf920d4df8d} may be persisted to storage in unencrypted form.
2019-12-14 07:27:20.094 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 07:27:20.134 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 07:27:20.165 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 07:27:20.165 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 07:27:20.166 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 07:27:20.167 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 07:27:20.167 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 07:27:20.169 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 07:33:04.004 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:04.051 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 07:33:04.057 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:04.059 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:04.131 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 07:33:04.132 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 07:33:04.133 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 07:33:04.134 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 07:33:04.135 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 07:33:04.138 +00:00 [DBG] Error Url: /home/error
2019-12-14 07:33:04.139 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 07:33:04.176 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 07:33:04.394 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 07:33:04.396 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 07:33:04.404 +00:00 [DBG] Start discovery request
2019-12-14 07:33:04.668 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:04.669 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 07:33:04.670 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:04.672 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:04.707 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 07:33:04.716 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 07:33:04.716 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 07:33:04.716 +00:00 [DBG] Start discovery request
2019-12-14 07:33:04.786 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:04.786 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 07:33:04.786 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:04.786 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:04.786 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 07:33:04.823 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 07:33:04.824 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 07:33:04.847 +00:00 [DBG] Start key discovery request
2019-12-14 07:33:04.900 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:04.904 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 07:33:04.904 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:04.904 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:04.905 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 07:33:04.907 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 07:33:04.907 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 07:33:04.907 +00:00 [DBG] Start key discovery request
2019-12-14 07:33:05.124 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:05.124 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:05.130 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 07:33:05.139 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:05.139 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 07:33:05.140 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:05.140 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:05.152 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 07:33:05.153 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 07:33:05.155 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 07:33:05.155 +00:00 [DBG] Start discovery request
2019-12-14 07:33:05.165 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:05.165 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 07:33:05.166 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:05.166 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:05.166 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 07:33:05.176 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 07:33:05.177 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 07:33:05.178 +00:00 [DBG] Start discovery request
2019-12-14 07:33:05.206 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 07:33:05.207 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 07:33:05.222 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:05.223 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 07:33:05.227 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:05.227 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:05.228 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 07:33:05.229 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 07:33:05.229 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 07:33:05.229 +00:00 [DBG] Start key discovery request
2019-12-14 07:33:05.232 +00:00 [DBG] Start authorize request
2019-12-14 07:33:05.242 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:05.244 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 07:33:05.246 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:05.247 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:05.249 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 07:33:05.250 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 07:33:05.252 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 07:33:05.258 +00:00 [DBG] Start key discovery request
2019-12-14 07:33:05.272 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:05.282 +00:00 [DBG] No user present in authorize request
2019-12-14 07:33:05.290 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 07:33:05.316 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:33:05.379 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 07:33:05.400 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS","UiLocales":null,"Nonce":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 07:33:05.446 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 07:33:05.461 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:05.461 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:05.550 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:05.550 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 07:33:05.550 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:05.551 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:05.551 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 07:33:05.552 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 07:33:05.552 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 07:33:05.552 +00:00 [DBG] Start discovery request
2019-12-14 07:33:05.562 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:05.563 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 07:33:05.563 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:05.563 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:05.564 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 07:33:05.565 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 07:33:05.565 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 07:33:05.566 +00:00 [DBG] Start key discovery request
2019-12-14 07:33:05.900 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:05.901 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 07:33:05.903 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:33:05.906 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 07:33:05.917 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:33:06.175 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {4b48e7ce-b35b-4cd0-8c03-e48c2dd2eed1} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-14 07:33:06.290 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:06.290 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 07:33:06.290 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:06.290 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:06.290 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 07:33:06.292 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 07:33:06.292 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 07:33:06.293 +00:00 [DBG] Start discovery request
2019-12-14 07:33:06.306 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:06.307 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 07:33:06.307 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 07:33:06.307 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 07:33:06.307 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 07:33:06.309 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 07:33:06.309 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 07:33:06.309 +00:00 [DBG] Start key discovery request
2019-12-14 07:33:22.490 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:22.491 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 07:33:22.492 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:22.493 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:22.619 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:22.619 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 07:33:22.621 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:33:22.624 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 07:33:24.123 +00:00 [DBG] Augmenting SignInContext
2019-12-14 07:33:24.127 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 07:33:24.128 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 07:33:24.128 +00:00 [DBG] Adding auth_time claim with value: 1576308804
2019-12-14 07:33:24.133 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 07:33:24.146 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 07:33:24.340 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0CVDDPVNO:00000004","TimeStamp":"2019-12-14T07:33:24.0000000Z","ProcessId":31,"LocalIpAddress":"::ffff:172.22.0.6:80","RemoteIpAddress":"::ffff:172.22.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 07:33:24.343 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:33:24.386 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 07:33:24.390 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 07:33:24.390 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 07:33:24.404 +00:00 [DBG] Start authorize callback request
2019-12-14 07:33:24.412 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 07:33:24.412 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 07:33:24.412 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:33:24.414 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 07:33:24.415 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS","UiLocales":null,"Nonce":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c55218bdcf5550689a05bbcda894cd15","Raw":{"response_type":"id_token token","client_id":"angular","state":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 07:33:24.557 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:24.558 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 07:33:24.591 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 07:33:24.692 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 07:33:24.716 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 07:33:24.717 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 07:33:24.730 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 07:33:24.910 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 07:33:24.911 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 07:33:24.930 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****fy7A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zvFA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0CVDDPVNO:00000005","TimeStamp":"2019-12-14T07:33:24.0000000Z","ProcessId":31,"LocalIpAddress":"::ffff:172.22.0.6:80","RemoteIpAddress":"::ffff:172.22.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 07:33:24.933 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"UCKv4jY0JHie06dD48Tib4-nlsjfAQRci3TU3ttRZNUTS","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 07:33:24.968 +00:00 [DBG] Augmenting SignInContext
2019-12-14 07:33:24.972 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 07:33:31.035 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 07:33:31.036 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 07:33:47.012 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 07:33:47.012 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:33:47.013 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 07:33:47.014 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 07:34:03.117 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 07:34:03.119 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 07:34:03.120 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 07:34:03.119 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 07:34:03.124 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 07:34:03.125 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 07:34:03.125 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0CVDDPVNS:00000001","TimeStamp":"2019-12-14T07:34:03.0000000Z","ProcessId":31,"LocalIpAddress":"::ffff:172.22.0.6:80","RemoteIpAddress":"::ffff:172.22.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 07:34:03.126 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0CVDDPVNP:00000006","TimeStamp":"2019-12-14T07:34:03.0000000Z","ProcessId":31,"LocalIpAddress":"::ffff:172.22.0.6:80","RemoteIpAddress":"::ffff:172.22.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 13:42:25.323 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:42:25.425 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 13:42:25.426 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:42:25.428 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:42:25.470 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 13:42:25.471 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 13:42:25.473 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 13:42:25.474 +00:00 [DBG] Start discovery request
2019-12-14 13:42:25.487 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:42:25.488 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 13:42:25.490 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:42:25.491 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:42:25.493 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 13:42:25.494 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 13:42:25.495 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 13:42:25.496 +00:00 [DBG] Start key discovery request
2019-12-14 13:42:25.538 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 13:42:25.542 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 13:42:25.545 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 13:42:25.551 +00:00 [DBG] Start authorize request
2019-12-14 13:42:25.556 +00:00 [DBG] No user present in authorize request
2019-12-14 13:42:25.559 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 13:42:25.561 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:42:25.570 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 13:42:25.574 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"0NJZogx095f0Xv20xuVEoEL_Sf2wg1dELv-nidRB63KSV","UiLocales":null,"Nonce":"0NJZogx095f0Xv20xuVEoEL_Sf2wg1dELv-nidRB63KSV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"0NJZogx095f0Xv20xuVEoEL_Sf2wg1dELv-nidRB63KSV","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"0NJZogx095f0Xv20xuVEoEL_Sf2wg1dELv-nidRB63KSV"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 13:42:25.579 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 13:42:25.622 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 13:42:25.624 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:42:25.631 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 13:42:25.632 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:47:29.415 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:47:29.416 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 13:47:29.425 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:47:29.432 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:47:29.434 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 13:47:29.435 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 13:47:29.437 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 13:47:29.440 +00:00 [DBG] Start discovery request
2019-12-14 13:47:29.453 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:47:29.457 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 13:47:29.458 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:47:29.459 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:47:29.461 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 13:47:29.463 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 13:47:29.464 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 13:47:29.465 +00:00 [DBG] Start key discovery request
2019-12-14 13:47:29.539 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 13:47:29.543 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 13:47:29.546 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 13:47:29.548 +00:00 [DBG] Start authorize request
2019-12-14 13:47:29.551 +00:00 [DBG] No user present in authorize request
2019-12-14 13:47:29.556 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 13:47:29.582 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:47:29.584 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 13:47:29.585 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT","UiLocales":null,"Nonce":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 13:47:29.586 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 13:47:29.597 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 13:47:29.599 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:47:29.600 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 13:47:29.602 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:47:36.550 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:47:36.551 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 13:47:36.556 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 13:47:36.567 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:47:36.568 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 13:47:36.728 +00:00 [DBG] Augmenting SignInContext
2019-12-14 13:47:36.728 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 13:47:36.729 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 13:47:36.730 +00:00 [DBG] Adding auth_time claim with value: 1576331256
2019-12-14 13:47:36.732 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 13:47:36.746 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0CVDDPVO4:00000003","TimeStamp":"2019-12-14T13:47:36.0000000Z","ProcessId":31,"LocalIpAddress":"::ffff:172.22.0.6:80","RemoteIpAddress":"::ffff:172.22.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 13:47:36.747 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:47:36.755 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 13:47:36.757 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 13:47:36.761 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 13:47:36.764 +00:00 [DBG] Start authorize callback request
2019-12-14 13:47:36.768 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 13:47:36.773 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 13:47:36.776 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 13:47:36.781 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 13:47:36.790 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT","UiLocales":null,"Nonce":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d61444c47cba32e8d26055ba6c3a42bb","Raw":{"response_type":"id_token token","client_id":"angular","state":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 13:47:36.851 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 13:47:36.851 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 13:47:36.854 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 13:47:36.855 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 13:47:36.857 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 13:47:36.862 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 13:47:36.864 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 13:47:36.868 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****f1oQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jzGw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0CVDDPVO4:00000004","TimeStamp":"2019-12-14T13:47:36.0000000Z","ProcessId":31,"LocalIpAddress":"::ffff:172.22.0.6:80","RemoteIpAddress":"::ffff:172.22.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 13:47:36.869 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"OxxfguLnQYT1LYaTRTwUW7Xil7lhcsf7-45vdSW5fWnyT","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 13:47:36.870 +00:00 [DBG] Augmenting SignInContext
2019-12-14 13:47:36.871 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 13:47:46.251 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:47:46.255 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 13:47:46.257 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:47:46.258 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:47:46.260 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 13:47:46.262 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 13:47:46.263 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 13:47:46.264 +00:00 [DBG] Start discovery request
2019-12-14 13:47:46.292 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:47:46.294 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 13:47:46.296 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:47:46.297 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:47:46.298 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 13:47:46.300 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 13:47:46.301 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 13:47:46.302 +00:00 [DBG] Start key discovery request
2019-12-14 13:49:55.811 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:49:55.813 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 13:49:55.814 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:49:55.816 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:49:55.836 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 13:49:55.838 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 13:49:55.842 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 13:49:55.844 +00:00 [DBG] Start discovery request
2019-12-14 13:49:55.867 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 13:49:55.871 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 13:49:55.873 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 13:49:55.875 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 13:49:55.877 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 13:49:55.879 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 13:49:55.881 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 13:49:55.886 +00:00 [DBG] Start key discovery request
2019-12-14 18:36:48.568 +00:00 [WRN] No XML encryptor configured. Key {d6ef92d6-4d83-4c43-b6c1-8458623105a8} may be persisted to storage in unencrypted form.
2019-12-14 18:36:48.800 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 18:36:48.820 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 18:36:48.849 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 18:36:48.851 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 18:36:48.852 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 18:36:48.853 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 18:36:48.855 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 18:36:48.856 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 18:39:54.969 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:39:55.018 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:39:55.023 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:39:55.024 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:39:55.101 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 18:39:55.101 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 18:39:55.101 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 18:39:55.102 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 18:39:55.102 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 18:39:55.103 +00:00 [DBG] Error Url: /home/error
2019-12-14 18:39:55.104 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 18:39:55.143 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:39:55.389 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:39:55.392 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:39:55.399 +00:00 [DBG] Start discovery request
2019-12-14 18:39:55.517 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:39:55.517 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:39:55.518 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:39:55.518 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:39:55.520 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:39:55.522 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:39:55.522 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:39:55.579 +00:00 [DBG] Start key discovery request
2019-12-14 18:39:55.664 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:39:55.664 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:39:55.669 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:39:55.688 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:39:55.688 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:39:55.696 +00:00 [DBG] Start authorize request
2019-12-14 18:39:55.715 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:39:55.727 +00:00 [DBG] No user present in authorize request
2019-12-14 18:39:55.740 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:39:55.772 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:39:55.836 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:39:55.852 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r","UiLocales":null,"Nonce":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:39:55.896 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 18:39:55.911 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:39:55.911 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:39:56.212 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:39:56.213 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:39:56.213 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:39:56.215 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:39:56.219 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:39:56.405 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {c94d0a66-4a1b-40bc-9d64-7cf920d4df8d} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-14 18:40:01.148 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:01.149 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 18:40:01.150 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:40:01.150 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:40:01.220 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:40:01.220 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:40:01.222 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:40:01.223 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:40:02.703 +00:00 [DBG] Augmenting SignInContext
2019-12-14 18:40:02.708 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 18:40:02.708 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 18:40:02.708 +00:00 [DBG] Adding auth_time claim with value: 1576348802
2019-12-14 18:40:02.712 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:40:02.725 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 18:40:02.794 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000003","TimeStamp":"2019-12-14T18:40:02.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 18:40:02.797 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:40:02.839 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 18:40:02.851 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 18:40:02.853 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 18:40:02.870 +00:00 [DBG] Start authorize callback request
2019-12-14 18:40:02.877 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:40:02.877 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:40:02.880 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:40:02.882 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:40:02.883 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r","UiLocales":null,"Nonce":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e4a05a6ac1f4983cc179d907727ee7c1","Raw":{"response_type":"id_token token","client_id":"angular","state":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:40:02.973 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:40:02.988 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:40:03.008 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:40:03.009 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:40:03.024 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:40:03.122 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:40:03.123 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:40:03.135 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ATgA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wpWA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000004","TimeStamp":"2019-12-14T18:40:03.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:40:03.138 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"hJqdE9niQ3lRHstvK_jNHWbgUiQQFi4L6z-DW-lPDgS-r","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:40:03.162 +00:00 [DBG] Augmenting SignInContext
2019-12-14 18:40:03.164 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 18:40:07.452 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:07.453 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:40:07.454 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:07.454 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:07.455 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:40:07.456 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:40:07.468 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:40:07.468 +00:00 [DBG] Start discovery request
2019-12-14 18:40:07.482 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:07.482 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:40:07.483 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:07.483 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:07.484 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:40:07.489 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:40:07.491 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:40:07.492 +00:00 [DBG] Start key discovery request
2019-12-14 18:40:09.540 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:09.541 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:40:09.542 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:09.542 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:09.543 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:40:09.544 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:40:09.545 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:40:09.545 +00:00 [DBG] Start discovery request
2019-12-14 18:40:09.563 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:09.564 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:40:09.565 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:09.565 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:09.565 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:40:09.566 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:40:09.566 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:40:09.567 +00:00 [DBG] Start key discovery request
2019-12-14 18:40:53.035 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:53.036 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:40:53.036 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:53.036 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:53.036 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:40:53.036 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:40:53.036 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:40:53.037 +00:00 [DBG] Start discovery request
2019-12-14 18:40:53.058 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:53.064 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:40:53.069 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:53.069 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:53.070 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:40:53.070 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:40:53.070 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:40:53.071 +00:00 [DBG] Start key discovery request
2019-12-14 18:40:53.118 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:40:53.121 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:40:53.123 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:40:53.125 +00:00 [DBG] Start authorize request
2019-12-14 18:40:53.133 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:40:53.162 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:40:53.171 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:40:53.195 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:40:53.195 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"T_TgWD4evRM5lrEUGZgyUcyzRiDMi7YH62Rn5oNUj5-tl","UiLocales":null,"Nonce":"T_TgWD4evRM5lrEUGZgyUcyzRiDMi7YH62Rn5oNUj5-tl","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e4a05a6ac1f4983cc179d907727ee7c1","Raw":{"response_type":"id_token token","client_id":"angular","state":"T_TgWD4evRM5lrEUGZgyUcyzRiDMi7YH62Rn5oNUj5-tl","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"T_TgWD4evRM5lrEUGZgyUcyzRiDMi7YH62Rn5oNUj5-tl"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:40:53.253 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:40:53.254 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:40:53.254 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:40:53.254 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:40:53.254 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:40:53.257 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:40:53.257 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:40:53.351 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jVHw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****WOkQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000005","TimeStamp":"2019-12-14T18:40:53.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:40:53.352 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"T_TgWD4evRM5lrEUGZgyUcyzRiDMi7YH62Rn5oNUj5-tl","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:40:55.783 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:55.784 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:40:55.784 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:55.784 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:55.785 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:40:55.786 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:40:55.787 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:40:55.787 +00:00 [DBG] Start discovery request
2019-12-14 18:40:55.810 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:40:55.811 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:40:55.811 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:40:55.811 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:40:55.811 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:40:55.812 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:40:55.812 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:40:55.812 +00:00 [DBG] Start key discovery request
2019-12-14 18:41:53.213 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:41:53.213 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:41:53.214 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:41:53.214 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:41:53.215 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:41:53.216 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:41:53.216 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:41:53.216 +00:00 [DBG] Start discovery request
2019-12-14 18:41:53.224 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:41:53.225 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:41:53.225 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:41:53.225 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:41:53.225 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:41:53.226 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:41:53.226 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:41:53.226 +00:00 [DBG] Start key discovery request
2019-12-14 18:41:53.264 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:41:53.265 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:41:53.265 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:41:53.265 +00:00 [DBG] Start authorize request
2019-12-14 18:41:53.265 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:41:53.265 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:41:53.265 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:41:53.277 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:41:53.278 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"zcuA_oK3bJ1FlSogqq0Lmb9YZy4leGjfRkNh-JxrIsaWo","UiLocales":null,"Nonce":"zcuA_oK3bJ1FlSogqq0Lmb9YZy4leGjfRkNh-JxrIsaWo","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e4a05a6ac1f4983cc179d907727ee7c1","Raw":{"response_type":"id_token token","client_id":"angular","state":"zcuA_oK3bJ1FlSogqq0Lmb9YZy4leGjfRkNh-JxrIsaWo","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"zcuA_oK3bJ1FlSogqq0Lmb9YZy4leGjfRkNh-JxrIsaWo"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:41:53.318 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:41:53.319 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:41:53.319 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:41:53.319 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:41:53.319 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:41:53.322 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:41:53.345 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:41:53.369 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****v4Ww","$type":"Token"},{"TokenType":"access_token","TokenValue":"****U3sQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000006","TimeStamp":"2019-12-14T18:41:53.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:41:53.369 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"zcuA_oK3bJ1FlSogqq0Lmb9YZy4leGjfRkNh-JxrIsaWo","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:41:57.278 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:41:57.279 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:41:57.279 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:41:57.279 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:41:57.280 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:41:57.282 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:41:57.283 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:41:57.283 +00:00 [DBG] Start discovery request
2019-12-14 18:41:57.308 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:41:57.308 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:41:57.308 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:41:57.309 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:41:57.310 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:41:57.311 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:41:57.311 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:41:57.312 +00:00 [DBG] Start key discovery request
2019-12-14 18:41:57.344 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:41:57.346 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:41:57.346 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:41:57.347 +00:00 [DBG] Start authorize request
2019-12-14 18:41:57.347 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:41:57.348 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:41:57.348 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:41:57.349 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:41:57.349 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"_g286TLCqZdxFwiaQO-JDd_a-qwwdOFsKmCBeBmYJoGwY","UiLocales":null,"Nonce":"_g286TLCqZdxFwiaQO-JDd_a-qwwdOFsKmCBeBmYJoGwY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e4a05a6ac1f4983cc179d907727ee7c1","Raw":{"response_type":"id_token token","client_id":"angular","state":"_g286TLCqZdxFwiaQO-JDd_a-qwwdOFsKmCBeBmYJoGwY","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"_g286TLCqZdxFwiaQO-JDd_a-qwwdOFsKmCBeBmYJoGwY"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:41:57.401 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:41:57.404 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:41:57.404 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:41:57.405 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:41:57.406 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:41:57.411 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:41:57.412 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:41:57.418 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****iFRA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AfiQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000007","TimeStamp":"2019-12-14T18:41:57.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:41:57.418 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"_g286TLCqZdxFwiaQO-JDd_a-qwwdOFsKmCBeBmYJoGwY","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:42:00.251 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:42:00.252 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:42:00.252 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:42:00.252 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:42:00.252 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:42:00.252 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:42:00.252 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:42:00.252 +00:00 [DBG] Start discovery request
2019-12-14 18:42:00.263 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:42:00.263 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:42:00.263 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:42:00.263 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:42:00.263 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:42:00.264 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:42:00.264 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:42:00.264 +00:00 [DBG] Start key discovery request
2019-12-14 18:42:01.187 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:42:01.187 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:42:01.187 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:42:01.187 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:42:01.189 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:42:01.189 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:42:01.189 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:42:01.189 +00:00 [DBG] Start discovery request
2019-12-14 18:42:01.209 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:42:01.210 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:42:01.210 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:42:01.211 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:42:01.211 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:42:01.212 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:42:01.212 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:42:01.212 +00:00 [DBG] Start key discovery request
2019-12-14 18:46:24.489 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:24.489 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:46:24.490 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:24.490 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:24.490 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:46:24.491 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:46:24.492 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:46:24.492 +00:00 [DBG] Start discovery request
2019-12-14 18:46:24.508 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:24.508 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:46:24.509 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:24.509 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:24.510 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:46:24.510 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:46:24.511 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:46:24.511 +00:00 [DBG] Start key discovery request
2019-12-14 18:46:24.545 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:46:24.547 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:46:24.547 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:46:24.547 +00:00 [DBG] Start authorize request
2019-12-14 18:46:24.548 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:46:24.548 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:46:24.548 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:24.549 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:46:24.554 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"rjt21jatqxtwEmxDzxrd-cddn3hO-RcvvNuktrkgJciTg","UiLocales":null,"Nonce":"rjt21jatqxtwEmxDzxrd-cddn3hO-RcvvNuktrkgJciTg","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e4a05a6ac1f4983cc179d907727ee7c1","Raw":{"response_type":"id_token token","client_id":"angular","state":"rjt21jatqxtwEmxDzxrd-cddn3hO-RcvvNuktrkgJciTg","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"rjt21jatqxtwEmxDzxrd-cddn3hO-RcvvNuktrkgJciTg"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:46:24.699 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:46:24.699 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:46:24.699 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:46:24.700 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:46:24.700 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:46:24.705 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:46:24.705 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:46:24.710 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****HxMw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zexQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000008","TimeStamp":"2019-12-14T18:46:24.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:46:24.719 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"rjt21jatqxtwEmxDzxrd-cddn3hO-RcvvNuktrkgJciTg","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:46:28.522 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:28.522 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:46:28.522 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:28.522 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:28.523 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:46:28.523 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:46:28.523 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:46:28.524 +00:00 [DBG] Start discovery request
2019-12-14 18:46:28.546 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:28.547 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:46:28.547 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:28.547 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:28.548 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:46:28.548 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:46:28.549 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:46:28.549 +00:00 [DBG] Start key discovery request
2019-12-14 18:46:31.774 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:31.774 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:46:31.775 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:31.775 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:31.776 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:46:31.776 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:46:31.777 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:46:31.777 +00:00 [DBG] Start discovery request
2019-12-14 18:46:31.796 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:31.796 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:46:31.796 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:31.797 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:31.797 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:46:31.798 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:46:31.798 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:46:31.798 +00:00 [DBG] Start key discovery request
2019-12-14 18:46:35.034 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-14 18:46:35.037 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-14 18:46:35.037 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-14 18:46:35.050 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:46:35.061 +00:00 [DBG] Start end session request validation
2019-12-14 18:46:35.071 +00:00 [DBG] Start identity token validation
2019-12-14 18:46:35.080 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:35.081 +00:00 [DBG] Client found: angular / SPA Client
2019-12-14 18:46:35.099 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-14 18:46:35.101 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576349184,"exp":1576349484,"iss":"http://localhost:5000","aud":"angular","nonce":"rjt21jatqxtwEmxDzxrd-cddn3hO-RcvvNuktrkgJciTg","iat":1576349184,"at_hash":"MYJ5s6nAXiQBdSPArzcXqQ","sid":"e4a05a6ac1f4983cc179d907727ee7c1","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576348802,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-14 18:46:35.105 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-14 18:46:35.106 +00:00 [ERR] Error processing end session request Invalid request
2019-12-14 18:46:35.159 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 18:46:35.161 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 18:46:35.162 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 18:46:35.163 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0OK1KBBL8:0000000A","TimeStamp":"2019-12-14T18:46:35.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 18:46:35.358 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 18:46:35.362 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 18:46:35.362 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 18:46:35.374 +00:00 [DBG] Processing signout callback request
2019-12-14 18:46:35.401 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:35.401 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 18:46:35.401 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 18:46:35.402 +00:00 [INF] Successful signout callback.
2019-12-14 18:46:35.402 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 18:46:35.402 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 18:46:51.268 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:51.268 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:46:51.269 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:51.270 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:51.270 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:46:51.270 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:46:51.270 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:46:51.270 +00:00 [DBG] Start discovery request
2019-12-14 18:46:51.283 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:51.283 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:46:51.284 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:51.284 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:51.284 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:46:51.285 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:46:51.286 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:46:51.286 +00:00 [DBG] Start key discovery request
2019-12-14 18:46:51.327 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:46:51.328 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:46:51.328 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:46:51.328 +00:00 [DBG] Start authorize request
2019-12-14 18:46:51.328 +00:00 [DBG] No user present in authorize request
2019-12-14 18:46:51.329 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:46:51.329 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:51.329 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:46:51.329 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"yoIVv9UhlNf3GsbFfeicCX5za9SGl_dyIfPzCgqDExBls","UiLocales":null,"Nonce":"yoIVv9UhlNf3GsbFfeicCX5za9SGl_dyIfPzCgqDExBls","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"yoIVv9UhlNf3GsbFfeicCX5za9SGl_dyIfPzCgqDExBls","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"yoIVv9UhlNf3GsbFfeicCX5za9SGl_dyIfPzCgqDExBls"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:46:51.329 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 18:46:51.344 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:46:51.345 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:51.347 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:46:51.348 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:56.269 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:56.269 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:46:56.269 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:56.269 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:56.269 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:46:56.270 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:46:56.270 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:46:56.270 +00:00 [DBG] Start discovery request
2019-12-14 18:46:56.284 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:46:56.285 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:46:56.285 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:46:56.285 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:46:56.286 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:46:56.287 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:46:56.287 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:46:56.287 +00:00 [DBG] Start key discovery request
2019-12-14 18:46:56.318 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:46:56.319 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:46:56.319 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:46:56.319 +00:00 [DBG] Start authorize request
2019-12-14 18:46:56.320 +00:00 [DBG] No user present in authorize request
2019-12-14 18:46:56.320 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:46:56.320 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:56.320 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:46:56.321 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N","UiLocales":null,"Nonce":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:46:56.321 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 18:46:56.337 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:46:56.337 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:46:56.338 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:46:56.338 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:47:00.279 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:47:00.280 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 18:47:00.361 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:47:00.384 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:47:00.384 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:47:00.442 +00:00 [DBG] Augmenting SignInContext
2019-12-14 18:47:00.443 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 18:47:00.443 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 18:47:00.448 +00:00 [DBG] Adding auth_time claim with value: 1576349220
2019-12-14 18:47:00.449 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 18:47:00.457 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000010","TimeStamp":"2019-12-14T18:47:00.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 18:47:00.458 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:47:00.470 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 18:47:00.472 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 18:47:00.472 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 18:47:00.472 +00:00 [DBG] Start authorize callback request
2019-12-14 18:47:00.489 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:47:00.490 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:47:00.490 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:47:00.492 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:47:00.493 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N","UiLocales":null,"Nonce":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f4208f09ec737fdf217948de78e1f909","Raw":{"response_type":"id_token token","client_id":"angular","state":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:47:00.506 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:47:00.506 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:47:00.506 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:47:00.506 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:47:00.508 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:47:00.512 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:47:00.513 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:47:00.516 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****1M_g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1L7g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000011","TimeStamp":"2019-12-14T18:47:00.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:47:00.516 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"IaRgpxd7wj9lEY5w86JrR4yD7wMIzy62Ny2tAMyt2I-0N","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:47:00.517 +00:00 [DBG] Augmenting SignInContext
2019-12-14 18:47:00.518 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 18:47:06.172 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:47:06.172 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:47:06.172 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:47:06.172 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:47:06.172 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:47:06.173 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:47:06.173 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:47:06.173 +00:00 [DBG] Start discovery request
2019-12-14 18:47:06.186 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:47:06.186 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:47:06.188 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:47:06.189 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:47:06.190 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:47:06.191 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:47:06.192 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:47:06.193 +00:00 [DBG] Start key discovery request
2019-12-14 18:47:06.231 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:47:06.233 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:47:06.233 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:47:06.234 +00:00 [DBG] Start authorize request
2019-12-14 18:47:06.234 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:47:06.234 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:47:06.235 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:47:06.236 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:47:06.236 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"1YW9A5-IOKysjI6aMxMBIW6Yu9eLirLaB2_W4WJ2p_UOO","UiLocales":null,"Nonce":"1YW9A5-IOKysjI6aMxMBIW6Yu9eLirLaB2_W4WJ2p_UOO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f4208f09ec737fdf217948de78e1f909","Raw":{"response_type":"id_token token","client_id":"angular","state":"1YW9A5-IOKysjI6aMxMBIW6Yu9eLirLaB2_W4WJ2p_UOO","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"1YW9A5-IOKysjI6aMxMBIW6Yu9eLirLaB2_W4WJ2p_UOO"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:47:06.261 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:47:06.264 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:47:06.264 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:47:06.267 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:47:06.268 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:47:06.271 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:47:06.276 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:47:06.280 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****otgQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9tzw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OK1KBBL8:00000012","TimeStamp":"2019-12-14T18:47:06.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:47:06.283 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"1YW9A5-IOKysjI6aMxMBIW6Yu9eLirLaB2_W4WJ2p_UOO","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:53:26.440 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 18:53:26.653 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 18:53:26.679 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 18:53:26.680 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 18:53:26.684 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 18:53:26.686 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 18:53:26.690 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 18:53:26.691 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 18:55:41.727 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:55:41.775 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:55:41.781 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:55:41.781 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:55:41.860 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 18:55:41.861 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 18:55:41.861 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 18:55:41.862 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 18:55:41.862 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 18:55:41.865 +00:00 [DBG] Error Url: /home/error
2019-12-14 18:55:41.865 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 18:55:41.900 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:55:42.144 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:55:42.146 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:55:42.154 +00:00 [DBG] Start discovery request
2019-12-14 18:55:42.283 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:55:42.284 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:55:42.284 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:55:42.284 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:55:42.286 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:55:42.288 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:55:42.288 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:55:42.297 +00:00 [DBG] Start key discovery request
2019-12-14 18:55:42.463 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:55:42.481 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:55:42.481 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:55:42.489 +00:00 [DBG] Start authorize request
2019-12-14 18:55:42.507 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:55:42.518 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:55:42.544 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:55:42.607 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:55:42.627 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"xV3TCsXK4EyD4db0G-8JTdZqPVENpzUZ7cJShckjB6ijJ","UiLocales":null,"Nonce":"xV3TCsXK4EyD4db0G-8JTdZqPVENpzUZ7cJShckjB6ijJ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f4208f09ec737fdf217948de78e1f909","Raw":{"response_type":"id_token token","client_id":"angular","state":"xV3TCsXK4EyD4db0G-8JTdZqPVENpzUZ7cJShckjB6ijJ","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"xV3TCsXK4EyD4db0G-8JTdZqPVENpzUZ7cJShckjB6ijJ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:55:43.984 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 18:55:44.019 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 18:55:44.071 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 18:55:44.081 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 18:55:44.129 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:55:44.273 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 18:55:44.275 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 18:55:44.319 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6WUg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****a40w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OSRP6CR0:00000001","TimeStamp":"2019-12-14T18:55:44.0000000Z","ProcessId":357,"LocalIpAddress":"::ffff:172.24.0.4:80","RemoteIpAddress":"::ffff:172.24.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 18:55:44.324 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"xV3TCsXK4EyD4db0G-8JTdZqPVENpzUZ7cJShckjB6ijJ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 18:58:31.462 +00:00 [WRN] No XML encryptor configured. Key {9a9ac568-cb2d-4fbe-b843-bc0d7760a020} may be persisted to storage in unencrypted form.
2019-12-14 18:58:32.542 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 18:58:32.621 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 18:58:32.681 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 18:58:32.684 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 18:58:32.686 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 18:58:32.699 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 18:58:32.703 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 18:58:32.706 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 18:58:48.170 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:58:48.229 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 18:58:48.237 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:58:48.238 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:58:48.320 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 18:58:48.320 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 18:58:48.322 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 18:58:48.324 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 18:58:48.325 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 18:58:48.325 +00:00 [DBG] Error Url: /home/error
2019-12-14 18:58:48.326 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 18:58:48.370 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 18:58:48.589 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 18:58:48.590 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 18:58:48.597 +00:00 [DBG] Start discovery request
2019-12-14 18:58:48.745 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 18:58:48.746 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 18:58:48.748 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 18:58:48.748 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 18:58:48.749 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 18:58:48.756 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 18:58:48.759 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 18:58:48.771 +00:00 [DBG] Start key discovery request
2019-12-14 18:58:48.831 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:58:48.832 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:58:48.838 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 18:58:48.855 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 18:58:48.855 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 18:58:48.863 +00:00 [DBG] Start authorize request
2019-12-14 18:58:48.876 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:58:48.884 +00:00 [DBG] No user present in authorize request
2019-12-14 18:58:48.893 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:58:48.923 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:58:49.011 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:58:49.036 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"g13deRnLeLngKhXEHgGiIeSkr7rLPoV2r5qfb3CUVcENa","UiLocales":null,"Nonce":"g13deRnLeLngKhXEHgGiIeSkr7rLPoV2r5qfb3CUVcENa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"g13deRnLeLngKhXEHgGiIeSkr7rLPoV2r5qfb3CUVcENa","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"g13deRnLeLngKhXEHgGiIeSkr7rLPoV2r5qfb3CUVcENa"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 18:58:49.081 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 18:58:49.095 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:58:49.096 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:58:49.405 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 18:58:49.406 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 18:58:49.406 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:58:49.407 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 18:58:49.414 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 18:58:49.573 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {d6ef92d6-4d83-4c43-b6c1-8458623105a8} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-14 19:00:39.984 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:00:39.984 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:00:39.985 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:00:39.985 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:00:39.986 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:00:39.988 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:00:39.988 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:00:39.989 +00:00 [DBG] Start discovery request
2019-12-14 19:00:40.034 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:00:40.041 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:00:40.041 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:00:40.043 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:00:40.046 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:00:40.058 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:00:40.060 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:00:40.062 +00:00 [DBG] Start key discovery request
2019-12-14 19:00:40.104 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:00:40.105 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:00:40.105 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:00:40.121 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:00:40.123 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:00:40.124 +00:00 [DBG] Start authorize request
2019-12-14 19:00:40.125 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:00:40.125 +00:00 [DBG] No user present in authorize request
2019-12-14 19:00:40.126 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:00:40.127 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:00:40.128 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:00:40.129 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"zG3bOLLW4pvxMzru67jvqrCrDNv2zdZgykuMsmg945izS","UiLocales":null,"Nonce":"zG3bOLLW4pvxMzru67jvqrCrDNv2zdZgykuMsmg945izS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"zG3bOLLW4pvxMzru67jvqrCrDNv2zdZgykuMsmg945izS","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"zG3bOLLW4pvxMzru67jvqrCrDNv2zdZgykuMsmg945izS"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:00:40.129 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:00:40.158 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:00:40.158 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:00:40.164 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:00:40.165 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:00:40.166 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:00:40.166 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:00:40.168 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:00:40.818 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:00:40.819 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:11.921 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:01:11.922 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:01:11.922 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:01:11.922 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:01:11.923 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:01:11.923 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:01:11.923 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:01:11.923 +00:00 [DBG] Start discovery request
2019-12-14 19:01:11.942 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:01:11.942 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:01:11.943 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:01:11.944 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:01:11.944 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:01:11.945 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:01:11.946 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:01:11.946 +00:00 [DBG] Start key discovery request
2019-12-14 19:01:11.970 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:11.988 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:11.988 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:01:11.992 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:01:11.993 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:01:11.993 +00:00 [DBG] Start authorize request
2019-12-14 19:01:11.994 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:11.994 +00:00 [DBG] No user present in authorize request
2019-12-14 19:01:11.995 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:01:11.995 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:01:11.996 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:01:11.996 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q","UiLocales":null,"Nonce":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:01:11.996 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:01:12.015 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:12.015 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:12.020 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:12.023 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:01:12.023 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:01:12.025 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:01:12.026 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:01:27.023 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:01:27.023 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 19:01:27.024 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:27.024 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:27.081 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:27.081 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:01:27.081 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:01:27.082 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:01:28.351 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:01:28.356 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 19:01:28.356 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 19:01:28.357 +00:00 [DBG] Adding auth_time claim with value: 1576350088
2019-12-14 19:01:28.364 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-14 19:01:28.379 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:01:28.489 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0OUJBCKP0:00000008","TimeStamp":"2019-12-14T19:01:28.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 19:01:28.492 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:01:28.527 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 19:01:28.529 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 19:01:28.529 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 19:01:28.539 +00:00 [DBG] Start authorize callback request
2019-12-14 19:01:28.546 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:01:28.546 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:01:28.546 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:01:28.547 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:01:28.547 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q","UiLocales":null,"Nonce":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2a3cb18083c5235d77db7aa493094b5","Raw":{"response_type":"id_token token","client_id":"angular","state":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:01:28.638 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:01:28.652 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:01:28.668 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:01:28.669 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:01:28.681 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:01:28.781 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:01:28.782 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:01:28.795 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Io7g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cmFA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OUJBCKP0:00000009","TimeStamp":"2019-12-14T19:01:28.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:01:28.798 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"qmKYZMwukPeQ88BDSPLLLD94eQFR6X7AcWaUvotcsmw8q","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:01:28.824 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:01:28.827 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:02:40.288 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:02:40.288 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:02:40.289 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:02:40.289 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:02:40.289 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:02:40.289 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:02:40.290 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:02:40.290 +00:00 [DBG] Start discovery request
2019-12-14 19:02:40.306 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:02:40.306 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:02:40.307 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:02:40.307 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:02:40.307 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:02:40.308 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:02:40.309 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:02:40.310 +00:00 [DBG] Start key discovery request
2019-12-14 19:02:40.368 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:02:40.369 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:02:40.369 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:02:40.369 +00:00 [DBG] Start authorize request
2019-12-14 19:02:40.369 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:02:40.369 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:02:40.369 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:02:40.370 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:02:40.370 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"j1Y6-FgHTocJBHdfbDndlugr9lz0ozUB1kfVSGbniWzv4","UiLocales":null,"Nonce":"j1Y6-FgHTocJBHdfbDndlugr9lz0ozUB1kfVSGbniWzv4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2a3cb18083c5235d77db7aa493094b5","Raw":{"response_type":"id_token token","client_id":"angular","state":"j1Y6-FgHTocJBHdfbDndlugr9lz0ozUB1kfVSGbniWzv4","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"j1Y6-FgHTocJBHdfbDndlugr9lz0ozUB1kfVSGbniWzv4"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:02:40.405 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:02:40.405 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:02:40.405 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:02:40.405 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:02:40.405 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:02:40.419 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:02:40.420 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:02:40.424 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ZMPg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vWuw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OUJBCKP0:0000000A","TimeStamp":"2019-12-14T19:02:40.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:02:40.430 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"j1Y6-FgHTocJBHdfbDndlugr9lz0ozUB1kfVSGbniWzv4","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:04:14.272 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:04:14.272 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:04:14.272 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:04:14.272 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:04:14.273 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:04:14.273 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:04:14.273 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:04:14.273 +00:00 [DBG] Start discovery request
2019-12-14 19:04:14.291 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:04:14.291 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:04:14.293 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:04:14.293 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:04:14.297 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:04:14.299 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:04:14.300 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:04:14.300 +00:00 [DBG] Start key discovery request
2019-12-14 19:04:14.337 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:04:14.339 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:04:14.339 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:04:14.339 +00:00 [DBG] Start authorize request
2019-12-14 19:04:14.339 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:04:14.340 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:04:14.340 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:04:14.340 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:04:14.341 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"LoOvvwQv5bpqSJ3xRH1pgO13Z1q71GDv5cG_lD8T9k8tK","UiLocales":null,"Nonce":"LoOvvwQv5bpqSJ3xRH1pgO13Z1q71GDv5cG_lD8T9k8tK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2a3cb18083c5235d77db7aa493094b5","Raw":{"response_type":"id_token token","client_id":"angular","state":"LoOvvwQv5bpqSJ3xRH1pgO13Z1q71GDv5cG_lD8T9k8tK","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"LoOvvwQv5bpqSJ3xRH1pgO13Z1q71GDv5cG_lD8T9k8tK"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:04:14.367 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:04:14.410 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:04:14.431 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:04:14.431 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:04:14.432 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:04:14.437 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:04:14.438 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:04:14.444 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****w8RQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_H4A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OUJBCKP0:0000000B","TimeStamp":"2019-12-14T19:04:14.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:04:14.445 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"LoOvvwQv5bpqSJ3xRH1pgO13Z1q71GDv5cG_lD8T9k8tK","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:04:50.974 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:04:50.974 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:04:50.975 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:04:50.975 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:04:50.975 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:04:50.975 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:04:50.975 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:04:50.975 +00:00 [DBG] Start discovery request
2019-12-14 19:04:51.003 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:04:51.003 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:04:51.004 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:04:51.004 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:04:51.004 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:04:51.005 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:04:51.005 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:04:51.006 +00:00 [DBG] Start key discovery request
2019-12-14 19:04:54.862 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:04:54.862 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:04:54.862 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:04:54.863 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:04:54.863 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:04:54.865 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:04:54.865 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:04:54.865 +00:00 [DBG] Start discovery request
2019-12-14 19:04:54.881 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:04:54.881 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:04:54.882 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:04:54.882 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:04:54.883 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:04:54.883 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:04:54.884 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:04:54.884 +00:00 [DBG] Start key discovery request
2019-12-14 19:07:17.154 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:07:17.154 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:07:17.154 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:07:17.155 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:07:17.155 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:07:17.156 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:07:17.156 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:07:17.156 +00:00 [DBG] Start discovery request
2019-12-14 19:07:17.186 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:07:17.186 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:07:17.186 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:07:17.186 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:07:17.187 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:07:17.187 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:07:17.187 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:07:17.187 +00:00 [DBG] Start key discovery request
2019-12-14 19:08:21.353 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:08:21.354 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:08:21.360 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:08:21.360 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:08:21.360 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:08:21.364 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:08:21.364 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:08:21.365 +00:00 [DBG] Start discovery request
2019-12-14 19:08:21.389 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:08:21.390 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:08:21.394 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:08:21.394 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:08:21.396 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:08:21.397 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:08:21.397 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:08:21.397 +00:00 [DBG] Start key discovery request
2019-12-14 19:08:21.444 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:08:21.445 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:08:21.445 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:08:21.445 +00:00 [DBG] Start authorize request
2019-12-14 19:08:21.445 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:08:21.445 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:08:21.445 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:08:21.446 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:08:21.446 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"6GxyG_GLjPYqFgC-fLHHC6S0OCyrO7ZeoKXnbjZ65rqtO","UiLocales":null,"Nonce":"6GxyG_GLjPYqFgC-fLHHC6S0OCyrO7ZeoKXnbjZ65rqtO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2a3cb18083c5235d77db7aa493094b5","Raw":{"response_type":"id_token token","client_id":"angular","state":"6GxyG_GLjPYqFgC-fLHHC6S0OCyrO7ZeoKXnbjZ65rqtO","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"6GxyG_GLjPYqFgC-fLHHC6S0OCyrO7ZeoKXnbjZ65rqtO"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:08:21.512 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:08:21.512 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:08:21.512 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:08:21.513 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:08:21.514 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:08:21.518 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:08:21.519 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:08:21.523 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****RZmA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****J47A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0OUJBCKP0:0000000C","TimeStamp":"2019-12-14T19:08:21.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:08:21.523 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"6GxyG_GLjPYqFgC-fLHHC6S0OCyrO7ZeoKXnbjZ65rqtO","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:08:31.314 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:08:31.315 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:08:31.316 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:08:31.316 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:08:31.316 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:08:31.316 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:08:31.316 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:08:31.316 +00:00 [DBG] Start discovery request
2019-12-14 19:08:31.338 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:08:31.338 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:08:31.338 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:08:31.338 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:08:31.338 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:08:31.339 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:08:31.339 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:08:31.339 +00:00 [DBG] Start key discovery request
2019-12-14 19:09:28.946 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 19:09:29.194 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 19:09:29.251 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 19:09:29.252 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 19:09:29.253 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 19:09:29.254 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 19:09:29.256 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 19:09:29.257 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 19:11:24.811 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:11:24.861 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:11:24.867 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:11:24.867 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:11:24.946 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 19:11:24.947 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 19:11:24.948 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 19:11:24.949 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 19:11:24.950 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 19:11:24.951 +00:00 [DBG] Error Url: /home/error
2019-12-14 19:11:24.953 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 19:11:24.988 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:11:25.199 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:11:25.200 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:11:25.208 +00:00 [DBG] Start discovery request
2019-12-14 19:11:25.349 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:11:25.352 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:11:25.353 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:11:25.356 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:11:25.361 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:11:25.364 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:11:25.365 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:11:25.376 +00:00 [DBG] Start key discovery request
2019-12-14 19:11:25.475 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:11:25.489 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:11:25.490 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:11:25.498 +00:00 [DBG] Start authorize request
2019-12-14 19:11:25.514 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:11:25.523 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:11:25.547 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:11:25.608 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:11:25.636 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"2TRAm1sWXzmy4yoIGba69i4lmDqO3KQ-x3nMBgy3LVqEX","UiLocales":null,"Nonce":"2TRAm1sWXzmy4yoIGba69i4lmDqO3KQ-x3nMBgy3LVqEX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e2a3cb18083c5235d77db7aa493094b5","Raw":{"response_type":"id_token token","client_id":"angular","state":"2TRAm1sWXzmy4yoIGba69i4lmDqO3KQ-x3nMBgy3LVqEX","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"2TRAm1sWXzmy4yoIGba69i4lmDqO3KQ-x3nMBgy3LVqEX"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:11:26.696 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:11:26.708 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:11:26.724 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:11:26.725 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:11:26.739 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:11:26.850 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:11:26.851 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:11:26.894 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_PsA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1e3w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000001","TimeStamp":"2019-12-14T19:11:26.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:11:26.898 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"2TRAm1sWXzmy4yoIGba69i4lmDqO3KQ-x3nMBgy3LVqEX","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:11:52.665 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:11:52.666 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:11:52.668 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:11:52.675 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:11:52.684 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:11:52.685 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:11:52.686 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:11:52.686 +00:00 [DBG] Start discovery request
2019-12-14 19:11:52.724 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:11:52.724 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:11:52.724 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:11:52.727 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:11:52.727 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:11:52.728 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:11:52.728 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:11:52.728 +00:00 [DBG] Start key discovery request
2019-12-14 19:12:48.888 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 19:12:48.894 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 19:12:48.895 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 19:12:50.397 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000005","TimeStamp":"2019-12-14T19:12:50.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 19:13:11.621 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 19:13:11.632 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 19:13:11.636 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 19:13:11.646 +00:00 [DBG] Processing signout callback request
2019-12-14 19:13:11.672 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:13:11.674 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 19:13:11.677 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 19:13:11.677 +00:00 [INF] Successful signout callback.
2019-12-14 19:13:11.677 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 19:13:11.677 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 19:13:35.080 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:13:35.080 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:13:35.081 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:13:35.081 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:13:35.081 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:13:35.081 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:13:35.082 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:13:35.082 +00:00 [DBG] Start discovery request
2019-12-14 19:13:35.101 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:13:35.101 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:13:35.102 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:13:35.102 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:13:35.102 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:13:35.103 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:13:35.103 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:13:35.103 +00:00 [DBG] Start key discovery request
2019-12-14 19:13:35.141 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:13:35.144 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:13:35.145 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:13:35.146 +00:00 [DBG] Start authorize request
2019-12-14 19:13:35.148 +00:00 [DBG] No user present in authorize request
2019-12-14 19:13:35.158 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:13:35.166 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:13:35.170 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:13:35.176 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"s3yIswR73IROgrkYUhKSgwyjsY8_RroMs1HYVkQ0C8MAm","UiLocales":null,"Nonce":"s3yIswR73IROgrkYUhKSgwyjsY8_RroMs1HYVkQ0C8MAm","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"s3yIswR73IROgrkYUhKSgwyjsY8_RroMs1HYVkQ0C8MAm","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"s3yIswR73IROgrkYUhKSgwyjsY8_RroMs1HYVkQ0C8MAm"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:13:35.177 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:13:35.247 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:13:35.247 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:13:35.248 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:13:35.252 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:14:28.422 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:14:28.422 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:14:28.422 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:14:28.422 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:14:28.423 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:14:28.423 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:14:28.423 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:14:28.423 +00:00 [DBG] Start discovery request
2019-12-14 19:14:28.435 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:14:28.435 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:14:28.436 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:14:28.436 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:14:28.437 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:14:28.438 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:14:28.438 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:14:28.438 +00:00 [DBG] Start key discovery request
2019-12-14 19:14:28.475 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:14:28.477 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:14:28.477 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:14:28.478 +00:00 [DBG] Start authorize request
2019-12-14 19:14:28.478 +00:00 [DBG] No user present in authorize request
2019-12-14 19:14:28.478 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:14:28.479 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:14:28.479 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:14:28.480 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok","UiLocales":null,"Nonce":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:14:28.480 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:14:28.501 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:14:28.502 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:14:28.502 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:14:28.503 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:14:34.344 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:14:34.344 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 19:14:34.403 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:14:34.403 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:14:34.404 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:14:34.825 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:14:34.830 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 19:14:34.830 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 19:14:34.830 +00:00 [DBG] Adding auth_time claim with value: 1576350874
2019-12-14 19:14:34.843 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:14:34.882 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:0000000F","TimeStamp":"2019-12-14T19:14:34.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 19:14:34.885 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:14:34.910 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 19:14:34.915 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 19:14:34.915 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 19:14:34.929 +00:00 [DBG] Start authorize callback request
2019-12-14 19:14:34.939 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:14:34.939 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:14:34.939 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:14:34.940 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:14:34.940 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok","UiLocales":null,"Nonce":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"89a2859eeedacd257d820a8c31a5ba62","Raw":{"response_type":"id_token token","client_id":"angular","state":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:14:34.954 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:14:34.956 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:14:34.958 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:14:34.959 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:14:34.961 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:14:34.970 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:14:34.972 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:14:34.978 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****hJYw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7O2A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000010","TimeStamp":"2019-12-14T19:14:34.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:14:34.978 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"QtUnG-zohqQGqfWbSf3xvdytkByTiZh8KbTe0_fLGtLok","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:14:34.990 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:14:34.991 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:15:03.213 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:15:03.213 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:15:03.213 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:15:03.214 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:15:03.215 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:15:03.215 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:15:03.216 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:15:03.216 +00:00 [DBG] Start discovery request
2019-12-14 19:15:03.232 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:15:03.232 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:15:03.232 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:15:03.232 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:15:03.232 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:15:03.232 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:15:03.233 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:15:03.233 +00:00 [DBG] Start key discovery request
2019-12-14 19:15:04.799 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:15:04.800 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:15:04.800 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:15:04.800 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:15:04.800 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:15:04.800 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:15:04.801 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:15:04.801 +00:00 [DBG] Start discovery request
2019-12-14 19:15:04.838 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:15:04.839 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:15:04.840 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:15:04.840 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:15:04.841 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:15:04.841 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:15:04.842 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:15:04.842 +00:00 [DBG] Start key discovery request
2019-12-14 19:16:56.913 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 19:16:56.913 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 19:16:56.915 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 19:16:56.916 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000011","TimeStamp":"2019-12-14T19:16:56.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 19:16:57.050 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 19:16:57.052 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 19:16:57.065 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 19:16:57.065 +00:00 [DBG] Processing signout callback request
2019-12-14 19:16:57.065 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:16:57.066 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 19:16:57.066 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 19:16:57.066 +00:00 [INF] Successful signout callback.
2019-12-14 19:16:57.066 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 19:16:57.066 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 19:17:27.266 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:27.267 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:17:27.267 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:27.267 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:27.269 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:17:27.270 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:17:27.270 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:17:27.271 +00:00 [DBG] Start discovery request
2019-12-14 19:17:27.285 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:27.285 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:17:27.286 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:27.287 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:27.287 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:17:27.288 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:17:27.289 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:17:27.289 +00:00 [DBG] Start key discovery request
2019-12-14 19:17:28.445 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:28.446 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:17:28.447 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:28.447 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:28.447 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:17:28.448 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:17:28.448 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:17:28.449 +00:00 [DBG] Start discovery request
2019-12-14 19:17:28.462 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:28.462 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:17:28.462 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:28.462 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:28.463 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:17:28.463 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:17:28.463 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:17:28.463 +00:00 [DBG] Start key discovery request
2019-12-14 19:17:38.616 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:38.616 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:17:38.616 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:38.616 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:38.617 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:17:38.617 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:17:38.617 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:17:38.617 +00:00 [DBG] Start discovery request
2019-12-14 19:17:38.630 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:38.630 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:17:38.631 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:38.631 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:38.632 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:17:38.633 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:17:38.633 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:17:38.633 +00:00 [DBG] Start key discovery request
2019-12-14 19:17:39.798 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:39.798 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:17:39.799 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:39.799 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:39.799 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:17:39.800 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:17:39.800 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:17:39.800 +00:00 [DBG] Start discovery request
2019-12-14 19:17:39.812 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:39.813 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:17:39.813 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:39.814 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:39.814 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:17:39.815 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:17:39.815 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:17:39.816 +00:00 [DBG] Start key discovery request
2019-12-14 19:17:47.838 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:47.838 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:17:47.838 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:47.838 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:47.838 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:17:47.838 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:17:47.839 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:17:47.839 +00:00 [DBG] Start discovery request
2019-12-14 19:17:47.856 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:17:47.857 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:17:47.857 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:17:47.857 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:17:47.857 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:17:47.857 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:17:47.858 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:17:47.858 +00:00 [DBG] Start key discovery request
2019-12-14 19:17:47.903 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:17:47.905 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:17:47.905 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:17:47.905 +00:00 [DBG] Start authorize request
2019-12-14 19:17:47.905 +00:00 [DBG] No user present in authorize request
2019-12-14 19:17:47.905 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:17:47.905 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:17:47.906 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:17:47.906 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q","UiLocales":null,"Nonce":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:17:47.906 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:17:47.929 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:17:47.930 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:17:47.932 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:17:47.932 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:18:01.305 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:18:01.305 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 19:18:01.310 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:18:01.311 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:18:01.312 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:18:01.454 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:18:01.454 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 19:18:01.454 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 19:18:01.455 +00:00 [DBG] Adding auth_time claim with value: 1576351081
2019-12-14 19:18:01.456 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:18:01.467 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000016","TimeStamp":"2019-12-14T19:18:01.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 19:18:01.467 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:18:01.475 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 19:18:01.477 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 19:18:01.477 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 19:18:01.480 +00:00 [DBG] Start authorize callback request
2019-12-14 19:18:01.481 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:18:01.481 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:18:01.481 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:18:01.482 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:18:01.482 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q","UiLocales":null,"Nonce":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb76b2ae55db845ed07deda8c2f5dff2","Raw":{"response_type":"id_token token","client_id":"angular","state":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:18:01.503 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:18:01.503 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:18:01.503 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:18:01.503 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:18:01.503 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:18:01.507 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:18:01.508 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:18:01.511 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****t7og","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2-TA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000017","TimeStamp":"2019-12-14T19:18:01.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:18:01.511 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"u_opk9wOwhX1OHYGWQugJcMEHh_iZzzJ91Vc34m6zTp0q","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:18:01.513 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:18:01.514 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:18:05.486 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:18:05.486 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:18:05.487 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:18:05.487 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:18:05.488 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:18:05.489 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:18:05.489 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:18:05.490 +00:00 [DBG] Start discovery request
2019-12-14 19:18:05.507 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:18:05.508 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:18:05.508 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:18:05.509 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:18:05.509 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:18:05.510 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:18:05.510 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:18:05.510 +00:00 [DBG] Start key discovery request
2019-12-14 19:18:09.310 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:18:09.311 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:18:09.311 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:18:09.311 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:18:09.312 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:18:09.312 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:18:09.312 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:18:09.312 +00:00 [DBG] Start discovery request
2019-12-14 19:18:09.347 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:18:09.347 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:18:09.348 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:18:09.348 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:18:09.348 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:18:09.349 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:18:09.350 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:18:09.350 +00:00 [DBG] Start key discovery request
2019-12-14 19:20:36.226 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:20:36.226 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:20:36.226 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:20:36.227 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:20:36.228 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:20:36.228 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:20:36.228 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:20:36.229 +00:00 [DBG] Start discovery request
2019-12-14 19:20:36.240 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:20:36.241 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:20:36.241 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:20:36.242 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:20:36.243 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:20:36.243 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:20:36.243 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:20:36.244 +00:00 [DBG] Start key discovery request
2019-12-14 19:20:36.274 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:20:36.275 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:20:36.276 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:20:36.283 +00:00 [DBG] Start authorize request
2019-12-14 19:20:36.284 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:20:36.284 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:20:36.284 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:20:36.285 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:20:36.285 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"SK3DdLtODldqP0wY2S8vOPwvXmM7lv3rqyaryqpL9BJ7P","UiLocales":null,"Nonce":"SK3DdLtODldqP0wY2S8vOPwvXmM7lv3rqyaryqpL9BJ7P","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb76b2ae55db845ed07deda8c2f5dff2","Raw":{"response_type":"id_token token","client_id":"angular","state":"SK3DdLtODldqP0wY2S8vOPwvXmM7lv3rqyaryqpL9BJ7P","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"SK3DdLtODldqP0wY2S8vOPwvXmM7lv3rqyaryqpL9BJ7P"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:20:36.296 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:20:36.296 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:20:36.296 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:20:36.296 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:20:36.297 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:20:36.302 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:20:36.309 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:20:36.313 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Sb9A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****oflA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000018","TimeStamp":"2019-12-14T19:20:36.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:20:36.314 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"SK3DdLtODldqP0wY2S8vOPwvXmM7lv3rqyaryqpL9BJ7P","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:22:20.586 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:20.587 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:20.588 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:20.588 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:20.588 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:20.590 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:20.590 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:20.592 +00:00 [DBG] Start discovery request
2019-12-14 19:22:20.608 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:20.608 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:20.609 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:20.609 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:20.609 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:20.610 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:20.610 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:20.610 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:21.614 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:21.615 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:21.615 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:21.615 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:21.616 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:21.617 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:21.617 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:21.617 +00:00 [DBG] Start discovery request
2019-12-14 19:22:21.645 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:21.646 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:21.647 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:21.647 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:21.647 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:21.648 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:21.648 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:21.649 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:32.886 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:32.886 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:32.887 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:32.887 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:32.888 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:32.888 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:32.889 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:32.889 +00:00 [DBG] Start discovery request
2019-12-14 19:22:32.903 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:32.903 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:32.903 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:32.903 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:32.904 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:32.904 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:32.904 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:32.904 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:35.302 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:35.302 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:35.302 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:35.303 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:35.304 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:35.306 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:35.306 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:35.307 +00:00 [DBG] Start discovery request
2019-12-14 19:22:35.324 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:35.325 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:35.325 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:35.325 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:35.325 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:35.326 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:35.326 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:35.326 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:36.061 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:36.061 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:36.061 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:36.061 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:36.061 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:36.062 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:36.062 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:36.062 +00:00 [DBG] Start discovery request
2019-12-14 19:22:36.073 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:36.074 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:36.074 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:36.074 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:36.075 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:36.075 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:36.076 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:36.076 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:36.613 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:36.614 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:36.614 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:36.615 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:36.615 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:36.616 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:36.616 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:36.616 +00:00 [DBG] Start discovery request
2019-12-14 19:22:36.627 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:36.627 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:36.628 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:36.628 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:36.629 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:36.629 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:36.629 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:36.629 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:37.164 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:37.165 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:37.165 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:37.166 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:37.166 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:37.167 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:37.167 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:37.168 +00:00 [DBG] Start discovery request
2019-12-14 19:22:37.178 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:37.178 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:37.179 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:37.179 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:37.180 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:37.180 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:37.181 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:37.181 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:37.846 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:37.846 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:37.848 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:37.849 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:37.850 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:37.852 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:37.853 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:37.853 +00:00 [DBG] Start discovery request
2019-12-14 19:22:37.869 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:37.870 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:37.871 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:37.871 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:37.872 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:37.872 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:37.873 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:37.873 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:38.076 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:38.078 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:38.079 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:38.079 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:38.080 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:38.080 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:38.081 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:38.081 +00:00 [DBG] Start discovery request
2019-12-14 19:22:38.095 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:38.096 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:38.096 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:38.096 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:38.097 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:38.097 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:38.098 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:38.098 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:45.589 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:45.590 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:45.590 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:45.590 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:45.590 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:45.591 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:45.591 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:45.591 +00:00 [DBG] Start discovery request
2019-12-14 19:22:45.605 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:45.606 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:45.606 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:45.606 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:45.607 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:45.607 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:45.607 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:45.607 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:45.692 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:22:45.718 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:22:45.719 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:22:45.719 +00:00 [DBG] Start authorize request
2019-12-14 19:22:45.720 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:22:45.720 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:22:45.720 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:22:45.720 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:22:45.721 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ekFz98L8iHUZmEDE66iWi9l3Dj7Cx8u9zsCYMiG5cOSKo","UiLocales":null,"Nonce":"ekFz98L8iHUZmEDE66iWi9l3Dj7Cx8u9zsCYMiG5cOSKo","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb76b2ae55db845ed07deda8c2f5dff2","Raw":{"response_type":"id_token token","client_id":"angular","state":"ekFz98L8iHUZmEDE66iWi9l3Dj7Cx8u9zsCYMiG5cOSKo","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ekFz98L8iHUZmEDE66iWi9l3Dj7Cx8u9zsCYMiG5cOSKo"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:22:45.775 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:22:45.778 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:22:45.778 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:22:45.778 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:22:45.779 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:22:45.782 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:22:45.808 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:22:45.812 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****yXqw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****k3NQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:00000019","TimeStamp":"2019-12-14T19:22:45.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:22:45.813 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"ekFz98L8iHUZmEDE66iWi9l3Dj7Cx8u9zsCYMiG5cOSKo","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:22:47.378 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:47.379 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:47.379 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:47.379 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:47.379 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:47.380 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:47.380 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:47.380 +00:00 [DBG] Start discovery request
2019-12-14 19:22:47.436 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:47.436 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:47.437 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:47.437 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:47.437 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:47.437 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:47.438 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:47.438 +00:00 [DBG] Start key discovery request
2019-12-14 19:22:49.527 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:49.527 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:22:49.528 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:49.528 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:49.529 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:22:49.529 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:22:49.529 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:22:49.529 +00:00 [DBG] Start discovery request
2019-12-14 19:22:49.554 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:22:49.555 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:22:49.556 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:22:49.556 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:22:49.557 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:22:49.558 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:22:49.558 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:22:49.559 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:28.567 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:28.567 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:28.567 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:28.567 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:28.567 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:28.568 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:28.568 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:28.568 +00:00 [DBG] Start discovery request
2019-12-14 19:24:28.583 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:28.584 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:28.584 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:28.584 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:28.584 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:28.585 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:28.585 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:28.585 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:29.453 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:29.453 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:29.453 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:29.453 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:29.454 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:29.454 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:29.454 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:29.454 +00:00 [DBG] Start discovery request
2019-12-14 19:24:29.471 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:29.472 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:29.473 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:29.474 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:29.474 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:29.475 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:29.475 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:29.476 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:29.999 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:29.999 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:30.001 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.002 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.003 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:30.004 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:30.005 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:30.006 +00:00 [DBG] Start discovery request
2019-12-14 19:24:30.022 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.022 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:30.023 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.023 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.025 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:30.026 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:30.026 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:30.026 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:30.197 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.199 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:30.199 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.200 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.200 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:30.201 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:30.201 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:30.202 +00:00 [DBG] Start discovery request
2019-12-14 19:24:30.216 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.216 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:30.217 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.217 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.217 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:30.218 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:30.218 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:30.219 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:30.372 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.373 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:30.373 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.374 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.374 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:30.375 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:30.375 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:30.375 +00:00 [DBG] Start discovery request
2019-12-14 19:24:30.386 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.386 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:30.387 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.387 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.387 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:30.388 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:30.388 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:30.388 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:30.556 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.556 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:30.557 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.557 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.558 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:30.558 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:30.559 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:30.559 +00:00 [DBG] Start discovery request
2019-12-14 19:24:30.571 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.571 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:30.572 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.572 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.572 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:30.573 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:30.573 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:30.573 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:30.780 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.781 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:30.781 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.782 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.782 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:30.783 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:30.783 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:30.784 +00:00 [DBG] Start discovery request
2019-12-14 19:24:30.802 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:30.802 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:30.803 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:30.803 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:30.804 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:30.805 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:30.805 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:30.806 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:38.871 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:38.871 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:38.871 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:38.871 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:38.872 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:38.872 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:38.872 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:38.872 +00:00 [DBG] Start discovery request
2019-12-14 19:24:38.888 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:38.889 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:38.889 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:38.889 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:38.889 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:38.890 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:38.891 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:38.891 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:39.494 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:39.494 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:39.495 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:39.495 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:39.495 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:39.496 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:39.496 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:39.496 +00:00 [DBG] Start discovery request
2019-12-14 19:24:39.509 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:39.509 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:39.509 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:39.509 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:39.510 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:39.510 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:39.510 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:39.511 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:39.935 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:39.935 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:39.936 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:39.936 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:39.936 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:39.936 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:39.937 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:39.937 +00:00 [DBG] Start discovery request
2019-12-14 19:24:39.950 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:39.951 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:39.951 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:39.951 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:39.952 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:39.953 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:39.953 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:39.954 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:40.284 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.285 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:40.286 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.286 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.287 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:40.288 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:40.288 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:40.288 +00:00 [DBG] Start discovery request
2019-12-14 19:24:40.305 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.306 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:40.306 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.306 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.307 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:40.308 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:40.308 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:40.308 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:40.452 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.453 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:40.453 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.453 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.454 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:40.455 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:40.455 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:40.455 +00:00 [DBG] Start discovery request
2019-12-14 19:24:40.474 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.474 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:40.475 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.475 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.475 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:40.475 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:40.476 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:40.476 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:40.637 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.637 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:40.637 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.638 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.638 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:40.639 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:40.639 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:40.639 +00:00 [DBG] Start discovery request
2019-12-14 19:24:40.667 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.669 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:40.672 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.672 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.677 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:40.686 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:40.687 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:40.688 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:40.877 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.877 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:40.878 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.878 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.878 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:40.879 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:40.879 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:40.879 +00:00 [DBG] Start discovery request
2019-12-14 19:24:40.892 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:40.892 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:40.893 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:40.893 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:40.894 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:40.895 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:40.895 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:40.895 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:41.070 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:41.071 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:41.071 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:41.072 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:41.072 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:41.073 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:41.073 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:41.073 +00:00 [DBG] Start discovery request
2019-12-14 19:24:41.087 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:41.088 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:41.088 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:41.088 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:41.088 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:41.089 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:41.089 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:41.089 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:41.277 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:41.277 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:41.277 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:41.278 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:41.278 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:41.279 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:41.279 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:41.279 +00:00 [DBG] Start discovery request
2019-12-14 19:24:41.291 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:41.292 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:41.292 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:41.293 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:41.294 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:41.294 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:41.295 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:41.295 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:41.725 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:41.726 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:41.726 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:41.727 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:41.728 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:41.729 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:41.730 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:41.730 +00:00 [DBG] Start discovery request
2019-12-14 19:24:41.749 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:41.750 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:41.750 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:41.750 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:41.750 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:41.751 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:41.751 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:41.751 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:42.501 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:42.502 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:42.502 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:42.502 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:42.503 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:42.503 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:42.504 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:42.504 +00:00 [DBG] Start discovery request
2019-12-14 19:24:42.516 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:42.516 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:42.516 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:42.516 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:42.517 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:42.517 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:42.517 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:42.518 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:43.261 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:43.261 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:43.261 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:43.262 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:43.262 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:43.263 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:43.263 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:43.264 +00:00 [DBG] Start discovery request
2019-12-14 19:24:43.281 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:43.281 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:43.282 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:43.282 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:43.282 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:43.283 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:43.283 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:43.284 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:46.229 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:46.229 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:46.230 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:46.230 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:46.231 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:46.231 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:46.232 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:46.232 +00:00 [DBG] Start discovery request
2019-12-14 19:24:46.243 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:46.244 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:46.244 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:46.245 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:46.245 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:46.245 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:46.246 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:46.246 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:46.266 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:24:46.268 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:24:46.269 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:24:46.269 +00:00 [DBG] Start authorize request
2019-12-14 19:24:46.269 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:24:46.269 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:24:46.269 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:24:46.270 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:24:46.270 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"dFz7WVxBN9Pjb417dG9AMUJohB0t1wBu90nRQyk2XIvs1","UiLocales":null,"Nonce":"dFz7WVxBN9Pjb417dG9AMUJohB0t1wBu90nRQyk2XIvs1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fb76b2ae55db845ed07deda8c2f5dff2","Raw":{"response_type":"id_token token","client_id":"angular","state":"dFz7WVxBN9Pjb417dG9AMUJohB0t1wBu90nRQyk2XIvs1","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"dFz7WVxBN9Pjb417dG9AMUJohB0t1wBu90nRQyk2XIvs1"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:24:46.302 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:24:46.302 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:24:46.302 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:24:46.303 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:24:46.303 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:24:46.307 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:24:46.307 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:24:46.310 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****59bw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pPOw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0P5KR3IOH:0000001A","TimeStamp":"2019-12-14T19:24:46.0000000Z","ProcessId":359,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:24:46.311 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"dFz7WVxBN9Pjb417dG9AMUJohB0t1wBu90nRQyk2XIvs1","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:24:49.047 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:49.047 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:49.047 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:49.047 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:49.048 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:49.048 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:49.048 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:49.049 +00:00 [DBG] Start discovery request
2019-12-14 19:24:49.068 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:49.069 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:49.070 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:49.070 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:49.071 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:49.071 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:49.071 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:49.071 +00:00 [DBG] Start key discovery request
2019-12-14 19:24:51.487 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:51.488 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:24:51.488 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:51.488 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:51.488 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:24:51.489 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:24:51.489 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:24:51.489 +00:00 [DBG] Start discovery request
2019-12-14 19:24:51.513 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:24:51.514 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:24:51.516 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:24:51.517 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:24:51.518 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:24:51.519 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:24:51.520 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:24:51.520 +00:00 [DBG] Start key discovery request
2019-12-14 19:31:31.068 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 19:31:31.185 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 19:31:31.225 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 19:31:31.227 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 19:31:31.231 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 19:31:31.232 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 19:31:31.235 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 19:31:31.239 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 19:32:16.860 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:32:16.921 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:32:16.930 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:32:16.931 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:32:17.000 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 19:32:17.001 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 19:32:17.002 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 19:32:17.003 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 19:32:17.004 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 19:32:17.005 +00:00 [DBG] Error Url: /home/error
2019-12-14 19:32:17.006 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 19:32:17.041 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:32:17.267 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:32:17.268 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:32:17.275 +00:00 [DBG] Start discovery request
2019-12-14 19:32:17.372 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:32:17.373 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:32:17.377 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:32:17.382 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:32:17.384 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:32:17.394 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:32:17.395 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:32:17.426 +00:00 [DBG] Start key discovery request
2019-12-14 19:32:17.454 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:32:17.455 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:32:17.456 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:32:17.456 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:32:17.456 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:32:17.462 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:32:17.463 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:32:17.463 +00:00 [DBG] Start discovery request
2019-12-14 19:32:17.516 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:32:17.516 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:32:17.517 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:32:17.517 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:32:17.517 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:32:17.518 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:32:17.518 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:32:17.518 +00:00 [DBG] Start key discovery request
2019-12-14 19:32:17.976 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:32:17.977 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:32:17.977 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:32:17.977 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:32:17.977 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:32:17.978 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:32:17.978 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:32:17.978 +00:00 [DBG] Start discovery request
2019-12-14 19:32:17.996 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:32:17.996 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:32:17.996 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:32:17.996 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:32:17.997 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:32:17.997 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:32:17.997 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:32:17.997 +00:00 [DBG] Start key discovery request
2019-12-14 19:33:06.118 +00:00 [ERR] Exception reading protected message
System.Exception: Illegal base64url string!
   at IdentityModel.Base64Url.Decode(String arg) in C:\local\identity\model\IdentityModel2\src\Base64Url.cs:line 46
   at IdentityServer4.Stores.ProtectedDataMessageStore`1.ReadAsync(String value) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Stores\Default\ProtectedDataMessageStore.cs:line 54
2019-12-14 19:33:09.588 +00:00 [ERR] Exception reading protected message
System.Exception: Illegal base64url string!
   at IdentityModel.Base64Url.Decode(String arg) in C:\local\identity\model\IdentityModel2\src\Base64Url.cs:line 46
   at IdentityServer4.Stores.ProtectedDataMessageStore`1.ReadAsync(String value) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Stores\Default\ProtectedDataMessageStore.cs:line 54
2019-12-14 19:33:09.615 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 19:33:09.617 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 19:33:09.619 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 19:33:09.665 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0PH9VD8IL:00000003","TimeStamp":"2019-12-14T19:33:09.0000000Z","ProcessId":928,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 19:33:09.879 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 19:33:09.887 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 19:33:09.896 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 19:33:09.944 +00:00 [DBG] Processing signout callback request
2019-12-14 19:33:10.089 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:33:10.090 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 19:33:10.091 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 19:33:10.092 +00:00 [INF] Successful signout callback.
2019-12-14 19:33:10.092 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 19:33:10.092 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 19:42:25.234 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 19:42:25.365 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 19:42:25.394 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 19:42:25.395 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 19:42:25.397 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 19:42:25.409 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 19:42:25.411 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 19:42:25.413 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 19:42:39.126 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:42:39.179 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:42:39.186 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:42:39.187 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:42:39.292 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 19:42:39.293 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 19:42:39.293 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 19:42:39.293 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 19:42:39.294 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 19:42:39.294 +00:00 [DBG] Error Url: /home/error
2019-12-14 19:42:39.297 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 19:42:39.338 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:42:39.585 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:42:39.586 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:42:39.592 +00:00 [DBG] Start discovery request
2019-12-14 19:42:39.689 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:42:39.690 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:42:39.692 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:42:39.692 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:42:39.702 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:42:39.705 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:42:39.705 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:42:39.716 +00:00 [DBG] Start key discovery request
2019-12-14 19:42:39.802 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:42:39.820 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:42:39.820 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:42:39.828 +00:00 [DBG] Start authorize request
2019-12-14 19:42:39.845 +00:00 [DBG] No user present in authorize request
2019-12-14 19:42:39.855 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:42:39.880 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:42:39.946 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:42:39.967 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8","UiLocales":null,"Nonce":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:42:40.029 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:42:40.344 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:42:40.344 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:42:40.346 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:42:40.351 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:42:51.297 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:42:51.305 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 19:42:51.407 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:42:51.408 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:42:51.410 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:42:52.790 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:42:52.794 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 19:42:52.795 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 19:42:52.795 +00:00 [DBG] Adding auth_time claim with value: 1576352572
2019-12-14 19:42:52.817 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:42:52.868 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:00000003","TimeStamp":"2019-12-14T19:42:52.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 19:42:52.872 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:42:52.909 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 19:42:52.914 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 19:42:52.915 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 19:42:52.930 +00:00 [DBG] Start authorize callback request
2019-12-14 19:42:52.942 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:42:52.942 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:42:52.942 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:42:52.942 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:42:52.943 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8","UiLocales":null,"Nonce":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bd14241e660347f0e6663046d44c3b3d","Raw":{"response_type":"id_token token","client_id":"angular","state":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:42:53.085 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:42:53.103 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:42:53.125 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:42:53.127 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:42:53.144 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:42:53.246 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:42:53.247 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:42:53.262 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****wkWQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****29Xg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:00000004","TimeStamp":"2019-12-14T19:42:53.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:42:53.265 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"lZyVd3aSBRjipq9_cCEoiD9Iq8clXr3uIJGLdDuLLOjs8","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:42:53.294 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:42:53.296 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:43:07.383 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:07.383 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:07.383 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:07.384 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:07.384 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:07.384 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:07.384 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:07.385 +00:00 [DBG] Start discovery request
2019-12-14 19:43:07.398 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:07.399 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:07.399 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:07.400 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:07.400 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:07.401 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:07.402 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:07.402 +00:00 [DBG] Start key discovery request
2019-12-14 19:43:08.205 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:08.206 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:08.206 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:08.207 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:08.208 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:08.208 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:08.209 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:08.209 +00:00 [DBG] Start discovery request
2019-12-14 19:43:08.232 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:08.232 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:08.232 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:08.232 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:08.232 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:08.233 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:08.233 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:08.233 +00:00 [DBG] Start key discovery request
2019-12-14 19:43:21.742 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:21.742 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:21.743 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:21.743 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:21.743 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:21.744 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:21.744 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:21.744 +00:00 [DBG] Start discovery request
2019-12-14 19:43:21.755 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:21.756 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:21.756 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:21.756 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:21.756 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:21.758 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:21.758 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:21.758 +00:00 [DBG] Start key discovery request
2019-12-14 19:43:21.789 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:43:21.794 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:43:21.795 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:43:21.802 +00:00 [DBG] Start authorize request
2019-12-14 19:43:21.802 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:43:21.802 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:43:21.802 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:43:21.803 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:43:21.804 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"rnt-8z19uyRPqq3PRHiBIrfecjfXDMmar814_LWAoybwQ","UiLocales":null,"Nonce":"rnt-8z19uyRPqq3PRHiBIrfecjfXDMmar814_LWAoybwQ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bd14241e660347f0e6663046d44c3b3d","Raw":{"response_type":"id_token token","client_id":"angular","state":"rnt-8z19uyRPqq3PRHiBIrfecjfXDMmar814_LWAoybwQ","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"rnt-8z19uyRPqq3PRHiBIrfecjfXDMmar814_LWAoybwQ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:43:21.814 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:43:21.815 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:43:21.819 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:43:21.820 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:43:21.821 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:43:21.826 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:43:21.827 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:43:21.831 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****QaIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wmxQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:00000005","TimeStamp":"2019-12-14T19:43:21.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:43:21.832 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"rnt-8z19uyRPqq3PRHiBIrfecjfXDMmar814_LWAoybwQ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:43:24.445 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:24.445 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:24.446 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:24.446 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:24.447 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:24.447 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:24.447 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:24.447 +00:00 [DBG] Start discovery request
2019-12-14 19:43:24.461 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:24.461 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:24.461 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:24.461 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:24.462 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:24.462 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:24.462 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:24.462 +00:00 [DBG] Start key discovery request
2019-12-14 19:43:25.141 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:25.141 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:25.142 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:25.142 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:25.142 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:25.143 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:25.144 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:25.144 +00:00 [DBG] Start discovery request
2019-12-14 19:43:25.168 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:25.168 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:25.169 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:25.169 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:25.170 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:25.170 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:25.170 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:25.171 +00:00 [DBG] Start key discovery request
2019-12-14 19:43:29.846 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:29.847 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:29.847 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:29.848 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:29.848 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:29.848 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:29.848 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:29.849 +00:00 [DBG] Start discovery request
2019-12-14 19:43:29.859 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:29.859 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:29.859 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:29.859 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:29.861 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:29.861 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:29.861 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:29.861 +00:00 [DBG] Start key discovery request
2019-12-14 19:43:30.437 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:30.437 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:30.438 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:30.438 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:30.439 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:30.440 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:30.440 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:30.440 +00:00 [DBG] Start discovery request
2019-12-14 19:43:30.450 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:30.450 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:30.450 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:30.450 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:30.451 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:30.452 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:30.452 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:30.452 +00:00 [DBG] Start key discovery request
2019-12-14 19:43:31.028 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:31.029 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:43:31.029 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:31.029 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:31.029 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:43:31.029 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:43:31.029 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:43:31.029 +00:00 [DBG] Start discovery request
2019-12-14 19:43:31.038 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:43:31.038 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:43:31.038 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:43:31.038 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:43:31.038 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:43:31.039 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:43:31.039 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:43:31.039 +00:00 [DBG] Start key discovery request
2019-12-14 19:45:28.830 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:45:28.830 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:45:28.830 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:45:28.830 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:45:28.831 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:45:28.831 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:45:28.831 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:45:28.831 +00:00 [DBG] Start discovery request
2019-12-14 19:45:28.849 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:45:28.854 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:45:28.854 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:45:28.854 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:45:28.855 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:45:28.855 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:45:28.855 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:45:28.855 +00:00 [DBG] Start key discovery request
2019-12-14 19:45:28.883 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:45:28.885 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:45:28.885 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:45:28.886 +00:00 [DBG] Start authorize request
2019-12-14 19:45:28.887 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:45:28.887 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:45:28.888 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:45:28.890 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:45:28.897 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ptNaS3PoZrrg_YHsEYuxZ4QLY-__gAAokpi13zs7lAgvt","UiLocales":null,"Nonce":"ptNaS3PoZrrg_YHsEYuxZ4QLY-__gAAokpi13zs7lAgvt","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bd14241e660347f0e6663046d44c3b3d","Raw":{"response_type":"id_token token","client_id":"angular","state":"ptNaS3PoZrrg_YHsEYuxZ4QLY-__gAAokpi13zs7lAgvt","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ptNaS3PoZrrg_YHsEYuxZ4QLY-__gAAokpi13zs7lAgvt"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:45:28.954 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:45:28.955 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:45:28.956 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:45:28.956 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:45:28.957 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:45:28.965 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:45:28.966 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:45:28.991 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pKUQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jP5g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:00000008","TimeStamp":"2019-12-14T19:45:28.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:45:28.991 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"ptNaS3PoZrrg_YHsEYuxZ4QLY-__gAAokpi13zs7lAgvt","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:45:31.086 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:45:31.087 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:45:31.088 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:45:31.088 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:45:31.090 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:45:31.091 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:45:31.091 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:45:31.092 +00:00 [DBG] Start discovery request
2019-12-14 19:45:31.103 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:45:31.104 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:45:31.104 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:45:31.104 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:45:31.104 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:45:31.105 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:45:31.105 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:45:31.105 +00:00 [DBG] Start key discovery request
2019-12-14 19:45:32.158 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:45:32.158 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:45:32.159 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:45:32.159 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:45:32.160 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:45:32.161 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:45:32.162 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:45:32.162 +00:00 [DBG] Start discovery request
2019-12-14 19:45:32.182 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:45:32.182 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:45:32.183 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:45:32.184 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:45:32.186 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:45:32.188 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:45:32.188 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:45:32.189 +00:00 [DBG] Start key discovery request
2019-12-14 19:45:34.090 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-14 19:45:34.094 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-14 19:45:34.094 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-14 19:45:34.109 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:45:34.121 +00:00 [DBG] Start end session request validation
2019-12-14 19:45:34.131 +00:00 [DBG] Start identity token validation
2019-12-14 19:45:34.140 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:45:34.140 +00:00 [DBG] Client found: angular / SPA Client
2019-12-14 19:45:34.229 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-14 19:45:34.235 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576352728,"exp":1576353028,"iss":"http://localhost:5000","aud":"angular","nonce":"ptNaS3PoZrrg_YHsEYuxZ4QLY-__gAAokpi13zs7lAgvt","iat":1576352728,"at_hash":"ThqOWZVXTonz_Rqtam42qg","sid":"bd14241e660347f0e6663046d44c3b3d","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576352572,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-14 19:45:34.241 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-14 19:45:34.249 +00:00 [ERR] Error processing end session request Invalid request
2019-12-14 19:46:57.405 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 19:46:57.408 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 19:46:57.411 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 19:47:07.013 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0PN3DVKQU:0000000A","TimeStamp":"2019-12-14T19:47:07.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 19:47:22.370 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 19:47:22.373 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 19:47:22.374 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 19:47:22.388 +00:00 [DBG] Processing signout callback request
2019-12-14 19:47:22.412 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:47:22.412 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 19:47:22.412 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 19:47:22.413 +00:00 [INF] Successful signout callback.
2019-12-14 19:47:22.413 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 19:47:22.413 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 19:47:47.870 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:47:47.871 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:47:47.872 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:47:47.872 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:47:47.875 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:47:47.875 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:47:47.875 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:47:47.875 +00:00 [DBG] Start discovery request
2019-12-14 19:47:47.914 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:47:47.914 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:47:47.914 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:47:47.914 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:47:47.914 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:47:47.915 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:47:47.915 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:47:47.915 +00:00 [DBG] Start key discovery request
2019-12-14 19:47:47.974 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:47:47.976 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:47:47.976 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:47:47.976 +00:00 [DBG] Start authorize request
2019-12-14 19:47:47.976 +00:00 [DBG] No user present in authorize request
2019-12-14 19:47:47.976 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:47:47.976 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:47:47.977 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:47:47.977 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q","UiLocales":null,"Nonce":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:47:47.977 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:47:47.988 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:47:47.989 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:47:47.990 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:47:47.990 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:48:11.386 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:48:11.386 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 19:48:11.391 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:48:11.392 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:48:11.393 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:48:11.530 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:48:11.530 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 19:48:11.530 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 19:48:11.531 +00:00 [DBG] Adding auth_time claim with value: 1576352891
2019-12-14 19:48:11.532 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:48:11.544 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:0000000E","TimeStamp":"2019-12-14T19:48:11.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 19:48:11.544 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:48:11.551 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 19:48:11.553 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 19:48:11.553 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 19:48:11.553 +00:00 [DBG] Start authorize callback request
2019-12-14 19:48:11.554 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:48:11.554 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:48:11.554 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:48:11.554 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:48:11.555 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q","UiLocales":null,"Nonce":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"12edf19f945bc2aa81b133aa334c908d","Raw":{"response_type":"id_token token","client_id":"angular","state":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:48:11.560 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:48:11.560 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:48:11.562 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:48:11.563 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:48:11.564 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:48:11.569 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:48:11.569 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:48:11.572 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****108g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CumA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:0000000F","TimeStamp":"2019-12-14T19:48:11.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:48:11.573 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"Azxefpq8ubaZ4cfM3dZ9Ov5bjO45rd0BGa7YkFqn1rt0q","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:48:11.573 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:48:11.575 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:48:15.238 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:48:15.238 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:48:15.239 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:48:15.239 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:48:15.240 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:48:15.240 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:48:15.240 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:48:15.240 +00:00 [DBG] Start discovery request
2019-12-14 19:48:15.251 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:48:15.251 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:48:15.252 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:48:15.252 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:48:15.253 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:48:15.254 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:48:15.254 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:48:15.254 +00:00 [DBG] Start key discovery request
2019-12-14 19:48:16.477 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:48:16.478 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:48:16.478 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:48:16.478 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:48:16.478 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:48:16.479 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:48:16.479 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:48:16.479 +00:00 [DBG] Start discovery request
2019-12-14 19:48:16.494 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:48:16.495 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:48:16.495 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:48:16.495 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:48:16.496 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:48:16.496 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:48:16.496 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:48:16.497 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:20.870 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:20.870 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:20.870 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:20.870 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:20.871 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:20.871 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:20.871 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:20.871 +00:00 [DBG] Start discovery request
2019-12-14 19:50:20.902 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:20.903 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:20.903 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:20.903 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:20.903 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:20.904 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:20.904 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:20.904 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:21.660 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:21.660 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:21.660 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:21.660 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:21.660 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:21.661 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:21.661 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:21.661 +00:00 [DBG] Start discovery request
2019-12-14 19:50:21.672 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:21.672 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:21.673 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:21.673 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:21.674 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:21.675 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:21.675 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:21.675 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:22.284 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:22.284 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:22.285 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:22.285 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:22.285 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:22.285 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:22.286 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:22.286 +00:00 [DBG] Start discovery request
2019-12-14 19:50:22.297 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:22.298 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:22.298 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:22.298 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:22.298 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:22.299 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:22.299 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:22.299 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:22.886 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:22.886 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:22.886 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:22.887 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:22.887 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:22.887 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:22.887 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:22.887 +00:00 [DBG] Start discovery request
2019-12-14 19:50:22.900 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:22.901 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:22.901 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:22.902 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:22.903 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:22.903 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:22.903 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:22.903 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:23.957 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:23.957 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:23.958 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:23.958 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:23.958 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:23.958 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:23.958 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:23.958 +00:00 [DBG] Start discovery request
2019-12-14 19:50:23.966 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:23.967 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:23.967 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:23.967 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:23.968 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:23.969 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:23.969 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:23.969 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:24.188 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:24.188 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:24.189 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:24.189 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:24.189 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:24.190 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:24.190 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:24.190 +00:00 [DBG] Start discovery request
2019-12-14 19:50:24.200 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:24.200 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:24.200 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:24.200 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:24.200 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:24.201 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:24.201 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:24.201 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:24.372 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:24.373 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:24.374 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:24.374 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:24.375 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:24.376 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:24.376 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:24.376 +00:00 [DBG] Start discovery request
2019-12-14 19:50:24.385 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:24.385 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:24.385 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:24.385 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:24.385 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:24.386 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:24.386 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:24.386 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:26.947 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:26.947 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:26.947 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:26.947 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:26.948 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:26.948 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:26.948 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:26.949 +00:00 [DBG] Start discovery request
2019-12-14 19:50:26.958 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:26.958 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:26.958 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:26.958 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:26.959 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:26.959 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:26.959 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:26.959 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:27.293 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:27.293 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:27.294 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:27.294 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:27.294 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:27.295 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:27.295 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:27.295 +00:00 [DBG] Start discovery request
2019-12-14 19:50:27.325 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:27.326 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:27.326 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:27.326 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:27.326 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:27.327 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:27.327 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:27.327 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:27.565 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:27.565 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:27.565 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:27.565 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:27.566 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:27.567 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:27.567 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:27.567 +00:00 [DBG] Start discovery request
2019-12-14 19:50:27.578 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:27.579 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:27.579 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:27.579 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:27.580 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:27.580 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:27.581 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:27.581 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:32.845 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:32.845 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:32.845 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:32.845 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:32.845 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:32.845 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:32.846 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:32.847 +00:00 [DBG] Start discovery request
2019-12-14 19:50:32.859 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:32.860 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:32.860 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:32.861 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:32.861 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:32.864 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:32.865 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:32.867 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:33.629 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:33.629 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:33.629 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:33.629 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:33.630 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:33.630 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:33.630 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:33.630 +00:00 [DBG] Start discovery request
2019-12-14 19:50:33.640 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:33.640 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:33.641 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:33.641 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:33.641 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:33.641 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:33.642 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:33.642 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:33.820 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:33.820 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:33.820 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:33.820 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:33.821 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:33.821 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:33.821 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:33.821 +00:00 [DBG] Start discovery request
2019-12-14 19:50:33.832 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:33.833 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:33.833 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:33.833 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:33.834 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:33.834 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:33.835 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:33.835 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:34.021 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:34.021 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:34.021 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:34.021 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:34.021 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:34.022 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:34.022 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:34.022 +00:00 [DBG] Start discovery request
2019-12-14 19:50:34.033 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:34.033 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:34.033 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:34.034 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:34.034 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:34.035 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:34.035 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:34.035 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:34.645 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:34.645 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:34.645 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:34.645 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:34.645 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:34.646 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:34.646 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:34.646 +00:00 [DBG] Start discovery request
2019-12-14 19:50:34.656 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:34.657 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:34.657 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:34.657 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:34.657 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:34.658 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:34.658 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:34.659 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:34.965 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:34.965 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:34.965 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:34.966 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:34.966 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:34.966 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:34.967 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:34.967 +00:00 [DBG] Start discovery request
2019-12-14 19:50:34.976 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:34.976 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:34.976 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:34.977 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:34.977 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:34.978 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:34.978 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:34.979 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:43.961 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:43.961 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:43.962 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:43.962 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:43.962 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:43.963 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:43.964 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:43.964 +00:00 [DBG] Start discovery request
2019-12-14 19:50:43.980 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:43.981 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:43.982 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:43.982 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:43.982 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:43.983 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:43.983 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:43.983 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:44.975 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:44.975 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:50:44.976 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:44.976 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:44.977 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:50:44.978 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:50:44.978 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:50:44.979 +00:00 [DBG] Start discovery request
2019-12-14 19:50:44.991 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:50:44.991 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:50:44.991 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:50:44.992 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:50:44.992 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:50:44.993 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:50:44.993 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:50:44.993 +00:00 [DBG] Start key discovery request
2019-12-14 19:50:53.134 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 19:50:53.135 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 19:50:53.135 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 19:50:53.135 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0PN3DVKQU:00000015","TimeStamp":"2019-12-14T19:50:53.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 19:50:53.224 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 19:50:53.226 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 19:50:53.227 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 19:50:53.228 +00:00 [DBG] Processing signout callback request
2019-12-14 19:50:53.230 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:50:53.231 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 19:50:53.232 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 19:50:53.233 +00:00 [INF] Successful signout callback.
2019-12-14 19:50:53.233 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 19:50:53.243 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 19:51:01.511 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:51:01.511 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:51:01.511 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:51:01.511 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:51:01.512 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:51:01.513 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:51:01.514 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:51:01.514 +00:00 [DBG] Start discovery request
2019-12-14 19:51:01.530 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:51:01.530 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:51:01.531 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:51:01.531 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:51:01.532 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:51:01.532 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:51:01.533 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:51:01.533 +00:00 [DBG] Start key discovery request
2019-12-14 19:51:01.575 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 19:51:01.577 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 19:51:01.577 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 19:51:01.577 +00:00 [DBG] Start authorize request
2019-12-14 19:51:01.577 +00:00 [DBG] No user present in authorize request
2019-12-14 19:51:01.577 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:51:01.577 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:01.578 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:51:01.584 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","UiLocales":null,"Nonce":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:51:01.584 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 19:51:01.595 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:51:01.598 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:01.599 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:51:01.599 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:08.085 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:51:08.085 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 19:51:08.098 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:51:08.098 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:08.100 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:51:08.169 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:51:08.170 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 19:51:08.170 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 19:51:08.170 +00:00 [DBG] Adding auth_time claim with value: 1576353068
2019-12-14 19:51:08.171 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:51:08.182 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:0000001B","TimeStamp":"2019-12-14T19:51:08.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 19:51:08.183 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:08.224 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 19:51:08.225 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 19:51:08.225 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 19:51:08.225 +00:00 [DBG] Start authorize callback request
2019-12-14 19:51:08.226 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:51:08.226 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 19:51:08.226 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:08.226 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 19:51:08.226 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","UiLocales":null,"Nonce":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f65afce58de7e9d0c357da467cb2d9b3","Raw":{"response_type":"id_token token","client_id":"angular","state":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 19:51:08.258 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 19:51:08.261 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 19:51:08.262 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 19:51:08.262 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:51:08.263 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:51:08.274 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 19:51:08.275 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 19:51:08.279 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****N0Vg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NzSg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0PN3DVKQU:0000001C","TimeStamp":"2019-12-14T19:51:08.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 19:51:08.280 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 19:51:08.281 +00:00 [DBG] Augmenting SignInContext
2019-12-14 19:51:08.281 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 19:51:11.751 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:51:11.751 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:51:11.751 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:51:11.751 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:51:11.752 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:51:11.752 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:51:11.752 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:51:11.752 +00:00 [DBG] Start discovery request
2019-12-14 19:51:11.774 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:51:11.774 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:51:11.774 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:51:11.774 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:51:11.775 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:51:11.775 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:51:11.777 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:51:11.780 +00:00 [DBG] Start key discovery request
2019-12-14 19:51:12.566 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:51:12.566 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 19:51:12.566 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:51:12.566 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:51:12.567 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 19:51:12.568 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 19:51:12.568 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 19:51:12.568 +00:00 [DBG] Start discovery request
2019-12-14 19:51:12.594 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 19:51:12.594 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 19:51:12.595 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 19:51:12.595 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 19:51:12.595 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 19:51:12.596 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 19:51:12.596 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 19:51:12.597 +00:00 [DBG] Start key discovery request
2019-12-14 19:51:14.170 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-14 19:51:14.170 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-14 19:51:14.170 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-14 19:51:14.171 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 19:51:14.171 +00:00 [DBG] Start end session request validation
2019-12-14 19:51:14.171 +00:00 [DBG] Start identity token validation
2019-12-14 19:51:14.171 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:14.171 +00:00 [DBG] Client found: angular / SPA Client
2019-12-14 19:51:14.218 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-14 19:51:14.222 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576353068,"exp":1576353368,"iss":"http://localhost:5000","aud":"angular","nonce":"qY5ECJuvo0JpZKwVXq3AsHXzPVJBSYYAlQe50FrGOd4WX","iat":1576353068,"at_hash":"_8yL12pj6cBmRQeBxq1mMw","sid":"f65afce58de7e9d0c357da467cb2d9b3","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576353068,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-14 19:51:14.222 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-14 19:51:14.222 +00:00 [ERR] Error processing end session request Invalid request
2019-12-14 19:51:22.799 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 19:51:22.799 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 19:51:22.799 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 19:51:22.799 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0PN3DVKQU:0000001E","TimeStamp":"2019-12-14T19:51:22.0000000Z","ProcessId":1030,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 19:51:22.946 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 19:51:22.947 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 19:51:22.948 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 19:51:22.948 +00:00 [DBG] Processing signout callback request
2019-12-14 19:51:22.948 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 19:51:22.949 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 19:51:22.949 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 19:51:22.949 +00:00 [INF] Successful signout callback.
2019-12-14 19:51:22.949 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 19:51:22.949 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 20:00:11.145 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 20:00:11.347 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 20:00:11.377 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 20:00:11.378 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 20:00:11.380 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 20:00:11.381 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 20:00:11.382 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 20:00:11.384 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 20:09:46.775 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 20:09:46.862 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 20:09:46.886 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 20:09:46.887 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 20:09:46.893 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 20:09:46.898 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 20:09:46.900 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 20:09:46.901 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 20:10:06.731 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:06.781 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:06.787 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:06.788 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:06.867 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 20:10:06.869 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 20:10:06.869 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 20:10:06.870 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 20:10:06.870 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 20:10:06.872 +00:00 [DBG] Error Url: /home/error
2019-12-14 20:10:06.873 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 20:10:06.907 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:07.122 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:07.124 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:07.130 +00:00 [DBG] Start discovery request
2019-12-14 20:10:07.240 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:07.240 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:07.241 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:07.241 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:07.241 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:07.242 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:07.242 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:07.258 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:07.313 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:10:07.399 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:10:07.399 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:10:07.409 +00:00 [DBG] Start authorize request
2019-12-14 20:10:07.428 +00:00 [DBG] No user present in authorize request
2019-12-14 20:10:07.437 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:10:07.463 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:07.485 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:07.485 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:07.485 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:07.485 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:07.485 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:07.490 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:07.490 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:07.491 +00:00 [DBG] Start discovery request
2019-12-14 20:10:07.561 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:07.561 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:07.562 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:07.562 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:07.563 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:07.564 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:07.565 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:07.565 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:07.594 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:10:07.633 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA","UiLocales":null,"Nonce":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:10:07.681 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 20:10:08.015 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:10:08.015 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:08.019 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:10:08.028 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:16.964 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:16.965 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 20:10:17.059 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:10:17.060 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:17.061 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:10:18.387 +00:00 [DBG] Augmenting SignInContext
2019-12-14 20:10:18.393 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 20:10:18.393 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 20:10:18.393 +00:00 [DBG] Adding auth_time claim with value: 1576354218
2019-12-14 20:10:18.414 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 20:10:18.465 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0Q6EER8SV:00000003","TimeStamp":"2019-12-14T20:10:18.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 20:10:18.469 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:18.522 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 20:10:18.528 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 20:10:18.530 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 20:10:18.548 +00:00 [DBG] Start authorize callback request
2019-12-14 20:10:18.566 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:18.566 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:10:18.567 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:18.568 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:10:18.570 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA","UiLocales":null,"Nonce":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ec1f49032edef26c5104adb072c53252","Raw":{"response_type":"id_token token","client_id":"angular","state":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:10:18.749 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:10:18.763 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:10:18.780 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:10:18.781 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:18.791 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:10:18.897 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:10:18.898 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:10:18.909 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****aoew","$type":"Token"},{"TokenType":"access_token","TokenValue":"****tjnA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q6EER8SV:00000004","TimeStamp":"2019-12-14T20:10:18.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:10:18.913 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"Zo8KLth1A5I0czWYxNNFHwSOUi2xyED4QeEK2Casyu2RA","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:10:18.941 +00:00 [DBG] Augmenting SignInContext
2019-12-14 20:10:18.944 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 20:10:21.814 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:21.815 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:21.815 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:21.815 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:21.815 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:21.815 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:21.815 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:21.815 +00:00 [DBG] Start discovery request
2019-12-14 20:10:21.828 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:21.828 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:21.828 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:21.829 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:21.830 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:21.830 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:21.831 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:21.831 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:22.668 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:22.669 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:22.669 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:22.669 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:22.669 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:22.669 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:22.669 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:22.669 +00:00 [DBG] Start discovery request
2019-12-14 20:10:22.688 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:22.689 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:22.689 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:22.689 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:22.689 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:22.690 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:22.690 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:22.690 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:27.255 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:27.256 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:27.256 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:27.256 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:27.256 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:27.257 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:27.257 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:27.257 +00:00 [DBG] Start discovery request
2019-12-14 20:10:27.266 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:27.267 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:27.267 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:27.268 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:27.268 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:27.268 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:27.269 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:27.269 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:27.303 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:10:27.312 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:10:27.313 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:10:27.313 +00:00 [DBG] Start authorize request
2019-12-14 20:10:27.313 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:27.314 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:10:27.314 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:27.316 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:10:27.317 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"6Ga7XkdwCvjOnTQXgi11W6CeW8j3XmVtzv2vnjA1zKUB1","UiLocales":null,"Nonce":"6Ga7XkdwCvjOnTQXgi11W6CeW8j3XmVtzv2vnjA1zKUB1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ec1f49032edef26c5104adb072c53252","Raw":{"response_type":"id_token token","client_id":"angular","state":"6Ga7XkdwCvjOnTQXgi11W6CeW8j3XmVtzv2vnjA1zKUB1","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"6Ga7XkdwCvjOnTQXgi11W6CeW8j3XmVtzv2vnjA1zKUB1"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:10:27.390 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:10:27.391 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:10:27.391 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:10:27.391 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:27.391 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:10:27.393 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:10:27.393 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:10:27.395 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****6wZQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ltjw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q6EER8SV:00000005","TimeStamp":"2019-12-14T20:10:27.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:10:27.395 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"6Ga7XkdwCvjOnTQXgi11W6CeW8j3XmVtzv2vnjA1zKUB1","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:10:28.917 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:28.918 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:28.918 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:28.919 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:28.919 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:28.920 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:28.920 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:28.921 +00:00 [DBG] Start discovery request
2019-12-14 20:10:28.940 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:28.940 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:28.940 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:28.940 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:28.940 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:28.940 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:28.940 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:28.940 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:29.541 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:29.541 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:29.541 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:29.541 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:29.541 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:29.542 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:29.542 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:29.542 +00:00 [DBG] Start discovery request
2019-12-14 20:10:29.556 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:29.557 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:29.558 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:29.559 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:29.560 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:29.562 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:29.562 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:29.562 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:31.215 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-14 20:10:31.219 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-14 20:10:31.219 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-14 20:10:31.245 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:31.256 +00:00 [DBG] Start end session request validation
2019-12-14 20:10:31.279 +00:00 [DBG] Start identity token validation
2019-12-14 20:10:31.307 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:31.308 +00:00 [DBG] Client found: angular / SPA Client
2019-12-14 20:10:31.427 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-14 20:10:31.430 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576354227,"exp":1576354527,"iss":"http://localhost:5000","aud":"angular","nonce":"6Ga7XkdwCvjOnTQXgi11W6CeW8j3XmVtzv2vnjA1zKUB1","iat":1576354227,"at_hash":"z4ZJOYaHn6Qain88jwXXzw","sid":"ec1f49032edef26c5104adb072c53252","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576354218,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-14 20:10:31.439 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-14 20:10:31.439 +00:00 [ERR] Error processing end session request Invalid request
2019-12-14 20:10:46.054 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:46.054 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:46.054 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:46.055 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:46.055 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:46.055 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:46.056 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:46.056 +00:00 [DBG] Start discovery request
2019-12-14 20:10:46.066 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:46.067 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:46.067 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:46.067 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:46.067 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:46.068 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:46.068 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:46.068 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:46.169 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:10:46.170 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:10:46.170 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:10:46.170 +00:00 [DBG] Start authorize request
2019-12-14 20:10:46.170 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:46.170 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:10:46.170 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:46.170 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:10:46.171 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ybLcRdPOnWqAZGRa58yWf-TLK_bB9eP8ueSOf9ww9287L","UiLocales":null,"Nonce":"ybLcRdPOnWqAZGRa58yWf-TLK_bB9eP8ueSOf9ww9287L","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ec1f49032edef26c5104adb072c53252","Raw":{"response_type":"id_token token","client_id":"angular","state":"ybLcRdPOnWqAZGRa58yWf-TLK_bB9eP8ueSOf9ww9287L","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ybLcRdPOnWqAZGRa58yWf-TLK_bB9eP8ueSOf9ww9287L"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:10:46.183 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:10:46.184 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:10:46.184 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:10:46.184 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:46.185 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:10:46.190 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:10:46.215 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:10:46.217 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****F5Fg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****RhmA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q6EER8T2:00000001","TimeStamp":"2019-12-14T20:10:46.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:10:46.218 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"ybLcRdPOnWqAZGRa58yWf-TLK_bB9eP8ueSOf9ww9287L","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:10:47.470 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:47.470 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:47.470 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:47.470 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:47.470 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:47.470 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:47.470 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:47.470 +00:00 [DBG] Start discovery request
2019-12-14 20:10:47.481 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:47.481 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:47.482 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:47.482 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:47.482 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:47.482 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:47.482 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:47.483 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:48.093 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:48.094 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:10:48.094 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:48.095 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:48.096 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:10:48.096 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:10:48.096 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:10:48.096 +00:00 [DBG] Start discovery request
2019-12-14 20:10:48.111 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:10:48.111 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:10:48.112 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:10:48.113 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:10:48.114 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:10:48.116 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:10:48.116 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:10:48.117 +00:00 [DBG] Start key discovery request
2019-12-14 20:10:49.167 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-14 20:10:49.170 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-14 20:10:49.170 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-14 20:10:49.170 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:10:49.171 +00:00 [DBG] Start end session request validation
2019-12-14 20:10:49.171 +00:00 [DBG] Start identity token validation
2019-12-14 20:10:49.172 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:10:49.172 +00:00 [DBG] Client found: angular / SPA Client
2019-12-14 20:10:49.202 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-14 20:10:49.202 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576354246,"exp":1576354546,"iss":"http://localhost:5000","aud":"angular","nonce":"ybLcRdPOnWqAZGRa58yWf-TLK_bB9eP8ueSOf9ww9287L","iat":1576354246,"at_hash":"7SO0ZPyRD1m9EV5ABoaN6A","sid":"ec1f49032edef26c5104adb072c53252","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576354218,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-14 20:10:49.203 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-14 20:10:49.203 +00:00 [ERR] Error processing end session request Invalid request
2019-12-14 20:11:03.247 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:03.248 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:03.248 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:03.248 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:03.248 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:03.249 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:03.249 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:03.249 +00:00 [DBG] Start discovery request
2019-12-14 20:11:03.259 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:03.260 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:03.261 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:03.261 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:03.262 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:03.263 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:03.263 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:03.263 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:03.308 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:11:03.312 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:11:03.313 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:11:03.313 +00:00 [DBG] Start authorize request
2019-12-14 20:11:03.319 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:11:03.319 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:11:03.319 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:03.344 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:11:03.344 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ikLzSgWeaeram_RpdcM3ZB-kRr7a0ZvIZsohCHlPbDJE5","UiLocales":null,"Nonce":"ikLzSgWeaeram_RpdcM3ZB-kRr7a0ZvIZsohCHlPbDJE5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ec1f49032edef26c5104adb072c53252","Raw":{"response_type":"id_token token","client_id":"angular","state":"ikLzSgWeaeram_RpdcM3ZB-kRr7a0ZvIZsohCHlPbDJE5","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ikLzSgWeaeram_RpdcM3ZB-kRr7a0ZvIZsohCHlPbDJE5"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:11:03.355 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:11:03.355 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:11:03.355 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:11:03.355 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:11:03.355 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:11:03.365 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:11:03.369 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:11:03.374 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****bomQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zz9A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q6EER8T4:00000001","TimeStamp":"2019-12-14T20:11:03.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:11:03.374 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"ikLzSgWeaeram_RpdcM3ZB-kRr7a0ZvIZsohCHlPbDJE5","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:11:04.835 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:04.835 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:04.836 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:04.836 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:04.836 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:04.836 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:04.837 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:04.837 +00:00 [DBG] Start discovery request
2019-12-14 20:11:04.876 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:04.877 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:04.877 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:04.877 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:04.877 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:04.878 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:04.878 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:04.879 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:05.573 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:05.573 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:05.577 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:05.577 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:05.579 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:05.579 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:05.579 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:05.579 +00:00 [DBG] Start discovery request
2019-12-14 20:11:05.597 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:05.597 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:05.597 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:05.597 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:05.597 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:05.598 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:05.598 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:05.598 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:06.452 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-14 20:11:06.452 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-14 20:11:06.452 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-14 20:11:06.452 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:11:06.452 +00:00 [DBG] Start end session request validation
2019-12-14 20:11:06.452 +00:00 [DBG] Start identity token validation
2019-12-14 20:11:06.453 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:06.453 +00:00 [DBG] Client found: angular / SPA Client
2019-12-14 20:11:06.479 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-14 20:11:06.501 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576354263,"exp":1576354563,"iss":"http://localhost:5000","aud":"angular","nonce":"ikLzSgWeaeram_RpdcM3ZB-kRr7a0ZvIZsohCHlPbDJE5","iat":1576354263,"at_hash":"ewUYwEDA-kfFrVlIae8iGQ","sid":"ec1f49032edef26c5104adb072c53252","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576354218,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-14 20:11:06.531 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-14 20:11:06.533 +00:00 [ERR] Error processing end session request Invalid request
2019-12-14 20:11:14.381 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 20:11:14.383 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 20:11:14.385 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 20:11:14.386 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0Q6EER8T4:00000003","TimeStamp":"2019-12-14T20:11:14.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 20:11:14.477 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 20:11:14.480 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 20:11:14.481 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 20:11:14.493 +00:00 [DBG] Processing signout callback request
2019-12-14 20:11:14.516 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:14.517 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 20:11:14.517 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 20:11:14.517 +00:00 [INF] Successful signout callback.
2019-12-14 20:11:14.517 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 20:11:14.517 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 20:11:27.997 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:27.998 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:27.999 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:27.999 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:27.999 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:28.000 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:28.000 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:28.000 +00:00 [DBG] Start discovery request
2019-12-14 20:11:28.012 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:28.013 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:28.013 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:28.013 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:28.014 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:28.015 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:28.015 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:28.016 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:28.709 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:28.710 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:28.711 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:28.711 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:28.713 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:28.714 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:28.714 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:28.714 +00:00 [DBG] Start discovery request
2019-12-14 20:11:28.724 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:28.725 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:28.725 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:28.725 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:28.726 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:28.726 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:28.726 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:28.726 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:29.213 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:29.213 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:29.214 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:29.214 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:29.215 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:29.215 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:29.215 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:29.216 +00:00 [DBG] Start discovery request
2019-12-14 20:11:29.228 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:29.228 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:29.229 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:29.229 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:29.230 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:29.230 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:29.231 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:29.231 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:29.501 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:29.501 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:29.501 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:29.502 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:29.502 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:29.502 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:29.502 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:29.502 +00:00 [DBG] Start discovery request
2019-12-14 20:11:29.513 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:29.513 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:29.513 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:29.514 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:29.514 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:29.515 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:29.515 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:29.516 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:29.869 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:29.870 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:29.870 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:29.871 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:29.871 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:29.872 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:29.872 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:29.872 +00:00 [DBG] Start discovery request
2019-12-14 20:11:29.881 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:29.881 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:29.881 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:29.881 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:29.881 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:29.882 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:29.882 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:29.882 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:30.372 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:30.373 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:30.373 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:30.373 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:30.374 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:30.375 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:30.375 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:30.376 +00:00 [DBG] Start discovery request
2019-12-14 20:11:30.388 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:30.388 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:30.389 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:30.389 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:30.390 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:30.390 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:30.390 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:30.391 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:30.653 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:30.654 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:30.654 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:30.654 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:30.655 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:30.657 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:30.657 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:30.657 +00:00 [DBG] Start discovery request
2019-12-14 20:11:30.667 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:30.668 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:30.668 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:30.669 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:30.670 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:30.671 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:30.672 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:30.672 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:30.990 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:30.991 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:30.991 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:30.991 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:30.991 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:30.992 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:30.992 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:30.992 +00:00 [DBG] Start discovery request
2019-12-14 20:11:31.004 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:31.005 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:31.005 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:31.006 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:31.006 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:31.007 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:31.007 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:31.008 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:31.197 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:31.198 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:31.198 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:31.198 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:31.199 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:31.201 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:31.202 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:31.203 +00:00 [DBG] Start discovery request
2019-12-14 20:11:31.222 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:31.223 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:31.223 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:31.224 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:31.224 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:31.225 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:31.226 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:31.226 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:31.621 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:31.622 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:31.622 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:31.624 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:31.624 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:31.625 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:31.626 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:31.626 +00:00 [DBG] Start discovery request
2019-12-14 20:11:31.641 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:31.641 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:31.641 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:31.642 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:31.642 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:31.643 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:31.643 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:31.644 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:34.934 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:34.934 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:34.935 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:34.935 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:34.936 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:34.937 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:34.938 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:34.938 +00:00 [DBG] Start discovery request
2019-12-14 20:11:34.951 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:34.952 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:34.952 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:34.952 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:34.953 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:34.953 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:34.954 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:34.954 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:35.382 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:35.383 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:35.383 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:35.383 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:35.384 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:35.385 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:35.385 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:35.385 +00:00 [DBG] Start discovery request
2019-12-14 20:11:35.397 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:35.398 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:35.398 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:35.398 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:35.399 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:35.400 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:35.400 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:35.400 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:35.869 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:35.870 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:35.871 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:35.872 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:35.873 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:35.874 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:35.874 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:35.875 +00:00 [DBG] Start discovery request
2019-12-14 20:11:35.886 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:35.890 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:35.891 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:35.891 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:35.892 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:35.893 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:35.893 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:35.894 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:36.813 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:36.813 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:36.814 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:36.814 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:36.814 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:36.815 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:36.815 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:36.815 +00:00 [DBG] Start discovery request
2019-12-14 20:11:36.825 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:36.825 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:36.826 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:36.826 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:36.827 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:36.828 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:36.828 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:36.828 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:48.040 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:48.040 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:48.041 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:48.041 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:48.041 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:48.042 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:48.042 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:48.042 +00:00 [DBG] Start discovery request
2019-12-14 20:11:48.077 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:48.078 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:48.078 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:48.078 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:48.079 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:48.079 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:48.080 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:48.080 +00:00 [DBG] Start key discovery request
2019-12-14 20:11:48.124 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:11:48.126 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:11:48.126 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:11:48.126 +00:00 [DBG] Start authorize request
2019-12-14 20:11:48.126 +00:00 [DBG] No user present in authorize request
2019-12-14 20:11:48.126 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:11:48.127 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:48.127 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:11:48.127 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25","UiLocales":null,"Nonce":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:11:48.127 +00:00 [INF] Showing login: User is not authenticated
2019-12-14 20:11:48.161 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:11:48.162 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:48.163 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:11:48.164 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:53.708 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:53.718 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 20:11:53.724 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:11:53.724 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:53.724 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:11:53.818 +00:00 [DBG] Augmenting SignInContext
2019-12-14 20:11:53.819 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 20:11:53.819 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 20:11:53.819 +00:00 [DBG] Adding auth_time claim with value: 1576354313
2019-12-14 20:11:53.820 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 20:11:53.830 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0Q6EER8T4:00000008","TimeStamp":"2019-12-14T20:11:53.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 20:11:53.831 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:53.840 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-14 20:11:53.841 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-14 20:11:53.841 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-14 20:11:53.841 +00:00 [DBG] Start authorize callback request
2019-12-14 20:11:53.841 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:11:53.842 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:11:53.842 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:11:53.842 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:11:53.842 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25","UiLocales":null,"Nonce":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"25cadc2bae97684936844f85ad0e92ed","Raw":{"response_type":"id_token token","client_id":"angular","state":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:11:53.897 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:11:53.897 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:11:53.897 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:11:53.897 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:11:53.897 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:11:53.899 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:11:53.899 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:11:53.901 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****44Sw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-6ow","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q6EER8T4:00000009","TimeStamp":"2019-12-14T20:11:53.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:11:53.901 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"r6lF-n-Z7eYH_dvI-vtA0dtggF7AxCbWPC1vCKNCIxc25","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:11:53.901 +00:00 [DBG] Augmenting SignInContext
2019-12-14 20:11:53.901 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 20:11:59.817 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:59.818 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:11:59.819 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:59.819 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:59.820 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:11:59.822 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:11:59.822 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:11:59.822 +00:00 [DBG] Start discovery request
2019-12-14 20:11:59.835 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:11:59.835 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:11:59.836 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:11:59.836 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:11:59.836 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:11:59.836 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:11:59.836 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:11:59.837 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:02.526 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:02.527 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:12:02.527 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:02.527 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:02.527 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:12:02.528 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:12:02.528 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:12:02.528 +00:00 [DBG] Start discovery request
2019-12-14 20:12:02.555 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:02.555 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:12:02.556 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:02.556 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:02.556 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:12:02.557 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:12:02.557 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:12:02.557 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:09.503 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:09.503 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:12:09.503 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:09.504 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:09.504 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:12:09.504 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:12:09.504 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:12:09.504 +00:00 [DBG] Start discovery request
2019-12-14 20:12:09.524 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:09.524 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:12:09.525 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:09.525 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:09.526 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:12:09.527 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:12:09.527 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:12:09.527 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:09.585 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:12:09.587 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:12:09.587 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:12:09.587 +00:00 [DBG] Start authorize request
2019-12-14 20:12:09.587 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:12:09.587 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:12:09.588 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:12:09.590 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:12:09.590 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ti6SWtHdXJYQk1PXofpXLgTaSGKEkrsN5fXfDckj-V-DE","UiLocales":null,"Nonce":"ti6SWtHdXJYQk1PXofpXLgTaSGKEkrsN5fXfDckj-V-DE","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"25cadc2bae97684936844f85ad0e92ed","Raw":{"response_type":"id_token token","client_id":"angular","state":"ti6SWtHdXJYQk1PXofpXLgTaSGKEkrsN5fXfDckj-V-DE","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ti6SWtHdXJYQk1PXofpXLgTaSGKEkrsN5fXfDckj-V-DE"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:12:09.646 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:12:09.668 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:12:09.668 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:12:09.668 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:12:09.668 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:12:09.676 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:12:09.676 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:12:09.681 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vW3g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NEAQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q6EER8T4:0000000A","TimeStamp":"2019-12-14T20:12:09.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:12:09.683 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"ti6SWtHdXJYQk1PXofpXLgTaSGKEkrsN5fXfDckj-V-DE","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:12:12.255 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:12.255 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:12:12.255 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:12.255 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:12.257 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:12:12.258 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:12:12.258 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:12:12.258 +00:00 [DBG] Start discovery request
2019-12-14 20:12:12.306 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:12.307 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:12:12.308 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:12.308 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:12.308 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:12:12.309 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:12:12.309 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:12:12.309 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:13.072 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:13.072 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:12:13.073 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:13.073 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:13.074 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:12:13.075 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:12:13.075 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:12:13.076 +00:00 [DBG] Start discovery request
2019-12-14 20:12:13.100 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:13.101 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:12:13.101 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:13.101 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:13.101 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:12:13.102 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:12:13.102 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:12:13.102 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:38.042 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:38.043 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:12:38.043 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:38.043 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:38.044 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:12:38.046 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:12:38.046 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:12:38.047 +00:00 [DBG] Start discovery request
2019-12-14 20:12:38.080 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:38.080 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:12:38.080 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:38.080 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:38.081 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:12:38.081 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:12:38.081 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:12:38.081 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:38.120 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:12:38.123 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:12:38.123 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:12:38.123 +00:00 [DBG] Start authorize request
2019-12-14 20:12:38.123 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:12:38.124 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:12:38.124 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:12:38.125 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:12:38.125 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"nLFFn8yQp7ZJx3QWTFyaspdCwLB3qGnUPzzwZKIUgxWoW","UiLocales":null,"Nonce":"nLFFn8yQp7ZJx3QWTFyaspdCwLB3qGnUPzzwZKIUgxWoW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"25cadc2bae97684936844f85ad0e92ed","Raw":{"response_type":"id_token token","client_id":"angular","state":"nLFFn8yQp7ZJx3QWTFyaspdCwLB3qGnUPzzwZKIUgxWoW","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"nLFFn8yQp7ZJx3QWTFyaspdCwLB3qGnUPzzwZKIUgxWoW"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:12:38.144 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:12:38.144 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:12:38.144 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:12:38.144 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:12:38.145 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:12:38.147 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:12:38.148 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:12:38.152 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****tpOg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Qp_Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q6EER8T4:0000000B","TimeStamp":"2019-12-14T20:12:38.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:12:38.176 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"nLFFn8yQp7ZJx3QWTFyaspdCwLB3qGnUPzzwZKIUgxWoW","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:12:39.736 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:39.738 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:12:39.738 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:39.738 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:39.739 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:12:39.739 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:12:39.739 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:12:39.739 +00:00 [DBG] Start discovery request
2019-12-14 20:12:39.753 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:39.757 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:12:39.757 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:39.758 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:39.758 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:12:39.760 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:12:39.760 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:12:39.760 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:40.365 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:40.365 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:12:40.365 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:40.365 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:40.366 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:12:40.366 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:12:40.366 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:12:40.367 +00:00 [DBG] Start discovery request
2019-12-14 20:12:40.382 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:12:40.382 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:12:40.382 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:12:40.382 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:12:40.383 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:12:40.383 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:12:40.383 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:12:40.383 +00:00 [DBG] Start key discovery request
2019-12-14 20:12:41.459 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-14 20:12:41.460 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-14 20:12:41.460 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-14 20:12:41.460 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:12:41.460 +00:00 [DBG] Start end session request validation
2019-12-14 20:12:41.460 +00:00 [DBG] Start identity token validation
2019-12-14 20:12:41.463 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:12:41.463 +00:00 [DBG] Client found: angular / SPA Client
2019-12-14 20:12:41.501 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-14 20:12:41.502 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576354358,"exp":1576354658,"iss":"http://localhost:5000","aud":"angular","nonce":"nLFFn8yQp7ZJx3QWTFyaspdCwLB3qGnUPzzwZKIUgxWoW","iat":1576354358,"at_hash":"We22E7Jpv1KjomwduLfCuw","sid":"25cadc2bae97684936844f85ad0e92ed","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576354313,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-14 20:12:41.502 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-14 20:12:41.504 +00:00 [ERR] Error processing end session request Invalid request
2019-12-14 20:12:50.693 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-14 20:12:50.694 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-14 20:12:50.694 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-14 20:12:50.695 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS0Q6EER8T4:0000000D","TimeStamp":"2019-12-14T20:12:50.0000000Z","ProcessId":1601,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-14 20:12:50.806 +00:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-12-14 20:12:50.815 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-12-14 20:12:50.825 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-12-14 20:12:50.826 +00:00 [DBG] Processing signout callback request
2019-12-14 20:12:50.828 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:12:50.828 +00:00 [DBG] No client front-channel logout URLs
2019-12-14 20:12:50.829 +00:00 [DBG] No client back-channel logout URLs
2019-12-14 20:12:50.830 +00:00 [INF] Successful signout callback.
2019-12-14 20:12:50.831 +00:00 [DBG] No client front-channel iframe urls
2019-12-14 20:12:50.832 +00:00 [DBG] No client back-channel iframe urls
2019-12-14 20:15:13.484 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-14 20:15:13.611 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-14 20:15:13.657 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-14 20:15:13.659 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-14 20:15:13.660 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-14 20:15:13.676 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-14 20:15:13.681 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-14 20:15:13.685 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-14 20:15:40.588 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:15:40.636 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:15:40.642 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:15:40.643 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:15:40.719 +00:00 [DBG] Login Url: /Account/Login
2019-12-14 20:15:40.720 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-14 20:15:40.723 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-14 20:15:40.725 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-14 20:15:40.727 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-14 20:15:40.729 +00:00 [DBG] Error Url: /home/error
2019-12-14 20:15:40.730 +00:00 [DBG] Error Id Parameter: errorId
2019-12-14 20:15:40.782 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:15:41.021 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:15:41.022 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:15:41.029 +00:00 [DBG] Start discovery request
2019-12-14 20:15:41.149 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:15:41.150 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:15:41.152 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:15:41.152 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:15:41.154 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:15:41.155 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:15:41.158 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:15:41.181 +00:00 [DBG] Start key discovery request
2019-12-14 20:15:41.320 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:15:41.321 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:15:41.321 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:15:41.322 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:15:41.322 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:15:41.347 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:15:41.348 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:15:41.349 +00:00 [DBG] Start discovery request
2019-12-14 20:15:41.382 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:15:41.382 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:15:41.383 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:15:41.383 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:15:41.384 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:15:41.386 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:15:41.387 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:15:41.387 +00:00 [DBG] Start key discovery request
2019-12-14 20:15:49.758 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:15:49.759 +00:00 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-14 20:15:51.263 +00:00 [DBG] Augmenting SignInContext
2019-12-14 20:15:51.267 +00:00 [DBG] Adding idp claim with value: local
2019-12-14 20:15:51.268 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-14 20:15:51.268 +00:00 [DBG] Adding auth_time claim with value: 1576354551
2019-12-14 20:15:51.290 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 20:15:51.349 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS0Q9HURUVP:00000002","TimeStamp":"2019-12-14T20:15:51.0000000Z","ProcessId":1758,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-14 20:16:02.598 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:02.599 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:16:02.599 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:02.599 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:02.600 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:16:02.601 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:16:02.601 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:16:02.602 +00:00 [DBG] Start discovery request
2019-12-14 20:16:02.612 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:02.613 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:16:02.613 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:02.613 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:02.613 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:16:02.614 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:16:02.614 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:16:02.614 +00:00 [DBG] Start key discovery request
2019-12-14 20:16:02.647 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:16:02.654 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:16:02.655 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:16:02.666 +00:00 [DBG] Start authorize request
2019-12-14 20:16:02.678 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:16:02.691 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:16:02.726 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:16:02.794 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:16:02.808 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"TXOKsL1pOj_3tMiotkkOCnR0tTFena6ziSjMFINY9XlU1","UiLocales":null,"Nonce":"TXOKsL1pOj_3tMiotkkOCnR0tTFena6ziSjMFINY9XlU1","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f5064abb67b2dde0325d7af8616d0c05","Raw":{"response_type":"id_token token","client_id":"angular","state":"TXOKsL1pOj_3tMiotkkOCnR0tTFena6ziSjMFINY9XlU1","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"TXOKsL1pOj_3tMiotkkOCnR0tTFena6ziSjMFINY9XlU1"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:16:02.889 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:16:02.904 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:16:02.924 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:16:02.925 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:16:02.940 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:16:03.043 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:16:03.045 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:16:03.057 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****-fcQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****IYCg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q9HURUVP:00000005","TimeStamp":"2019-12-14T20:16:03.0000000Z","ProcessId":1758,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:16:03.061 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"TXOKsL1pOj_3tMiotkkOCnR0tTFena6ziSjMFINY9XlU1","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:16:03.087 +00:00 [DBG] Augmenting SignInContext
2019-12-14 20:16:03.088 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-14 20:16:05.470 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:05.470 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:16:05.470 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:05.470 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:05.470 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:16:05.471 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:16:05.471 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:16:05.471 +00:00 [DBG] Start discovery request
2019-12-14 20:16:05.482 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:05.482 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:16:05.482 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:05.482 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:05.482 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:16:05.483 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:16:05.483 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:16:05.483 +00:00 [DBG] Start key discovery request
2019-12-14 20:16:06.598 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:06.598 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:16:06.599 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:06.599 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:06.599 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:16:06.600 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:16:06.600 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:16:06.600 +00:00 [DBG] Start discovery request
2019-12-14 20:16:06.614 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:06.614 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:16:06.615 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:06.615 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:06.615 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:16:06.616 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:16:06.616 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:16:06.617 +00:00 [DBG] Start key discovery request
2019-12-14 20:16:13.271 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:13.271 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:16:13.271 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:13.271 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:13.272 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:16:13.272 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:16:13.272 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:16:13.272 +00:00 [DBG] Start discovery request
2019-12-14 20:16:13.283 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:13.284 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:16:13.284 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:13.285 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:13.285 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:16:13.285 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:16:13.285 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:16:13.285 +00:00 [DBG] Start key discovery request
2019-12-14 20:16:13.318 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-14 20:16:13.320 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-14 20:16:13.320 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-14 20:16:13.320 +00:00 [DBG] Start authorize request
2019-12-14 20:16:13.321 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:16:13.321 +00:00 [DBG] Start authorize request protocol validation
2019-12-14 20:16:13.321 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-14 20:16:13.328 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-14 20:16:13.328 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"AzbS8WPMoO4Xs8YFaSqnH_y3tqCLHdlbUWr0FfkdmhFCv","UiLocales":null,"Nonce":"AzbS8WPMoO4Xs8YFaSqnH_y3tqCLHdlbUWr0FfkdmhFCv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f5064abb67b2dde0325d7af8616d0c05","Raw":{"response_type":"id_token token","client_id":"angular","state":"AzbS8WPMoO4Xs8YFaSqnH_y3tqCLHdlbUWr0FfkdmhFCv","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"AzbS8WPMoO4Xs8YFaSqnH_y3tqCLHdlbUWr0FfkdmhFCv"},"$type":"AuthorizeRequestValidationLog"}
2019-12-14 20:16:13.379 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-14 20:16:13.382 +00:00 [DBG] Creating Implicit Flow response.
2019-12-14 20:16:13.382 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-14 20:16:13.382 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-14 20:16:13.383 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:16:13.388 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-14 20:16:13.389 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-14 20:16:13.392 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****vx7A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****h73w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS0Q9HURUVP:00000006","TimeStamp":"2019-12-14T20:16:13.0000000Z","ProcessId":1758,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-14 20:16:13.392 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"AzbS8WPMoO4Xs8YFaSqnH_y3tqCLHdlbUWr0FfkdmhFCv","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-14 20:16:14.837 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:14.838 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:16:14.838 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:14.838 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:14.840 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:16:14.841 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:16:14.842 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:16:14.843 +00:00 [DBG] Start discovery request
2019-12-14 20:16:14.858 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:14.860 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:16:14.861 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:14.861 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:14.861 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:16:14.862 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:16:14.862 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:16:14.862 +00:00 [DBG] Start key discovery request
2019-12-14 20:16:15.677 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:15.677 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-14 20:16:15.677 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:15.678 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:15.678 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-14 20:16:15.678 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-14 20:16:15.678 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-14 20:16:15.678 +00:00 [DBG] Start discovery request
2019-12-14 20:16:15.696 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-14 20:16:15.696 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-14 20:16:15.697 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-14 20:16:15.697 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-14 20:16:15.697 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-14 20:16:15.699 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-14 20:16:15.699 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-14 20:16:15.699 +00:00 [DBG] Start key discovery request
2019-12-16 16:55:54.849 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 16:55:55.078 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 16:55:55.099 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 16:55:55.100 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 16:55:55.101 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 16:55:55.102 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 16:55:55.104 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 16:55:55.106 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 16:57:45.705 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 16:57:45.799 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 16:57:45.805 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 16:57:45.806 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 16:57:45.899 +00:00 [DBG] Login Url: /Account/Login
2019-12-16 16:57:45.899 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 16:57:45.900 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-16 16:57:45.901 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-16 16:57:45.902 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 16:57:45.905 +00:00 [DBG] Error Url: /home/error
2019-12-16 16:57:45.908 +00:00 [DBG] Error Id Parameter: errorId
2019-12-16 16:57:45.951 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 16:57:46.183 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 16:57:46.184 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 16:57:46.193 +00:00 [DBG] Start discovery request
2019-12-16 16:57:46.324 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 16:57:46.325 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 16:57:46.326 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 16:57:46.349 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 16:57:46.351 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 16:57:46.354 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 16:57:46.355 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 16:57:46.407 +00:00 [DBG] Start key discovery request
2019-12-16 16:57:47.706 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 16:57:47.722 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 16:57:47.722 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 16:57:47.730 +00:00 [DBG] Start authorize request
2019-12-16 16:57:47.747 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 16:57:47.756 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 16:57:47.780 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 16:57:47.841 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 16:57:47.860 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"Gca8Pm8oh1OI5PD1U6J3b8z0IUXWZ3FQq8aZae3d7mTZ2","UiLocales":null,"Nonce":"Gca8Pm8oh1OI5PD1U6J3b8z0IUXWZ3FQq8aZae3d7mTZ2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f5064abb67b2dde0325d7af8616d0c05","Raw":{"response_type":"id_token token","client_id":"angular","state":"Gca8Pm8oh1OI5PD1U6J3b8z0IUXWZ3FQq8aZae3d7mTZ2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"Gca8Pm8oh1OI5PD1U6J3b8z0IUXWZ3FQq8aZae3d7mTZ2"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 16:57:47.924 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-16 16:57:47.935 +00:00 [DBG] Creating Implicit Flow response.
2019-12-16 16:57:47.952 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-16 16:57:47.953 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 16:57:47.964 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 16:57:48.081 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-16 16:57:48.084 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 16:57:48.129 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4iBg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****s0ow","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS2949C1CD7:00000001","TimeStamp":"2019-12-16T16:57:48.0000000Z","ProcessId":1860,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-16 16:57:48.133 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"Gca8Pm8oh1OI5PD1U6J3b8z0IUXWZ3FQq8aZae3d7mTZ2","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-16 16:57:55.429 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 16:57:55.429 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 16:57:55.429 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 16:57:55.430 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 16:57:55.430 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 16:57:55.430 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 16:57:55.430 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 16:57:55.431 +00:00 [DBG] Start discovery request
2019-12-16 16:57:55.472 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 16:57:55.473 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 16:57:55.473 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 16:57:55.474 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 16:57:55.475 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 16:57:55.480 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 16:57:55.488 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 16:57:55.489 +00:00 [DBG] Start key discovery request
2019-12-16 16:58:01.972 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 16:58:01.972 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 16:58:01.972 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 16:58:01.972 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 16:58:01.972 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 16:58:01.973 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 16:58:01.973 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 16:58:01.973 +00:00 [DBG] Start discovery request
2019-12-16 16:58:01.990 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 16:58:01.990 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 16:58:01.991 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 16:58:01.991 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 16:58:01.991 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 16:58:01.991 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 16:58:01.991 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 16:58:01.991 +00:00 [DBG] Start key discovery request
2019-12-16 16:58:03.376 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-16 16:58:03.381 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-16 16:58:03.383 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-16 16:58:03.416 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 16:58:03.486 +00:00 [DBG] Start end session request validation
2019-12-16 16:58:03.554 +00:00 [DBG] Start identity token validation
2019-12-16 16:58:03.575 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 16:58:03.575 +00:00 [DBG] Client found: angular / SPA Client
2019-12-16 16:58:03.677 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-16 16:58:03.706 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576515468,"exp":1576515768,"iss":"http://localhost:5000","aud":"angular","nonce":"Gca8Pm8oh1OI5PD1U6J3b8z0IUXWZ3FQq8aZae3d7mTZ2","iat":1576515468,"at_hash":"5uW-XA53bL8JCCsR9iMKTQ","sid":"f5064abb67b2dde0325d7af8616d0c05","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576354551,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-16 16:58:03.731 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-16 16:58:03.735 +00:00 [ERR] Error processing end session request Invalid request
2019-12-16 17:00:45.993 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 17:00:46.110 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 17:00:46.133 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 17:00:46.137 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 17:00:46.146 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 17:00:46.147 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 17:00:46.149 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 17:00:46.151 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 17:01:40.010 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.058 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:40.065 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.066 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.141 +00:00 [DBG] Login Url: /Account/Login
2019-12-16 17:01:40.142 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 17:01:40.144 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-16 17:01:40.146 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-16 17:01:40.147 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 17:01:40.148 +00:00 [DBG] Error Url: /home/error
2019-12-16 17:01:40.148 +00:00 [DBG] Error Id Parameter: errorId
2019-12-16 17:01:40.195 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:40.407 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:40.410 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:40.417 +00:00 [DBG] Start discovery request
2019-12-16 17:01:40.531 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.532 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:40.535 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.536 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.539 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:40.544 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:40.545 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:40.545 +00:00 [DBG] Start discovery request
2019-12-16 17:01:40.623 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.623 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:40.623 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.623 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.628 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:40.654 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:40.654 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:40.696 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:40.701 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.701 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:40.702 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.702 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.704 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:40.705 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:40.705 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:40.705 +00:00 [DBG] Start discovery request
2019-12-16 17:01:40.741 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.741 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:40.741 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.741 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.741 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:40.742 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:40.742 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:40.742 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:40.752 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.762 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:40.762 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.762 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.762 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:40.763 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:40.763 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:40.763 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:40.885 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.885 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:40.885 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.885 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.886 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:40.887 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:40.887 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:40.887 +00:00 [DBG] Start discovery request
2019-12-16 17:01:40.896 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:40.896 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:40.897 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:40.897 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:40.898 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:40.899 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:40.899 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:40.900 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:41.531 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:41.532 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:41.533 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:41.534 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:41.535 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:41.536 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:41.536 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:41.537 +00:00 [DBG] Start discovery request
2019-12-16 17:01:41.547 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:41.547 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:41.548 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:41.548 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:41.548 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:41.549 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:41.549 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:41.550 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:43.522 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:43.523 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:43.523 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:43.523 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:43.524 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:43.525 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:43.525 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:43.525 +00:00 [DBG] Start discovery request
2019-12-16 17:01:43.567 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:43.567 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:43.568 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:43.568 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:43.568 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:43.569 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:43.569 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:43.569 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:43.681 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 17:01:43.701 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 17:01:43.701 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 17:01:43.712 +00:00 [DBG] Start authorize request
2019-12-16 17:01:43.733 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:01:43.741 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:01:43.767 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:01:43.826 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:01:43.846 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"rfZqvq9WxIg5QGRChD0wYuPyD_-I7CJv7SGC8MBMWkr4e","UiLocales":null,"Nonce":"rfZqvq9WxIg5QGRChD0wYuPyD_-I7CJv7SGC8MBMWkr4e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f5064abb67b2dde0325d7af8616d0c05","Raw":{"response_type":"id_token token","client_id":"angular","state":"rfZqvq9WxIg5QGRChD0wYuPyD_-I7CJv7SGC8MBMWkr4e","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"rfZqvq9WxIg5QGRChD0wYuPyD_-I7CJv7SGC8MBMWkr4e"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 17:01:45.263 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-16 17:01:45.275 +00:00 [DBG] Creating Implicit Flow response.
2019-12-16 17:01:45.291 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-16 17:01:45.292 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:01:45.305 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:01:45.411 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-16 17:01:45.412 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:01:45.455 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****F-cw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****_k2A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS296F6POI8:00000001","TimeStamp":"2019-12-16T17:01:45.0000000Z","ProcessId":1992,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-16 17:01:45.461 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"rfZqvq9WxIg5QGRChD0wYuPyD_-I7CJv7SGC8MBMWkr4e","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-16 17:01:46.524 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:46.524 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:46.524 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:46.526 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:46.527 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:46.527 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:46.527 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:46.527 +00:00 [DBG] Start discovery request
2019-12-16 17:01:46.551 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:46.552 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:46.552 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:46.553 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:46.553 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:46.554 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:46.555 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:46.556 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:47.693 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:47.694 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:01:47.694 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:47.694 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:47.694 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:01:47.694 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:01:47.695 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:01:47.695 +00:00 [DBG] Start discovery request
2019-12-16 17:01:47.713 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:01:47.714 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:01:47.715 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:01:47.715 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:01:47.715 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:01:47.716 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:01:47.716 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:01:47.717 +00:00 [DBG] Start key discovery request
2019-12-16 17:01:48.731 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-16 17:01:48.748 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-16 17:01:48.748 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-16 17:01:48.760 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:01:48.771 +00:00 [DBG] Start end session request validation
2019-12-16 17:01:48.783 +00:00 [DBG] Start identity token validation
2019-12-16 17:01:48.792 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:01:48.792 +00:00 [DBG] Client found: angular / SPA Client
2019-12-16 17:01:48.902 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-16 17:01:48.911 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576515705,"exp":1576516005,"iss":"http://localhost:5000","aud":"angular","nonce":"rfZqvq9WxIg5QGRChD0wYuPyD_-I7CJv7SGC8MBMWkr4e","iat":1576515705,"at_hash":"WVKqgf0r4G4susqD56Wi2A","sid":"f5064abb67b2dde0325d7af8616d0c05","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576354551,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-16 17:01:48.928 +00:00 [INF] End session request validation failure: Invalid post logout URI
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-16 17:01:48.931 +00:00 [ERR] Error processing end session request Invalid request
2019-12-16 17:02:59.357 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-16 17:02:59.361 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-16 17:02:59.364 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-16 17:02:59.368 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS296F6POI8:00000003","TimeStamp":"2019-12-16T17:02:59.0000000Z","ProcessId":1992,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-16 17:03:50.052 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 252
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 217
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:17:17.531 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 17:17:17.626 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 17:17:17.652 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 17:17:17.653 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 17:17:17.654 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 17:17:17.656 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 17:17:17.658 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 17:17:17.668 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 17:17:52.791 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:17:52.846 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:17:52.852 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:17:52.853 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:17:52.985 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:17:56.242 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:17:56.242 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:17:56.243 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:17:56.243 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:17:56.281 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:17:56.665 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:17:56.666 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:17:56.667 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:17:56.667 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:17:56.669 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:17:57.012 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:17:57.012 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:17:57.012 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:17:57.013 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:17:57.014 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:17:57.906 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:17:57.907 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:17:57.908 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:17:57.908 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:17:57.910 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:17:59.155 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:17:59.155 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:17:59.156 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:17:59.156 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:17:59.158 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:17:59.913 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:17:59.913 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:17:59.913 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:17:59.913 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:17:59.915 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:18:00.343 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:18:00.344 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:18:00.344 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:18:00.344 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:18:00.347 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:18:00.534 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:18:00.535 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:18:00.535 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:18:00.536 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:18:00.538 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:18:00.679 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:18:00.680 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:18:00.680 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:18:00.680 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:18:00.684 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:18:30.585 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Options.ClientId must be provided
Parameter name: ClientId
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:20:29.233 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 17:20:29.404 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 17:20:29.507 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 17:20:29.519 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 17:20:29.523 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 17:20:29.526 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 17:20:29.535 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 17:20:29.536 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 17:20:55.146 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:20:57.905 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:20:58.635 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:20:58.858 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:20:59.072 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions.Validate()
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationOptions.Validate(String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\FederatedSignOut\FederatedSignoutAuthenticationHandlerProvider.cs:line 33
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:26:33.604 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 17:26:33.819 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 17:26:33.884 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 17:26:33.898 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 17:26:33.932 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 17:26:33.946 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 17:26:34.021 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 17:26:34.038 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 17:26:49.993 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:26:50.040 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:26:50.046 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:26:50.046 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:26:50.131 +00:00 [DBG] Login Url: /Account/Login
2019-12-16 17:26:50.132 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 17:26:50.133 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-16 17:26:50.134 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-16 17:26:50.135 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 17:26:50.135 +00:00 [DBG] Error Url: /home/error
2019-12-16 17:26:50.135 +00:00 [DBG] Error Id Parameter: errorId
2019-12-16 17:26:50.182 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:26:50.389 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:26:50.390 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:26:50.399 +00:00 [DBG] Start discovery request
2019-12-16 17:26:50.517 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:26:50.518 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:26:50.518 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:26:50.518 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:26:50.519 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:26:50.521 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:26:50.521 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:26:50.537 +00:00 [DBG] Start key discovery request
2019-12-16 17:26:50.623 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 17:26:50.637 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 17:26:50.638 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 17:26:50.645 +00:00 [DBG] Start authorize request
2019-12-16 17:26:50.662 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:26:50.672 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:26:50.702 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:26:50.780 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:26:50.801 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"lYsCyClB8PvpBEJjriaVlBNdwbYtQnZRX5BDpsUd7EkCw","UiLocales":null,"Nonce":"lYsCyClB8PvpBEJjriaVlBNdwbYtQnZRX5BDpsUd7EkCw","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f5064abb67b2dde0325d7af8616d0c05","Raw":{"response_type":"id_token token","client_id":"angular","state":"lYsCyClB8PvpBEJjriaVlBNdwbYtQnZRX5BDpsUd7EkCw","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"lYsCyClB8PvpBEJjriaVlBNdwbYtQnZRX5BDpsUd7EkCw"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 17:26:51.568 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:26:51.568 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:26:51.568 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:26:51.568 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:26:51.569 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:26:51.569 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:26:51.570 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:26:51.570 +00:00 [DBG] Start discovery request
2019-12-16 17:26:51.598 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:26:51.598 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:26:51.600 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:26:51.600 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:26:51.601 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:26:51.601 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:26:51.601 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:26:51.601 +00:00 [DBG] Start key discovery request
2019-12-16 17:26:52.027 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-16 17:26:52.040 +00:00 [DBG] Creating Implicit Flow response.
2019-12-16 17:26:52.056 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-16 17:26:52.057 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:26:52.069 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:26:52.176 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-16 17:26:52.177 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:26:52.217 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****AUnA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aU-w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS29KH74QCD:00000001","TimeStamp":"2019-12-16T17:26:52.0000000Z","ProcessId":2529,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-16 17:26:52.220 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"lYsCyClB8PvpBEJjriaVlBNdwbYtQnZRX5BDpsUd7EkCw","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-16 17:27:00.463 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:27:00.464 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:27:00.464 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:27:00.464 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:27:00.464 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:27:00.465 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:27:00.465 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:27:00.465 +00:00 [DBG] Start discovery request
2019-12-16 17:27:00.487 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:27:00.487 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:27:00.487 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:27:00.487 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:27:00.488 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:27:00.488 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:27:00.488 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:27:00.488 +00:00 [DBG] Start key discovery request
2019-12-16 17:27:03.102 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:27:03.103 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:27:03.103 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:27:03.103 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:27:03.103 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:27:03.105 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:27:03.105 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:27:03.105 +00:00 [DBG] Start discovery request
2019-12-16 17:27:03.154 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:27:03.154 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:27:03.154 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:27:03.154 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:27:03.154 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:27:03.155 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:27:03.155 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:27:03.155 +00:00 [DBG] Start key discovery request
2019-12-16 17:27:05.538 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-16 17:27:05.541 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-16 17:27:05.566 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-16 17:27:05.638 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:27:05.657 +00:00 [DBG] Start end session request validation
2019-12-16 17:27:05.674 +00:00 [DBG] Start identity token validation
2019-12-16 17:27:05.682 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:27:05.682 +00:00 [DBG] Client found: angular / SPA Client
2019-12-16 17:27:05.722 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-16 17:27:05.725 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576517212,"exp":1576517512,"iss":"http://localhost:5000","aud":"angular","nonce":"lYsCyClB8PvpBEJjriaVlBNdwbYtQnZRX5BDpsUd7EkCw","iat":1576517212,"at_hash":"4imsjox4HyinZqk-ndSUOA","sid":"f5064abb67b2dde0325d7af8616d0c05","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576354551,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-16 17:27:05.732 +00:00 [INF] End session request validation success
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-16 17:27:05.734 +00:00 [DBG] Success validating end session request from angular
2019-12-16 17:27:47.637 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-16 17:27:47.638 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-16 17:27:47.641 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-16 17:27:47.647 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS29KH74QCD:00000003","TimeStamp":"2019-12-16T17:27:47.0000000Z","ProcessId":2529,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-16 17:28:00.419 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:00.420 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:28:00.420 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:00.420 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:00.422 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:28:00.422 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:28:00.423 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:28:00.423 +00:00 [DBG] Start discovery request
2019-12-16 17:28:00.436 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:00.437 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:28:00.438 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:00.438 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:00.439 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:28:00.439 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:28:00.440 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:28:00.440 +00:00 [DBG] Start key discovery request
2019-12-16 17:28:00.500 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 17:28:00.502 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 17:28:00.509 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 17:28:00.509 +00:00 [DBG] Start authorize request
2019-12-16 17:28:00.510 +00:00 [DBG] No user present in authorize request
2019-12-16 17:28:00.510 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:28:00.517 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:00.519 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:28:00.520 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"0tMlKc0zmcNe5SHCnsJLLzbEwIruYpfDwTT2sQ0oysnsf","UiLocales":null,"Nonce":"0tMlKc0zmcNe5SHCnsJLLzbEwIruYpfDwTT2sQ0oysnsf","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"0tMlKc0zmcNe5SHCnsJLLzbEwIruYpfDwTT2sQ0oysnsf","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"0tMlKc0zmcNe5SHCnsJLLzbEwIruYpfDwTT2sQ0oysnsf"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 17:28:00.529 +00:00 [INF] Showing login: User is not authenticated
2019-12-16 17:28:00.747 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:28:00.748 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:00.749 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:28:00.754 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:01.224 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:01.225 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:28:01.225 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:01.225 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:01.226 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:28:01.226 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:28:01.226 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:28:01.226 +00:00 [DBG] Start discovery request
2019-12-16 17:28:01.246 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:01.246 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:28:01.246 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:01.247 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:01.247 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:28:01.248 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:28:01.248 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:28:01.248 +00:00 [DBG] Start key discovery request
2019-12-16 17:28:07.644 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:07.644 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:28:07.644 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:07.644 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:07.644 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:28:07.646 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:28:07.646 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:28:07.646 +00:00 [DBG] Start discovery request
2019-12-16 17:28:07.679 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:07.679 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:28:07.680 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:07.680 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:07.681 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:28:07.682 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:28:07.682 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:28:07.682 +00:00 [DBG] Start key discovery request
2019-12-16 17:28:07.741 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 17:28:07.742 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 17:28:07.743 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 17:28:07.743 +00:00 [DBG] Start authorize request
2019-12-16 17:28:07.743 +00:00 [DBG] No user present in authorize request
2019-12-16 17:28:07.743 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:28:07.744 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:07.744 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:28:07.745 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP","UiLocales":null,"Nonce":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 17:28:07.745 +00:00 [INF] Showing login: User is not authenticated
2019-12-16 17:28:07.760 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:28:07.760 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:07.761 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:28:07.762 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:13.752 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:13.753 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 17:28:13.826 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:28:13.827 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:13.829 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:28:14.277 +00:00 [DBG] Augmenting SignInContext
2019-12-16 17:28:14.281 +00:00 [DBG] Adding idp claim with value: local
2019-12-16 17:28:14.281 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-16 17:28:14.281 +00:00 [DBG] Adding auth_time claim with value: 1576517294
2019-12-16 17:28:14.294 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-16 17:28:14.332 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS29KH74QCH:00000008","TimeStamp":"2019-12-16T17:28:14.0000000Z","ProcessId":2529,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLoginSuccessEvent"}
2019-12-16 17:28:14.334 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:14.357 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-16 17:28:14.360 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-16 17:28:14.360 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-16 17:28:14.373 +00:00 [DBG] Start authorize callback request
2019-12-16 17:28:14.381 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:28:14.381 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:28:14.381 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:28:14.384 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:28:14.386 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP","UiLocales":null,"Nonce":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3a3c7ba9e5281afc4035b2b4989ab1fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 17:28:14.402 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-16 17:28:14.402 +00:00 [DBG] Creating Implicit Flow response.
2019-12-16 17:28:14.402 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-16 17:28:14.402 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:28:14.403 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:28:14.426 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-16 17:28:14.427 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:28:14.430 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****tgEA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****F6BA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS29KH74QCH:00000009","TimeStamp":"2019-12-16T17:28:14.0000000Z","ProcessId":2529,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-16 17:28:14.454 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"AnFZsk79wwv7qLj76bVhyjZjifYm9PAtsS_AUrlVSkeQP","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-16 17:28:14.466 +00:00 [DBG] Augmenting SignInContext
2019-12-16 17:28:14.469 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-16 17:28:20.470 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:20.471 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:28:20.471 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:20.471 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:20.471 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:28:20.472 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:28:20.472 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:28:20.472 +00:00 [DBG] Start discovery request
2019-12-16 17:28:20.489 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:20.489 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:28:20.490 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:20.490 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:20.491 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:28:20.491 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:28:20.492 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:28:20.492 +00:00 [DBG] Start key discovery request
2019-12-16 17:28:22.638 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:22.638 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:28:22.638 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:22.638 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:22.638 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:28:22.639 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:28:22.639 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:28:22.639 +00:00 [DBG] Start discovery request
2019-12-16 17:28:22.666 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:28:22.667 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:28:22.667 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:28:22.667 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:28:22.668 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:28:22.669 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:28:22.669 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:28:22.670 +00:00 [DBG] Start key discovery request
2019-12-16 17:47:14.791 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 17:47:14.856 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 17:47:14.874 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 17:47:14.874 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 17:47:14.875 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 17:47:14.875 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 17:47:14.875 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 17:47:14.876 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 17:47:21.914 +00:00 [DBG] Login Url: /Account/Login
2019-12-16 17:47:21.916 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 17:47:21.916 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-16 17:47:21.916 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-16 17:47:21.917 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 17:47:21.917 +00:00 [DBG] Error Url: /home/error
2019-12-16 17:47:21.917 +00:00 [DBG] Error Id Parameter: errorId
2019-12-16 17:47:42.257 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-16 17:47:42.258 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-16 17:47:42.262 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-16 17:47:42.302 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS2A008U049:00000003","TimeStamp":"2019-12-16T17:47:42.0000000Z","ProcessId":2673,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-16 17:47:49.912 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Value cannot be null or empty.
Parameter name: url
   at Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(String url)
   at IdentityServer4.Quickstart.UI.AccountController.Logout(LogoutInputModel model) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 252
   at IdentityServer4.Quickstart.UI.AccountController.Logout(String logoutId) in E:\InHand\Desktop\Microservices\Final Project\eShop\src\Services\Identity\Identity.API\Controllers\AccountController.cs:line 217
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-12-16 17:53:10.682 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:53:10.703 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:53:10.711 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:53:10.712 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:53:10.716 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:53:10.724 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:53:10.724 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:53:10.731 +00:00 [DBG] Start discovery request
2019-12-16 17:53:10.789 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:53:10.790 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:53:10.796 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:53:10.796 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:53:10.796 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:53:10.798 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:53:10.798 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:53:10.805 +00:00 [DBG] Start key discovery request
2019-12-16 17:53:10.848 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 17:53:10.946 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 17:53:10.990 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 17:53:10.998 +00:00 [DBG] Start authorize request
2019-12-16 17:53:11.016 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:53:11.026 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 17:53:11.056 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:53:11.120 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 17:53:11.137 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"LZhnaTn0uPJmUs_1_pChSWUqqXZ4WsyrKjKOEwInmGKAV","UiLocales":null,"Nonce":"LZhnaTn0uPJmUs_1_pChSWUqqXZ4WsyrKjKOEwInmGKAV","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3a3c7ba9e5281afc4035b2b4989ab1fa","Raw":{"response_type":"id_token token","client_id":"angular","state":"LZhnaTn0uPJmUs_1_pChSWUqqXZ4WsyrKjKOEwInmGKAV","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"LZhnaTn0uPJmUs_1_pChSWUqqXZ4WsyrKjKOEwInmGKAV"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 17:53:12.224 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-16 17:53:12.240 +00:00 [DBG] Creating Implicit Flow response.
2019-12-16 17:53:12.257 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-16 17:53:12.260 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:53:12.274 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:53:12.376 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-16 17:53:12.377 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-16 17:53:12.387 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Z5TQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****BTxA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS2A008U04F:00000001","TimeStamp":"2019-12-16T17:53:12.0000000Z","ProcessId":2673,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-16 17:53:12.390 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"LZhnaTn0uPJmUs_1_pChSWUqqXZ4WsyrKjKOEwInmGKAV","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-16 17:53:18.626 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:53:18.626 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:53:18.627 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:53:18.627 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:53:18.627 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:53:18.627 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:53:18.627 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:53:18.628 +00:00 [DBG] Start discovery request
2019-12-16 17:53:18.655 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:53:18.656 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:53:18.656 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:53:18.656 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:53:18.656 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:53:18.656 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:53:18.657 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:53:18.657 +00:00 [DBG] Start key discovery request
2019-12-16 17:53:19.495 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:53:19.495 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 17:53:19.495 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:53:19.496 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:53:19.496 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 17:53:19.497 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 17:53:19.497 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 17:53:19.497 +00:00 [DBG] Start discovery request
2019-12-16 17:53:19.523 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 17:53:19.523 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 17:53:19.523 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 17:53:19.524 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 17:53:19.524 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 17:53:19.526 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 17:53:19.526 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 17:53:19.526 +00:00 [DBG] Start key discovery request
2019-12-16 17:53:21.845 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-16 17:53:21.848 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-16 17:53:21.848 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-16 17:53:21.862 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-16 17:53:21.872 +00:00 [DBG] Start end session request validation
2019-12-16 17:53:21.884 +00:00 [DBG] Start identity token validation
2019-12-16 17:53:21.893 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 17:53:21.894 +00:00 [DBG] Client found: angular / SPA Client
2019-12-16 17:53:21.941 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-16 17:53:21.944 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576518792,"exp":1576519092,"iss":"http://localhost:5000","aud":"angular","nonce":"LZhnaTn0uPJmUs_1_pChSWUqqXZ4WsyrKjKOEwInmGKAV","iat":1576518792,"at_hash":"-NK2YnQXRaGKnC4KynIRlQ","sid":"3a3c7ba9e5281afc4035b2b4989ab1fa","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576517294,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-16 17:53:21.951 +00:00 [INF] End session request validation success
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-16 17:53:21.951 +00:00 [DBG] Success validating end session request from angular
2019-12-16 17:53:27.555 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-16 17:53:27.555 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-16 17:53:27.555 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-16 17:53:27.556 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS2A008U04F:00000003","TimeStamp":"2019-12-16T17:53:27.0000000Z","ProcessId":2673,"LocalIpAddress":"::ffff:172.25.0.3:80","RemoteIpAddress":"::ffff:172.25.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-16 18:13:19.387 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 18:13:19.388 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 18:13:19.388 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 18:13:19.389 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 18:13:19.390 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 18:13:19.391 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 18:13:19.392 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 18:13:19.392 +00:00 [DBG] Start discovery request
2019-12-16 18:13:19.406 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 18:13:19.407 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 18:13:19.407 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 18:13:19.407 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 18:13:19.408 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 18:13:19.408 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 18:13:19.409 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 18:13:19.409 +00:00 [DBG] Start key discovery request
2019-12-16 18:13:19.443 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 18:13:19.445 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 18:13:19.446 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 18:13:19.446 +00:00 [DBG] Start authorize request
2019-12-16 18:13:19.447 +00:00 [DBG] No user present in authorize request
2019-12-16 18:13:19.447 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:13:19.449 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:13:19.453 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:13:19.456 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"0P6zOU9g-kP556arwsahxrRYhOS9JSxt3XxCrkec7xyp-","UiLocales":null,"Nonce":"0P6zOU9g-kP556arwsahxrRYhOS9JSxt3XxCrkec7xyp-","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"0P6zOU9g-kP556arwsahxrRYhOS9JSxt3XxCrkec7xyp-","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"0P6zOU9g-kP556arwsahxrRYhOS9JSxt3XxCrkec7xyp-"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 18:13:19.458 +00:00 [INF] Showing login: User is not authenticated
2019-12-16 18:13:19.517 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:13:19.517 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:13:19.518 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:13:19.526 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:31.186 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:17:31.186 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:31.189 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:17:31.211 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:35.387 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:17:35.387 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:35.389 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:17:35.390 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:37.392 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:17:37.393 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:37.393 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:17:37.394 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:39.701 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:17:39.701 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:39.702 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:17:39.702 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:58.255 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:17:58.266 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:17:58.270 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:17:58.270 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:23.667 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:18:23.667 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:23.668 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:18:23.670 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:27.724 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:18:27.726 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:27.727 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:18:27.728 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:45.523 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:18:45.524 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:45.524 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:18:45.524 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:48.509 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 18:18:48.510 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 18:18:48.511 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 18:18:48.511 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 21:51:22.137 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 21:51:22.289 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 21:51:22.299 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 21:51:22.299 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 21:51:22.299 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 21:51:22.299 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 21:51:22.299 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 21:51:22.299 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 21:51:25.972 +03:30 [DBG] Login Url: /Account/Login
2019-12-16 21:51:25.973 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 21:51:25.974 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-16 21:51:25.974 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-16 21:51:25.974 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 21:51:25.974 +03:30 [DBG] Error Url: /home/error
2019-12-16 21:51:25.974 +03:30 [DBG] Error Id Parameter: errorId
2019-12-16 21:57:21.408 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 21:57:21.545 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 21:57:21.561 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 21:57:21.562 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 21:57:21.562 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 21:57:21.562 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 21:57:21.562 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 21:57:21.562 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 21:57:21.890 +03:30 [DBG] Login Url: /Account/Login
2019-12-16 21:57:21.894 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 21:57:21.894 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-16 21:57:21.894 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-16 21:57:21.894 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 21:57:21.894 +03:30 [DBG] Error Url: /home/error
2019-12-16 21:57:21.895 +03:30 [DBG] Error Id Parameter: errorId
2019-12-16 21:58:48.717 +03:30 [DBG] Start authorize request protocol validation
2019-12-16 21:58:48.754 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-12-16 21:58:48.817 +03:30 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 21:58:48.820 +03:30 [DBG] client configuration validation for client angular succeeded.
2019-12-16 22:32:32.965 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:32:32.985 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:32:38.538 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:32:38.538 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:39:47.928 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:39:47.929 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:39:50.890 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:39:50.890 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:40:30.597 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:40:30.597 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:41:27.084 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:41:27.085 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:42:09.449 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:42:09.451 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:43:24.549 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:43:24.549 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:43:24.688 +03:30 [WRN] User ed61cbfb-d29d-43d9-bdf0-67dea8fe1894 password validation failed: PasswordRequiresNonAlphanumeric;PasswordRequiresLower;PasswordRequiresUpper.
2019-12-16 22:47:12.303 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:47:12.303 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:50:58.622 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 22:50:58.680 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 22:50:58.691 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 22:50:58.691 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 22:50:58.691 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 22:50:58.691 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 22:50:58.691 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 22:50:58.691 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 22:50:58.889 +03:30 [DBG] Login Url: /Account/Login
2019-12-16 22:50:58.891 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 22:50:58.891 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-16 22:50:58.892 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-16 22:50:58.892 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 22:50:58.892 +03:30 [DBG] Error Url: /home/error
2019-12-16 22:50:58.892 +03:30 [DBG] Error Id Parameter: errorId
2019-12-16 22:51:19.614 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:51:19.631 +03:30 [DBG] CORS request made for path: /Account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:51:37.158 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:51:37.158 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:51:39.451 +03:30 [INF] {"Username":"eee","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"80000133-0001-f600-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:21:39.0000000Z","ProcessId":20016,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:52:36.076 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 22:52:36.126 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 22:52:36.135 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 22:52:36.135 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 22:52:36.135 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 22:52:36.135 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 22:52:36.135 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 22:52:36.135 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 22:52:36.335 +03:30 [DBG] Login Url: /Account/Login
2019-12-16 22:52:36.338 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 22:52:36.338 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-16 22:52:36.338 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-16 22:52:36.338 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 22:52:36.338 +03:30 [DBG] Error Url: /home/error
2019-12-16 22:52:36.338 +03:30 [DBG] Error Id Parameter: errorId
2019-12-16 22:52:39.332 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:52:39.352 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:52:40.151 +03:30 [INF] {"Username":"eee","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"80000138-0002-f600-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:22:40.0000000Z","ProcessId":22136,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:52:41.846 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:52:41.846 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:52:42.616 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:52:42.616 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:52:44.369 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:52:44.369 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:52:44.394 +03:30 [INF] {"Username":"eee","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"8000013b-0002-f600-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:22:44.0000000Z","ProcessId":22136,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:53:42.867 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:53:42.868 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:53:42.875 +03:30 [INF] {"Username":"eee","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"8000013c-0002-f600-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:23:42.0000000Z","ProcessId":22136,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:53:45.225 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:53:45.226 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:53:45.233 +03:30 [INF] {"Username":"eee","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"8000013d-0002-f600-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:23:45.0000000Z","ProcessId":22136,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:53:45.861 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:53:45.861 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:53:46.563 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:53:46.564 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:53:57.290 +03:30 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 22:53:57.363 +03:30 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 22:53:57.380 +03:30 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 22:53:57.380 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 22:53:57.380 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 22:53:57.380 +03:30 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 22:53:57.380 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 22:53:57.380 +03:30 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 22:53:57.655 +03:30 [DBG] Login Url: /Account/Login
2019-12-16 22:53:57.656 +03:30 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 22:53:57.656 +03:30 [DBG] Logout Url: /Account/Logout
2019-12-16 22:53:57.656 +03:30 [DBG] ConsentUrl Url: /consent
2019-12-16 22:53:57.657 +03:30 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 22:53:57.657 +03:30 [DBG] Error Url: /home/error
2019-12-16 22:53:57.657 +03:30 [DBG] Error Id Parameter: errorId
2019-12-16 22:54:03.455 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:54:03.468 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:54:09.469 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:54:09.469 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:54:11.996 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:54:11.996 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:54:54.312 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:54:54.313 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:54:58.797 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:54:58.797 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:55:00.405 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:55:00.405 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:55:24.338 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:55:24.338 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:55:44.894 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:55:44.894 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:55:55.834 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:55:55.834 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:55:56.311 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000f2-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:25:56.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:56:16.052 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:56:16.052 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:56:16.069 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000f3-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:26:16.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:56:31.808 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:56:31.809 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:56:31.817 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000f4-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:26:31.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:56:43.881 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:56:43.882 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:56:43.884 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000f6-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:26:43.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:57:04.771 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:57:04.771 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:57:04.774 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000f8-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:27:04.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:57:07.935 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:57:07.935 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:57:07.938 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000fa-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:27:07.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:57:19.725 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:57:19.725 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:57:19.729 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000fb-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:27:19.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:57:22.703 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:57:22.703 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:57:22.706 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000fd-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:27:22.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:57:52.656 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:57:52.656 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:57:52.659 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000fe-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:27:52.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:57:56.432 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:57:56.432 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:57:58.545 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:57:58.546 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:57:58.550 +03:30 [INF] {"Username":"yyy","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"80000101-0001-f900-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:27:58.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2019-12-16 22:58:01.712 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:58:01.712 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 22:58:21.758 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 22:58:21.759 +03:30 [DBG] CORS request made for path: /Account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:00:58.981 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:00:58.981 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:01:00.518 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:01:00.518 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:01:07.613 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:01:07.613 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:01:09.627 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:01:09.628 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:01:42.883 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:01:42.883 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:01:56.757 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:01:56.757 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:02:11.216 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:02:11.218 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:02:28.023 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:02:28.023 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:02:38.716 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:02:38.716 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:03:06.159 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:03:06.159 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:03:14.975 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:03:14.975 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:03:16.223 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:03:16.223 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:03:39.492 +03:30 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 23:03:39.492 +03:30 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 23:03:40.198 +03:30 [DBG] Augmenting SignInContext
2019-12-16 23:03:40.202 +03:30 [DBG] Adding idp claim with value: local
2019-12-16 23:03:40.202 +03:30 [DBG] Adding amr claim with value: pwd
2019-12-16 23:03:40.202 +03:30 [DBG] Adding auth_time claim with value: 1576524820
2019-12-16 23:03:40.241 +03:30 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-16 23:03:40.246 +03:30 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000242-0002-fd00-b63f-84710c7967bb","TimeStamp":"2019-12-16T19:33:40.0000000Z","ProcessId":15028,"LocalIpAddress":"::1:5000","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2019-12-16 19:35:57.540 +00:00 [WRN] No XML encryptor configured. Key {748a4ac5-f178-4f35-b371-fe37eb41055a} may be persisted to storage in unencrypted form.
2019-12-16 19:35:58.196 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 19:35:58.352 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 19:35:58.427 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 19:35:58.439 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 19:35:58.455 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 19:35:58.471 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 19:35:58.488 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 19:35:58.504 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 19:39:16.057 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:39:16.119 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 19:39:16.127 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 19:39:16.127 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 19:39:16.256 +00:00 [DBG] Login Url: /Account/Login
2019-12-16 19:39:16.257 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 19:39:16.258 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-16 19:39:16.261 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-16 19:39:16.266 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 19:39:16.267 +00:00 [DBG] Error Url: /home/error
2019-12-16 19:39:16.267 +00:00 [DBG] Error Id Parameter: errorId
2019-12-16 19:39:16.308 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 19:39:16.545 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 19:39:16.546 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 19:39:16.555 +00:00 [DBG] Start discovery request
2019-12-16 19:39:16.665 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:39:16.665 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 19:39:16.665 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 19:39:16.665 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 19:39:16.674 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 19:39:16.677 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 19:39:16.677 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 19:39:16.696 +00:00 [DBG] Start key discovery request
2019-12-16 19:39:16.769 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 19:39:16.789 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 19:39:16.789 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 19:39:16.798 +00:00 [DBG] Start authorize request
2019-12-16 19:39:16.824 +00:00 [DBG] No user present in authorize request
2019-12-16 19:39:16.836 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:16.877 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:16.948 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:16.972 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"UsOfNiL7HBkAsHjWdXCDSnb7QWOiyftyV4STtZQVTZnvI","UiLocales":null,"Nonce":"UsOfNiL7HBkAsHjWdXCDSnb7QWOiyftyV4STtZQVTZnvI","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"UsOfNiL7HBkAsHjWdXCDSnb7QWOiyftyV4STtZQVTZnvI","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"UsOfNiL7HBkAsHjWdXCDSnb7QWOiyftyV4STtZQVTZnvI"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 19:39:17.023 +00:00 [INF] Showing login: User is not authenticated
2019-12-16 19:39:17.408 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:17.409 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:17.409 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:17.414 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:17.548 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {9a9ac568-cb2d-4fbe-b843-bc0d7760a020} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-16 19:39:32.722 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:39:32.723 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 19:39:32.838 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:32.843 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:32.845 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:41.432 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:41.432 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:41.433 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:41.433 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:41.456 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:39:41.456 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 19:39:41.462 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:41.463 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:41.468 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:41.469 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:41.470 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:41.474 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:41.474 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:48.766 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:39:48.766 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 19:39:48.795 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:48.795 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:48.797 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:48.798 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:48.799 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:48.800 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:48.800 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:52.304 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:39:52.304 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-16 19:39:52.309 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:52.309 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:52.310 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:52.310 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:52.310 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:52.311 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:52.311 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:59.745 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:39:59.745 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:39:59.746 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:39:59.746 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:40:03.151 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:40:03.151 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-16 19:40:03.152 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 19:40:03.152 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 19:40:03.153 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-16 19:40:03.160 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-16 19:40:03.160 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-16 19:40:03.161 +00:00 [DBG] Start discovery request
2019-12-16 19:40:03.183 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:40:03.183 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-16 19:40:03.183 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-16 19:40:03.184 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-16 19:40:03.184 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-16 19:40:03.187 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-16 19:40:03.187 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-16 19:40:03.187 +00:00 [DBG] Start key discovery request
2019-12-16 19:40:03.220 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-16 19:40:03.223 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-16 19:40:03.224 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-16 19:40:03.225 +00:00 [DBG] Start authorize request
2019-12-16 19:40:03.225 +00:00 [DBG] No user present in authorize request
2019-12-16 19:40:03.225 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:40:03.226 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:40:03.227 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:40:03.228 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"4ECovzM6GyZzZ5C_x0K_4O5rG3iCTpAst7pTRpb2pr9cX","UiLocales":null,"Nonce":"4ECovzM6GyZzZ5C_x0K_4O5rG3iCTpAst7pTRpb2pr9cX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"4ECovzM6GyZzZ5C_x0K_4O5rG3iCTpAst7pTRpb2pr9cX","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"4ECovzM6GyZzZ5C_x0K_4O5rG3iCTpAst7pTRpb2pr9cX"},"$type":"AuthorizeRequestValidationLog"}
2019-12-16 19:40:03.229 +00:00 [INF] Showing login: User is not authenticated
2019-12-16 19:40:03.246 +00:00 [DBG] Start authorize request protocol validation
2019-12-16 19:40:03.247 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:40:03.289 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-16 19:40:03.289 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-16 19:43:02.484 +00:00 [WRN] No XML encryptor configured. Key {b66cb656-867e-4977-ac14-c20f52564f1a} may be persisted to storage in unencrypted form.
2019-12-16 19:43:03.033 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 19:43:03.112 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 19:43:03.165 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 19:43:03.166 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 19:43:03.167 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 19:43:03.168 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 19:43:03.171 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 19:43:03.172 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 19:43:30.414 +00:00 [DBG] Login Url: /Account/Login
2019-12-16 19:43:30.417 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 19:43:30.420 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-16 19:43:30.422 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-16 19:43:30.424 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 19:43:30.426 +00:00 [DBG] Error Url: /home/error
2019-12-16 19:43:30.428 +00:00 [DBG] Error Id Parameter: errorId
2019-12-16 19:43:31.118 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {748a4ac5-f178-4f35-b371-fe37eb41055a} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-16 19:50:33.215 +00:00 [WRN] No XML encryptor configured. Key {e3131e4a-2bfd-402c-9665-de6d4a1f3495} may be persisted to storage in unencrypted form.
2019-12-16 19:50:33.545 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-16 19:50:33.629 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-16 19:50:33.715 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-16 19:50:33.799 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-16 19:50:33.816 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-16 19:50:33.831 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-16 19:50:33.848 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-16 19:50:33.863 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-16 19:52:31.633 +00:00 [DBG] Login Url: /Account/Login
2019-12-16 19:52:31.636 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-16 19:52:31.638 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-16 19:52:31.640 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-16 19:52:31.645 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-16 19:52:31.646 +00:00 [DBG] Error Url: /home/error
2019-12-16 19:52:31.647 +00:00 [DBG] Error Id Parameter: errorId
2019-12-16 19:52:39.379 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {b66cb656-867e-4977-ac14-c20f52564f1a} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-16 19:52:44.165 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-16 19:52:44.197 +00:00 [DBG] CORS request made for path: /account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-17 06:28:04.420 +00:00 [WRN] No XML encryptor configured. Key {05f952d5-daaa-4e39-ac9b-9f59ef34ecb2} may be persisted to storage in unencrypted form.
2019-12-17 06:28:04.815 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-17 06:28:04.856 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-17 06:28:04.886 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-17 06:28:04.887 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-17 06:28:04.890 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-17 06:28:04.893 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-17 06:28:04.897 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-17 06:28:04.901 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-17 06:33:44.272 +00:00 [DBG] Login Url: /Account/Login
2019-12-17 06:33:44.275 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-17 06:33:44.276 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-17 06:33:44.277 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-17 06:33:44.278 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-17 06:33:44.279 +00:00 [DBG] Error Url: /home/error
2019-12-17 06:33:44.280 +00:00 [DBG] Error Id Parameter: errorId
2019-12-17 06:33:49.290 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {e3131e4a-2bfd-402c-9665-de6d4a1f3495} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-17 06:34:56.129 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-17 06:34:56.146 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-17 06:34:56.153 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-17 06:34:56.154 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-17 06:34:56.157 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-17 06:34:56.167 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-17 06:34:56.168 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-17 06:34:56.173 +00:00 [DBG] Start discovery request
2019-12-17 06:34:56.439 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-17 06:34:56.440 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-17 06:34:56.444 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-17 06:34:56.445 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-17 06:34:56.445 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-17 06:34:56.447 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-17 06:34:56.447 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-17 06:34:56.454 +00:00 [DBG] Start key discovery request
2019-12-17 06:34:56.507 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-17 06:34:56.511 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-17 06:34:56.511 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-17 06:34:56.520 +00:00 [DBG] Start authorize request
2019-12-17 06:34:56.547 +00:00 [DBG] No user present in authorize request
2019-12-17 06:34:56.556 +00:00 [DBG] Start authorize request protocol validation
2019-12-17 06:34:56.586 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-17 06:34:56.675 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-17 06:34:56.728 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"qujcAMzPpS2KTZ1R0ismBxsbEaGXIu_IXh5YhkS5clMAD","UiLocales":null,"Nonce":"qujcAMzPpS2KTZ1R0ismBxsbEaGXIu_IXh5YhkS5clMAD","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"qujcAMzPpS2KTZ1R0ismBxsbEaGXIu_IXh5YhkS5clMAD","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"qujcAMzPpS2KTZ1R0ismBxsbEaGXIu_IXh5YhkS5clMAD"},"$type":"AuthorizeRequestValidationLog"}
2019-12-17 06:34:56.878 +00:00 [INF] Showing login: User is not authenticated
2019-12-17 06:34:56.987 +00:00 [DBG] Start authorize request protocol validation
2019-12-17 06:34:56.987 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-17 06:34:56.988 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-17 06:34:56.995 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-17 06:35:07.522 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-17 06:35:07.551 +00:00 [DBG] CORS request made for path: /account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-17 06:35:15.922 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-17 06:35:15.922 +00:00 [DBG] CORS request made for path: /account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-17 06:35:47.587 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-17 06:35:47.587 +00:00 [DBG] CORS request made for path: /account/Register from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-19 14:10:44.782 +00:00 [WRN] No XML encryptor configured. Key {db01abdd-d965-409b-b2f0-b72c1cca9272} may be persisted to storage in unencrypted form.
2019-12-19 14:10:45.150 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 14:10:45.191 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 14:10:45.227 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 14:10:45.228 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 14:10:45.229 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 14:10:45.230 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 14:10:45.232 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 14:10:45.235 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 14:13:30.778 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:13:30.833 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 14:13:30.840 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:13:30.841 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:13:30.923 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 14:13:30.924 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 14:13:30.925 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 14:13:30.927 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 14:13:30.929 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 14:13:30.935 +00:00 [DBG] Error Url: /home/error
2019-12-19 14:13:30.937 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 14:13:30.975 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 14:13:31.224 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 14:13:31.226 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 14:13:31.235 +00:00 [DBG] Start discovery request
2019-12-19 14:13:31.552 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:13:31.553 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 14:13:31.555 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:13:31.579 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:13:31.595 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 14:13:31.621 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 14:13:31.621 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 14:13:31.657 +00:00 [DBG] Start key discovery request
2019-12-19 14:13:31.760 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 14:13:31.789 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 14:13:31.790 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 14:13:31.809 +00:00 [DBG] Start authorize request
2019-12-19 14:13:31.839 +00:00 [DBG] No user present in authorize request
2019-12-19 14:13:31.849 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:13:31.886 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:13:31.977 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:13:32.005 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"JD2k1sn2mYH_URi46mHpecNeTeB2bpQrlNhEhmjkS-VKS","UiLocales":null,"Nonce":"JD2k1sn2mYH_URi46mHpecNeTeB2bpQrlNhEhmjkS-VKS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"JD2k1sn2mYH_URi46mHpecNeTeB2bpQrlNhEhmjkS-VKS","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"JD2k1sn2mYH_URi46mHpecNeTeB2bpQrlNhEhmjkS-VKS"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 14:13:32.089 +00:00 [INF] Showing login: User is not authenticated
2019-12-19 14:13:32.442 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:13:32.443 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:13:32.444 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:13:32.450 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:14:12.458 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:14:12.459 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-19 14:14:12.534 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:14:12.537 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:14:12.539 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:14:13.906 +00:00 [INF] {"Username":"username1","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"0HLS4HMG09I1E:00000004","TimeStamp":"2019-12-19T14:14:13.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginFailureEvent"}
2019-12-19 14:14:13.909 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:14:13.909 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:14:13.920 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:14:13.921 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:16:00.097 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:16:00.098 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:16:00.099 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:16:00.100 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:18:27.564 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:18:27.567 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 14:18:27.567 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:18:27.567 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:18:27.567 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 14:18:27.568 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 14:18:27.568 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 14:18:27.568 +00:00 [DBG] Start discovery request
2019-12-19 14:18:27.602 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:18:27.603 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 14:18:27.603 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:18:27.603 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:18:27.603 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 14:18:27.603 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 14:18:27.604 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 14:18:27.604 +00:00 [DBG] Start key discovery request
2019-12-19 14:18:27.660 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 14:18:27.662 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 14:18:27.663 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 14:18:27.663 +00:00 [DBG] Start authorize request
2019-12-19 14:18:27.663 +00:00 [DBG] No user present in authorize request
2019-12-19 14:18:27.663 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:18:27.664 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:18:27.664 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:18:27.664 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z","UiLocales":null,"Nonce":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 14:18:27.665 +00:00 [INF] Showing login: User is not authenticated
2019-12-19 14:18:27.703 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:18:27.703 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:18:27.709 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:18:27.710 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:39:30.759 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:39:30.759 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-19 14:39:30.764 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:39:30.770 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:39:30.771 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:39:31.366 +00:00 [DBG] Augmenting SignInContext
2019-12-19 14:39:31.372 +00:00 [DBG] Adding idp claim with value: local
2019-12-19 14:39:31.373 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-19 14:39:31.373 +00:00 [DBG] Adding auth_time claim with value: 1576766371
2019-12-19 14:39:31.394 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 14:39:31.409 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS4HMG09I1I:00000001","TimeStamp":"2019-12-19T14:39:31.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-19 14:39:31.412 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:39:31.434 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-19 14:39:31.436 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-19 14:39:31.437 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-19 14:39:31.449 +00:00 [DBG] Start authorize callback request
2019-12-19 14:39:31.455 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 14:39:31.455 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:39:31.456 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:39:31.457 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:39:31.458 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z","UiLocales":null,"Nonce":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"f7be98065320aaace469e5abf688aa74","Raw":{"response_type":"id_token token","client_id":"angular","state":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 14:39:31.631 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 14:39:31.649 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 14:39:31.669 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 14:39:31.671 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 14:39:31.685 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 14:39:31.836 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 14:39:31.837 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 14:39:31.851 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****RPRQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****eBVQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4HMG09I1I:00000002","TimeStamp":"2019-12-19T14:39:31.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 14:39:31.854 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"ciqjplkixEdEy1_ydW7SxduFYxvc2hYxYhS3sAXP65r7z","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 14:39:31.885 +00:00 [DBG] Augmenting SignInContext
2019-12-19 14:39:31.886 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 14:41:45.507 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 14:41:45.651 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 14:41:45.684 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 14:41:45.686 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 14:41:45.688 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 14:41:45.693 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 14:41:45.694 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 14:41:45.696 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 14:42:58.987 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:42:59.042 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 14:42:59.052 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:42:59.052 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:42:59.134 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 14:42:59.135 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 14:42:59.135 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 14:42:59.135 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 14:42:59.135 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 14:42:59.135 +00:00 [DBG] Error Url: /home/error
2019-12-19 14:42:59.135 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 14:42:59.175 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 14:42:59.420 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 14:42:59.423 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 14:42:59.430 +00:00 [DBG] Start discovery request
2019-12-19 14:42:59.659 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:42:59.660 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 14:42:59.660 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:42:59.660 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:42:59.662 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 14:42:59.664 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 14:42:59.664 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 14:42:59.679 +00:00 [DBG] Start key discovery request
2019-12-19 14:42:59.747 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 14:42:59.800 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 14:42:59.804 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 14:42:59.813 +00:00 [DBG] Start authorize request
2019-12-19 14:42:59.840 +00:00 [DBG] No user present in authorize request
2019-12-19 14:42:59.853 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:42:59.890 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:42:59.981 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:43:00.007 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y","UiLocales":null,"Nonce":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 14:43:00.124 +00:00 [INF] Showing login: User is not authenticated
2019-12-19 14:43:00.465 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:43:00.466 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:43:00.467 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:43:00.472 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:43:07.531 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:43:07.532 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-19 14:43:07.684 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:43:07.690 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:43:07.692 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:43:09.662 +00:00 [DBG] Augmenting SignInContext
2019-12-19 14:43:09.667 +00:00 [DBG] Adding idp claim with value: local
2019-12-19 14:43:09.667 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-19 14:43:09.667 +00:00 [DBG] Adding auth_time claim with value: 1576766589
2019-12-19 14:43:09.690 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 14:43:09.760 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS4I6UUKU9E:00000001","TimeStamp":"2019-12-19T14:43:09.0000000Z","ProcessId":854,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-19 14:43:09.768 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:43:09.835 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-19 14:43:09.838 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-19 14:43:09.839 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-19 14:43:09.857 +00:00 [DBG] Start authorize callback request
2019-12-19 14:43:09.865 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 14:43:09.867 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:43:09.868 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:43:09.868 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:43:09.869 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y","UiLocales":null,"Nonce":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5361cab3b08d7d4b97a203ffd7db6c0b","Raw":{"response_type":"id_token token","client_id":"angular","state":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 14:43:10.051 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 14:43:10.065 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 14:43:10.086 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 14:43:10.088 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 14:43:10.105 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 14:43:10.210 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 14:43:10.214 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 14:43:10.225 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****Cusg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****7RLg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4I6UUKU9E:00000002","TimeStamp":"2019-12-19T14:43:10.0000000Z","ProcessId":854,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 14:43:10.233 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"cK421tVgo6YzqRjHxGTxeBnr15pvh_U5-yh66xy_UZp6y","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 14:43:10.258 +00:00 [DBG] Augmenting SignInContext
2019-12-19 14:43:10.259 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 14:43:15.040 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:43:15.040 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 14:43:15.041 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:43:15.041 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:43:15.041 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 14:43:15.042 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 14:43:15.056 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 14:43:15.057 +00:00 [DBG] Start discovery request
2019-12-19 14:43:15.069 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:43:15.069 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 14:43:15.070 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:43:15.076 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:43:15.078 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 14:43:15.082 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 14:43:15.089 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 14:43:15.091 +00:00 [DBG] Start key discovery request
2019-12-19 14:43:15.121 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 14:43:15.151 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 14:43:15.151 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 14:43:15.152 +00:00 [DBG] Start authorize request
2019-12-19 14:43:15.159 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 14:43:15.159 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 14:43:15.160 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 14:43:15.165 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 14:43:15.165 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"_Ww1DJXGZEproB2ckHWGhDAIdlwdmzV9RxA8sw-iiuYac","UiLocales":null,"Nonce":"_Ww1DJXGZEproB2ckHWGhDAIdlwdmzV9RxA8sw-iiuYac","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5361cab3b08d7d4b97a203ffd7db6c0b","Raw":{"response_type":"id_token token","client_id":"angular","state":"_Ww1DJXGZEproB2ckHWGhDAIdlwdmzV9RxA8sw-iiuYac","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"_Ww1DJXGZEproB2ckHWGhDAIdlwdmzV9RxA8sw-iiuYac"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 14:43:15.183 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 14:43:15.183 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 14:43:15.183 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 14:43:15.183 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 14:43:15.183 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 14:43:15.185 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 14:43:15.185 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 14:43:15.187 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****NNDQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****b_Nw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4I6UUKU9E:00000003","TimeStamp":"2019-12-19T14:43:15.0000000Z","ProcessId":854,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 14:43:15.187 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"_Ww1DJXGZEproB2ckHWGhDAIdlwdmzV9RxA8sw-iiuYac","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 14:43:18.080 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:43:18.080 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 14:43:18.080 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:43:18.080 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:43:18.081 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 14:43:18.081 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 14:43:18.081 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 14:43:18.081 +00:00 [DBG] Start discovery request
2019-12-19 14:43:18.093 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 14:43:18.094 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 14:43:18.094 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 14:43:18.094 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 14:43:18.095 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 14:43:18.096 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 14:43:18.096 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 14:43:18.096 +00:00 [DBG] Start key discovery request
2019-12-19 19:43:31.240 +00:00 [WRN] No XML encryptor configured. Key {53e723b6-5685-4d64-86af-01b17920e528} may be persisted to storage in unencrypted form.
2019-12-19 19:43:31.550 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 19:43:31.577 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 19:43:31.622 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 19:43:31.630 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 19:43:31.633 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 19:43:31.635 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 19:43:31.637 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 19:43:31.639 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 19:47:56.604 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:47:56.654 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:47:56.660 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:47:56.661 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:47:56.738 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 19:47:56.739 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 19:47:56.739 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 19:47:56.739 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 19:47:56.740 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 19:47:56.740 +00:00 [DBG] Error Url: /home/error
2019-12-19 19:47:56.741 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 19:47:56.781 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:47:57.000 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:47:57.002 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:47:57.009 +00:00 [DBG] Start discovery request
2019-12-19 19:47:57.271 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:47:57.271 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:47:57.272 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:47:57.272 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:47:57.287 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:47:57.289 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:47:57.289 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:47:57.312 +00:00 [DBG] Start key discovery request
2019-12-19 19:47:57.365 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:47:57.464 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:47:57.465 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:47:57.475 +00:00 [DBG] Start authorize request
2019-12-19 19:47:57.512 +00:00 [DBG] No user present in authorize request
2019-12-19 19:47:57.539 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:47:57.604 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:47:57.683 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:47:57.700 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"4iMI0D0p-rCvUJXJVVWYQwZ25mQUbCZToi5vSO82MoBG3","UiLocales":null,"Nonce":"4iMI0D0p-rCvUJXJVVWYQwZ25mQUbCZToi5vSO82MoBG3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"4iMI0D0p-rCvUJXJVVWYQwZ25mQUbCZToi5vSO82MoBG3","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"4iMI0D0p-rCvUJXJVVWYQwZ25mQUbCZToi5vSO82MoBG3"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:47:57.861 +00:00 [INF] Showing login: User is not authenticated
2019-12-19 19:47:58.003 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:47:58.004 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:47:58.005 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:47:58.011 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:21.563 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:21.563 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:48:21.563 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:21.563 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:21.564 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:48:21.564 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:48:21.564 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:48:21.564 +00:00 [DBG] Start discovery request
2019-12-19 19:48:21.604 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:21.618 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:48:21.622 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:21.623 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:21.632 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:48:21.632 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:48:21.638 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:48:21.639 +00:00 [DBG] Start key discovery request
2019-12-19 19:48:21.700 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:48:21.704 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:48:21.704 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:48:21.704 +00:00 [DBG] Start authorize request
2019-12-19 19:48:21.706 +00:00 [DBG] No user present in authorize request
2019-12-19 19:48:21.706 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:48:21.707 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:21.707 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:48:21.708 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ","UiLocales":null,"Nonce":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:48:21.709 +00:00 [INF] Showing login: User is not authenticated
2019-12-19 19:48:21.746 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:48:21.755 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:21.759 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:48:21.759 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:27.340 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:27.341 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-19 19:48:27.412 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:48:27.412 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:27.413 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:48:27.418 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:48:27.418 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:27.420 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:48:27.421 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:29.584 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:29.584 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-19 19:48:29.655 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:48:29.655 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:29.656 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:48:30.950 +00:00 [DBG] Augmenting SignInContext
2019-12-19 19:48:30.957 +00:00 [DBG] Adding idp claim with value: local
2019-12-19 19:48:30.958 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-19 19:48:30.958 +00:00 [DBG] Adding auth_time claim with value: 1576784910
2019-12-19 19:48:30.978 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 19:48:31.043 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS4NHC2RADA:00000007","TimeStamp":"2019-12-19T19:48:31.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-19 19:48:31.046 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:31.092 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-19 19:48:31.094 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-19 19:48:31.094 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-19 19:48:31.105 +00:00 [DBG] Start authorize callback request
2019-12-19 19:48:31.111 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:48:31.111 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:48:31.111 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:31.113 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:48:31.114 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ","UiLocales":null,"Nonce":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"74b81ea0581ce180bbc1ed8e8e59baa4","Raw":{"response_type":"id_token token","client_id":"angular","state":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:48:31.217 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 19:48:31.243 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 19:48:31.258 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 19:48:31.259 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:48:31.271 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:48:31.395 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 19:48:31.395 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:48:31.406 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****_QVg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ey1A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4NHC2RADA:00000008","TimeStamp":"2019-12-19T19:48:31.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 19:48:31.409 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"AaTQpPZSmz6uoUSuUkNC__rhAubGE1tRrVuiEeCyLnIKZ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 19:48:31.433 +00:00 [DBG] Augmenting SignInContext
2019-12-19 19:48:31.434 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 19:48:37.085 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:37.086 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:48:37.086 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:37.086 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:37.086 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:48:37.086 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:48:37.087 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:48:37.087 +00:00 [DBG] Start discovery request
2019-12-19 19:48:37.108 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:37.109 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:48:37.109 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:37.109 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:37.109 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:48:37.109 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:48:37.109 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:48:37.110 +00:00 [DBG] Start key discovery request
2019-12-19 19:48:37.137 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:48:37.139 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:48:37.139 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:48:37.139 +00:00 [DBG] Start authorize request
2019-12-19 19:48:37.140 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:48:37.140 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:48:37.140 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:48:37.141 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:48:37.141 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"jD7DP97jkfeYHDWQdVZtD1uoCp4KfBxEJ74AWYPQttGoI","UiLocales":null,"Nonce":"jD7DP97jkfeYHDWQdVZtD1uoCp4KfBxEJ74AWYPQttGoI","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"74b81ea0581ce180bbc1ed8e8e59baa4","Raw":{"response_type":"id_token token","client_id":"angular","state":"jD7DP97jkfeYHDWQdVZtD1uoCp4KfBxEJ74AWYPQttGoI","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"jD7DP97jkfeYHDWQdVZtD1uoCp4KfBxEJ74AWYPQttGoI"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:48:37.163 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 19:48:37.163 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 19:48:37.163 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 19:48:37.163 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:48:37.164 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:48:37.167 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 19:48:37.167 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:48:37.179 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****eRug","$type":"Token"},{"TokenType":"access_token","TokenValue":"****FX4A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4NHC2RADA:00000009","TimeStamp":"2019-12-19T19:48:37.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 19:48:37.179 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"jD7DP97jkfeYHDWQdVZtD1uoCp4KfBxEJ74AWYPQttGoI","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 19:48:39.265 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:39.266 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:48:39.266 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:39.266 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:39.266 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:48:39.267 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:48:39.267 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:48:39.267 +00:00 [DBG] Start discovery request
2019-12-19 19:48:39.392 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:39.392 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:48:39.392 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:39.393 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:39.393 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:48:39.394 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:48:39.394 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:48:39.394 +00:00 [DBG] Start key discovery request
2019-12-19 19:48:42.670 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:42.671 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:48:42.672 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:42.672 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:42.673 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:48:42.674 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:48:42.674 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:48:42.674 +00:00 [DBG] Start discovery request
2019-12-19 19:48:42.689 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:48:42.690 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:48:42.691 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:48:42.691 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:48:42.692 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:48:42.693 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:48:42.694 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:48:42.695 +00:00 [DBG] Start key discovery request
2019-12-19 19:55:11.561 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 19:55:11.654 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 19:55:11.672 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 19:55:11.672 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 19:55:11.674 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 19:55:11.675 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 19:55:11.677 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 19:55:11.679 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 19:55:44.568 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:55:44.653 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:55:44.664 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:55:44.665 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:55:44.749 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 19:55:44.751 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 19:55:44.752 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 19:55:44.757 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 19:55:44.758 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 19:55:44.761 +00:00 [DBG] Error Url: /home/error
2019-12-19 19:55:44.763 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 19:55:44.817 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:55:45.176 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:55:45.186 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:55:45.203 +00:00 [DBG] Start discovery request
2019-12-19 19:55:45.348 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:55:45.351 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:55:45.352 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:55:45.352 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:55:45.361 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:55:45.373 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:55:45.377 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:55:45.388 +00:00 [DBG] Start key discovery request
2019-12-19 19:55:45.525 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:55:45.544 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:55:45.546 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:55:45.555 +00:00 [DBG] Start authorize request
2019-12-19 19:55:45.578 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:55:45.587 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:55:45.621 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:55:45.662 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"JVG2QimoAVCaXhqORhuK58qSANDSzc2MHnIGeRq03T0HT","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"JVG2QimoAVCaXhqORhuK58qSANDSzc2MHnIGeRq03T0HT"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:55:45.715 +00:00 [ERR] Request validation failed
2019-12-19 19:55:45.715 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"JVG2QimoAVCaXhqORhuK58qSANDSzc2MHnIGeRq03T0HT","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"JVG2QimoAVCaXhqORhuK58qSANDSzc2MHnIGeRq03T0HT"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:55:45.764 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS4NLNG4O50:00000001","TimeStamp":"2019-12-19T19:55:45.0000000Z","ProcessId":371,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-19 19:56:11.863 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:11.863 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:11.863 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:11.863 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:11.864 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:11.865 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:11.865 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:11.866 +00:00 [DBG] Start discovery request
2019-12-19 19:56:11.897 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:11.897 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:11.898 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:11.898 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:11.898 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:11.899 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:11.899 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:11.899 +00:00 [DBG] Start key discovery request
2019-12-19 19:56:11.966 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:56:11.968 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:56:11.968 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:56:11.969 +00:00 [DBG] Start authorize request
2019-12-19 19:56:11.982 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:11.982 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:11.984 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:12.046 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:12.047 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ErVnl73BPnzLkj4Nw3Xq_f05xQVkocDWEGE72nJjam-JH","UiLocales":null,"Nonce":"ErVnl73BPnzLkj4Nw3Xq_f05xQVkocDWEGE72nJjam-JH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"74b81ea0581ce180bbc1ed8e8e59baa4","Raw":{"response_type":"id_token token","client_id":"angular","state":"ErVnl73BPnzLkj4Nw3Xq_f05xQVkocDWEGE72nJjam-JH","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"ErVnl73BPnzLkj4Nw3Xq_f05xQVkocDWEGE72nJjam-JH"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:56:12.972 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 19:56:12.986 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 19:56:13.002 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 19:56:13.003 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:13.013 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:13.108 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 19:56:13.109 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:13.119 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DG7A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LyIA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4NLNG4O50:00000003","TimeStamp":"2019-12-19T19:56:13.0000000Z","ProcessId":371,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 19:56:13.122 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"ErVnl73BPnzLkj4Nw3Xq_f05xQVkocDWEGE72nJjam-JH","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 19:56:19.679 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:19.679 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:19.679 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:19.679 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:19.679 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:19.684 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:19.685 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:19.685 +00:00 [DBG] Start discovery request
2019-12-19 19:56:19.695 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:19.695 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:19.695 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:19.695 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:19.696 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:19.696 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:19.696 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:19.696 +00:00 [DBG] Start key discovery request
2019-12-19 19:56:19.737 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:56:19.739 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:56:19.739 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:56:19.739 +00:00 [DBG] Start authorize request
2019-12-19 19:56:19.739 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:19.739 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:19.739 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:19.740 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:19.740 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"SkIevEN3k6uWQiW7k6NGmg9-W4YkXaTYNRbdROYB6b39s","UiLocales":null,"Nonce":"SkIevEN3k6uWQiW7k6NGmg9-W4YkXaTYNRbdROYB6b39s","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"74b81ea0581ce180bbc1ed8e8e59baa4","Raw":{"response_type":"id_token token","client_id":"angular","state":"SkIevEN3k6uWQiW7k6NGmg9-W4YkXaTYNRbdROYB6b39s","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"SkIevEN3k6uWQiW7k6NGmg9-W4YkXaTYNRbdROYB6b39s"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:56:19.833 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 19:56:19.835 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 19:56:19.836 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 19:56:19.837 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:19.839 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:19.847 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 19:56:19.850 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:19.855 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4mHw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****keXw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4NLNG4O50:00000004","TimeStamp":"2019-12-19T19:56:19.0000000Z","ProcessId":371,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 19:56:19.856 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"SkIevEN3k6uWQiW7k6NGmg9-W4YkXaTYNRbdROYB6b39s","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 19:56:23.006 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:23.007 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:23.007 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:23.007 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:23.007 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:23.007 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:23.007 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:23.007 +00:00 [DBG] Start discovery request
2019-12-19 19:56:23.016 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:23.017 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:23.017 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:23.017 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:23.017 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:23.017 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:23.017 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:23.017 +00:00 [DBG] Start key discovery request
2019-12-19 19:56:23.758 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:23.758 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:23.758 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:23.758 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:23.759 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:23.759 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:23.759 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:23.759 +00:00 [DBG] Start discovery request
2019-12-19 19:56:23.776 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:23.776 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:23.776 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:23.777 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:23.777 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:23.778 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:23.778 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:23.778 +00:00 [DBG] Start key discovery request
2019-12-19 19:56:24.797 +00:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2019-12-19 19:56:24.799 +00:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2019-12-19 19:56:24.799 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2019-12-19 19:56:24.809 +00:00 [DBG] Processing signout request for 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:24.818 +00:00 [DBG] Start end session request validation
2019-12-19 19:56:24.827 +00:00 [DBG] Start identity token validation
2019-12-19 19:56:24.835 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:24.835 +00:00 [DBG] Client found: angular / SPA Client
2019-12-19 19:56:24.883 +00:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-12-19 19:56:24.886 +00:00 [DBG] Token validation success
{"ClientId":"angular","ClientName":"SPA Client","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1576785379,"exp":1576785679,"iss":"http://localhost:5000","aud":"angular","nonce":"SkIevEN3k6uWQiW7k6NGmg9-W4YkXaTYNRbdROYB6b39s","iat":1576785379,"at_hash":"tehtwebt40zLpe0jjNIyjQ","sid":"74b81ea0581ce180bbc1ed8e8e59baa4","sub":"5c353957-2e04-4814-820b-2bfdf5b6c246","auth_time":1576784910,"idp":"local","preferred_username":"alice","unique_name":"آلیس","name":"آلیس","last_name":"alice","address_city":"tehran","address_country":"iran","address_state":"tehran","address_street":"Foroughi","address_zipcode":"123456","email":"alice@gmail.com","email_verified":false,"phone_number":"09123332121","phone_number_verified":false,"amr":"pwd"},"$type":"TokenValidationLog"}
2019-12-19 19:56:24.894 +00:00 [INF] End session request validation success
{"ClientId":"angular","ClientName":"SPA Client","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","PostLogOutUri":"http://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"http://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2019-12-19 19:56:24.900 +00:00 [DBG] Success validating end session request from angular
2019-12-19 19:56:24.977 +00:00 [INF] AuthenticationScheme: Identity.Application signed out.
2019-12-19 19:56:24.980 +00:00 [INF] AuthenticationScheme: Identity.External signed out.
2019-12-19 19:56:24.983 +00:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2019-12-19 19:56:24.985 +00:00 [INF] {"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"0HLS4NLNG4O50:00000006","TimeStamp":"2019-12-19T19:56:24.0000000Z","ProcessId":371,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLogoutSuccessEvent"}
2019-12-19 19:56:30.343 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:30.343 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:30.343 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:30.343 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:30.344 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:30.346 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:30.347 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:30.347 +00:00 [DBG] Start discovery request
2019-12-19 19:56:30.359 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:30.360 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:30.361 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:30.361 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:30.361 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:30.362 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:30.362 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:30.362 +00:00 [DBG] Start key discovery request
2019-12-19 19:56:30.482 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:56:30.484 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:56:30.484 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:56:30.484 +00:00 [DBG] Start authorize request
2019-12-19 19:56:30.485 +00:00 [DBG] No user present in authorize request
2019-12-19 19:56:30.485 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:30.492 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:30.493 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:30.493 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"hlAbRRo_QwQ6XsELS7OvygjwSNMPlhO_kP7Xt8pQmzHPh","UiLocales":null,"Nonce":"hlAbRRo_QwQ6XsELS7OvygjwSNMPlhO_kP7Xt8pQmzHPh","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"hlAbRRo_QwQ6XsELS7OvygjwSNMPlhO_kP7Xt8pQmzHPh","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"hlAbRRo_QwQ6XsELS7OvygjwSNMPlhO_kP7Xt8pQmzHPh"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:56:30.494 +00:00 [INF] Showing login: User is not authenticated
2019-12-19 19:56:30.536 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:30.537 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:30.538 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:30.545 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:42.045 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:42.046 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:42.046 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:42.047 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:42.047 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:42.048 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:42.048 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:42.048 +00:00 [DBG] Start discovery request
2019-12-19 19:56:42.059 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:42.059 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:42.059 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:42.059 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:42.059 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:42.059 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:42.059 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:42.060 +00:00 [DBG] Start key discovery request
2019-12-19 19:56:42.095 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:56:42.096 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:56:42.096 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:56:42.096 +00:00 [DBG] Start authorize request
2019-12-19 19:56:42.097 +00:00 [DBG] No user present in authorize request
2019-12-19 19:56:42.097 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:42.097 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:42.099 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:42.099 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF","UiLocales":null,"Nonce":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:56:42.099 +00:00 [INF] Showing login: User is not authenticated
2019-12-19 19:56:42.121 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:42.121 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:42.122 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:42.122 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:48.398 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:48.401 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-19 19:56:48.455 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:48.456 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:48.457 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:49.005 +00:00 [DBG] Augmenting SignInContext
2019-12-19 19:56:49.010 +00:00 [DBG] Adding idp claim with value: local
2019-12-19 19:56:49.010 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-19 19:56:49.010 +00:00 [DBG] Adding auth_time claim with value: 1576785409
2019-12-19 19:56:49.021 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 19:56:49.041 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS4NLNG4O50:0000000B","TimeStamp":"2019-12-19T19:56:49.0000000Z","ProcessId":371,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-19 19:56:49.044 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:49.067 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-19 19:56:49.068 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-19 19:56:49.069 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-19 19:56:49.080 +00:00 [DBG] Start authorize callback request
2019-12-19 19:56:49.086 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:49.086 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:49.086 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:49.087 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:49.087 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF","UiLocales":null,"Nonce":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:56:49.117 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 19:56:49.117 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 19:56:49.118 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 19:56:49.118 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:49.119 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:49.144 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 19:56:49.144 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:49.147 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****pckQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6boA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4NLNG4O50:0000000C","TimeStamp":"2019-12-19T19:56:49.0000000Z","ProcessId":371,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 19:56:49.170 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"1ARWKQfmKD9Ty_DSE6btGIk3aLSVi3EFsgxYexbot0_ZF","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 19:56:49.226 +00:00 [DBG] Augmenting SignInContext
2019-12-19 19:56:49.228 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-19 19:56:54.849 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:54.850 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:54.850 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:54.851 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:54.851 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:54.852 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:54.852 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:54.853 +00:00 [DBG] Start discovery request
2019-12-19 19:56:54.865 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:54.866 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:54.866 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:54.866 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:54.866 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:54.867 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:54.867 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:54.867 +00:00 [DBG] Start key discovery request
2019-12-19 19:56:54.950 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 19:56:54.950 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 19:56:54.950 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 19:56:54.950 +00:00 [DBG] Start authorize request
2019-12-19 19:56:54.951 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:54.951 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 19:56:54.951 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 19:56:54.951 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 19:56:54.952 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"BfS9Bc0LApc5qnE2TSraCnUMmoK7pMaXsQLuj-r0SK_hH","UiLocales":null,"Nonce":"BfS9Bc0LApc5qnE2TSraCnUMmoK7pMaXsQLuj-r0SK_hH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"BfS9Bc0LApc5qnE2TSraCnUMmoK7pMaXsQLuj-r0SK_hH","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"BfS9Bc0LApc5qnE2TSraCnUMmoK7pMaXsQLuj-r0SK_hH"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 19:56:55.001 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 19:56:55.002 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 19:56:55.002 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 19:56:55.003 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 19:56:55.003 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:55.006 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 19:56:55.006 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 19:56:55.008 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****55vg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****QVIQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4NLNG4O50:0000000D","TimeStamp":"2019-12-19T19:56:55.0000000Z","ProcessId":371,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 19:56:55.009 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"BfS9Bc0LApc5qnE2TSraCnUMmoK7pMaXsQLuj-r0SK_hH","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 19:56:57.004 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:57.004 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 19:56:57.004 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:57.005 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:57.005 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 19:56:57.006 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 19:56:57.006 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 19:56:57.006 +00:00 [DBG] Start discovery request
2019-12-19 19:56:57.029 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 19:56:57.029 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 19:56:57.029 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 19:56:57.030 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 19:56:57.031 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 19:56:57.031 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 19:56:57.031 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 19:56:57.032 +00:00 [DBG] Start key discovery request
2019-12-19 20:05:06.448 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 20:05:06.497 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 20:05:06.512 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 20:05:06.513 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 20:05:06.514 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 20:05:06.516 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 20:05:06.519 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 20:05:06.522 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 20:06:07.157 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 20:06:07.241 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 20:06:07.249 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 20:06:07.251 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 20:06:07.355 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 20:06:07.357 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 20:06:07.359 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 20:06:07.362 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 20:06:07.364 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 20:06:07.368 +00:00 [DBG] Error Url: /home/error
2019-12-19 20:06:07.369 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 20:06:07.435 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 20:06:07.698 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 20:06:07.699 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 20:06:07.708 +00:00 [DBG] Start discovery request
2019-12-19 20:06:07.821 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 20:06:07.822 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 20:06:07.824 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 20:06:07.824 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 20:06:07.835 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 20:06:07.837 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 20:06:07.837 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 20:06:07.858 +00:00 [DBG] Start key discovery request
2019-12-19 20:06:07.992 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 20:06:08.022 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 20:06:08.022 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 20:06:08.037 +00:00 [DBG] Start authorize request
2019-12-19 20:06:08.061 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 20:06:08.077 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 20:06:08.115 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 20:06:08.153 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"NjGO__oA8KPPV_V0cgbVSqQIcgVPiwE7MNIQvpULP-hCY","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"NjGO__oA8KPPV_V0cgbVSqQIcgVPiwE7MNIQvpULP-hCY"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 20:06:08.189 +00:00 [ERR] Request validation failed
2019-12-19 20:06:08.190 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"NjGO__oA8KPPV_V0cgbVSqQIcgVPiwE7MNIQvpULP-hCY","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"NjGO__oA8KPPV_V0cgbVSqQIcgVPiwE7MNIQvpULP-hCY"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 20:06:08.224 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS4NRH0M7IH:00000001","TimeStamp":"2019-12-19T20:06:08.0000000Z","ProcessId":579,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-19 20:06:31.025 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 20:06:31.025 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 20:06:31.025 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 20:06:31.026 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 20:06:31.026 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 20:06:31.026 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 20:06:31.026 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 20:06:31.026 +00:00 [DBG] Start discovery request
2019-12-19 20:06:31.045 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 20:06:31.045 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 20:06:31.045 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 20:06:31.046 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 20:06:31.046 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 20:06:31.047 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 20:06:31.047 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 20:06:31.047 +00:00 [DBG] Start key discovery request
2019-12-19 20:06:31.092 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 20:06:31.094 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 20:06:31.095 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 20:06:31.096 +00:00 [DBG] Start authorize request
2019-12-19 20:06:31.097 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 20:06:31.098 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 20:06:31.100 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 20:06:31.207 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 20:06:31.208 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"uenePUuaInMGAezhmFvnM3rnFu4XL_TY1bBXXzYOUqzq8","UiLocales":null,"Nonce":"uenePUuaInMGAezhmFvnM3rnFu4XL_TY1bBXXzYOUqzq8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"uenePUuaInMGAezhmFvnM3rnFu4XL_TY1bBXXzYOUqzq8","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"uenePUuaInMGAezhmFvnM3rnFu4XL_TY1bBXXzYOUqzq8"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 20:06:32.139 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 20:06:32.150 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 20:06:32.165 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 20:06:32.166 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 20:06:32.176 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 20:06:32.273 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 20:06:32.274 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 20:06:32.287 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****TWuQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ESnw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4NRH0M7IH:00000003","TimeStamp":"2019-12-19T20:06:32.0000000Z","ProcessId":579,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 20:06:32.291 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"uenePUuaInMGAezhmFvnM3rnFu4XL_TY1bBXXzYOUqzq8","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 20:06:34.203 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 20:06:34.203 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 20:06:34.204 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 20:06:34.204 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 20:06:34.204 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 20:06:34.204 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 20:06:34.204 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 20:06:34.204 +00:00 [DBG] Start discovery request
2019-12-19 20:06:34.224 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 20:06:34.225 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 20:06:34.225 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 20:06:34.225 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 20:06:34.225 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 20:06:34.225 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 20:06:34.225 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 20:06:34.225 +00:00 [DBG] Start key discovery request
2019-12-19 20:34:26.549 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 20:34:26.638 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 20:34:26.656 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 20:34:26.657 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 20:34:26.658 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 20:34:26.659 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 20:34:26.660 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 20:34:26.661 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 21:05:52.090 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:05:52.143 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:05:52.150 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:05:52.151 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:05:52.229 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 21:05:52.230 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 21:05:52.231 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 21:05:52.232 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 21:05:52.234 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 21:05:52.235 +00:00 [DBG] Error Url: /home/error
2019-12-19 21:05:52.236 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 21:05:52.274 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:05:52.486 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:05:52.487 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:05:52.496 +00:00 [DBG] Start discovery request
2019-12-19 21:05:52.594 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:05:52.596 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:05:52.597 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:05:52.598 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:05:52.600 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:05:52.603 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:05:52.604 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:05:52.613 +00:00 [DBG] Start key discovery request
2019-12-19 21:05:54.073 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 21:05:54.089 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 21:05:54.089 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 21:05:54.097 +00:00 [DBG] Start authorize request
2019-12-19 21:05:54.117 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:05:54.126 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 21:05:54.154 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 21:05:54.223 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 21:05:54.244 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"ooaBDjHgm9S-6C7Er94_qDK3Vdm-UG6BaM0CSiSVOxfV2","UiLocales":null,"Nonce":"ooaBDjHgm9S-6C7Er94_qDK3Vdm-UG6BaM0CSiSVOxfV2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"ooaBDjHgm9S-6C7Er94_qDK3Vdm-UG6BaM0CSiSVOxfV2","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"ooaBDjHgm9S-6C7Er94_qDK3Vdm-UG6BaM0CSiSVOxfV2"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:05:54.314 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 21:05:54.325 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 21:05:54.343 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 21:05:54.344 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:05:54.356 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:05:54.457 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 21:05:54.459 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:05:54.498 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ajZA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****tIOg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4OSTFJDG1:00000001","TimeStamp":"2019-12-19T21:05:54.0000000Z","ProcessId":866,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 21:05:54.502 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"ooaBDjHgm9S-6C7Er94_qDK3Vdm-UG6BaM0CSiSVOxfV2","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 21:05:54.956 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:05:54.956 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:05:54.957 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:05:54.957 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:05:54.958 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:05:54.959 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:05:54.959 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:05:54.959 +00:00 [DBG] Start discovery request
2019-12-19 21:05:54.991 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:05:54.992 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:05:54.992 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:05:54.992 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:05:54.992 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:05:54.993 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:05:54.993 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:05:54.993 +00:00 [DBG] Start key discovery request
2019-12-19 21:05:57.209 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:05:57.210 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:05:57.211 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:05:57.211 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:05:57.212 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:05:57.213 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:05:57.214 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:05:57.215 +00:00 [DBG] Start discovery request
2019-12-19 21:05:57.230 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:05:57.231 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:05:57.231 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:05:57.231 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:05:57.232 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:05:57.233 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:05:57.233 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:05:57.233 +00:00 [DBG] Start key discovery request
2019-12-19 21:28:35.599 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 21:28:35.666 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 21:28:35.683 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 21:28:35.683 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 21:28:35.683 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 21:28:35.683 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 21:28:35.683 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 21:28:35.684 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 21:29:38.918 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:29:38.964 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:29:38.969 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:29:38.971 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:29:39.058 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 21:29:39.059 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 21:29:39.059 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 21:29:39.059 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 21:29:39.060 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 21:29:39.060 +00:00 [DBG] Error Url: /home/error
2019-12-19 21:29:39.060 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 21:29:39.093 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:29:39.306 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:29:39.308 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:29:39.315 +00:00 [DBG] Start discovery request
2019-12-19 21:29:39.427 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:29:39.427 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:29:39.427 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:29:39.427 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:29:39.436 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:29:39.449 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:29:39.449 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:29:39.512 +00:00 [DBG] Start key discovery request
2019-12-19 21:29:39.600 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 21:29:39.616 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 21:29:39.617 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 21:29:39.625 +00:00 [DBG] Start authorize request
2019-12-19 21:29:39.642 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:29:39.650 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 21:29:39.674 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 21:29:39.729 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:29:39.730 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:29:39.730 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:29:39.730 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:29:39.730 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:29:39.730 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:29:39.730 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:29:39.730 +00:00 [DBG] Start discovery request
2019-12-19 21:29:39.742 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:29:39.743 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:29:39.743 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:29:39.745 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:29:39.746 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:29:39.749 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:29:39.751 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 21:29:39.752 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:29:39.753 +00:00 [DBG] Start key discovery request
2019-12-19 21:29:39.795 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"6Wkl6z33vTXt5SSx4TMxssZiAUPaeOTKjgDrkm2tWoV_o","UiLocales":null,"Nonce":"6Wkl6z33vTXt5SSx4TMxssZiAUPaeOTKjgDrkm2tWoV_o","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"6Wkl6z33vTXt5SSx4TMxssZiAUPaeOTKjgDrkm2tWoV_o","redirect_uri":"http://localhost:4200","scope":"openid profile orders email address phone basket catalog","nonce":"6Wkl6z33vTXt5SSx4TMxssZiAUPaeOTKjgDrkm2tWoV_o"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:29:40.896 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 21:29:40.908 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 21:29:40.924 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 21:29:40.925 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:29:40.936 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:29:41.051 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 21:29:41.054 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:29:41.103 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****3yfw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Y6vA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4PA6N5IN0:00000001","TimeStamp":"2019-12-19T21:29:41.0000000Z","ProcessId":2213,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 21:29:41.108 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200","State":"6Wkl6z33vTXt5SSx4TMxssZiAUPaeOTKjgDrkm2tWoV_o","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 21:30:33.025 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 21:30:33.084 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 21:30:33.104 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 21:30:33.104 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 21:30:33.105 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 21:30:33.106 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 21:30:33.107 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 21:30:33.109 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 21:32:14.469 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:32:14.518 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:32:14.524 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:32:14.525 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:32:14.620 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 21:32:14.621 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 21:32:14.621 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 21:32:14.622 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 21:32:14.623 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 21:32:14.624 +00:00 [DBG] Error Url: /home/error
2019-12-19 21:32:14.625 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 21:32:14.658 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:32:14.891 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:32:14.894 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:32:14.903 +00:00 [DBG] Start discovery request
2019-12-19 21:32:15.011 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:32:15.012 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:32:15.013 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:32:15.015 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:32:15.023 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:32:15.026 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:32:15.026 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:32:15.098 +00:00 [DBG] Start key discovery request
2019-12-19 21:32:15.173 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 21:32:15.189 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 21:32:15.189 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 21:32:15.197 +00:00 [DBG] Start authorize request
2019-12-19 21:32:15.216 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:32:15.225 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 21:32:15.254 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 21:32:15.323 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 21:32:15.343 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"R_ueoVnaod76n7apvU8EnJASKfjCqfoE1H42jzZ_iI1fm","UiLocales":null,"Nonce":"R_ueoVnaod76n7apvU8EnJASKfjCqfoE1H42jzZ_iI1fm","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"R_ueoVnaod76n7apvU8EnJASKfjCqfoE1H42jzZ_iI1fm","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"R_ueoVnaod76n7apvU8EnJASKfjCqfoE1H42jzZ_iI1fm"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:32:16.369 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 21:32:16.381 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 21:32:16.397 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 21:32:16.398 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:32:16.409 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:32:16.503 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 21:32:16.505 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:32:16.540 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****UPnQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****upFQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4PBL2785F:00000001","TimeStamp":"2019-12-19T21:32:16.0000000Z","ProcessId":2326,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 21:32:16.545 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"R_ueoVnaod76n7apvU8EnJASKfjCqfoE1H42jzZ_iI1fm","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 21:32:22.447 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:32:22.447 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:32:22.448 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:32:22.448 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:32:22.449 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:32:22.450 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:32:22.451 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:32:22.451 +00:00 [DBG] Start discovery request
2019-12-19 21:32:22.482 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:32:22.483 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:32:22.483 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:32:22.483 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:32:22.485 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:32:22.488 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:32:22.492 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:32:22.495 +00:00 [DBG] Start key discovery request
2019-12-19 21:34:30.591 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 21:34:30.664 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 21:34:30.683 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 21:34:30.684 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 21:34:30.687 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 21:34:30.688 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 21:34:30.691 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 21:34:30.692 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 21:43:04.264 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:04.339 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:43:04.353 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:04.362 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:04.464 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 21:43:04.465 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 21:43:04.466 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 21:43:04.469 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 21:43:04.469 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 21:43:04.469 +00:00 [DBG] Error Url: /home/error
2019-12-19 21:43:04.469 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 21:43:04.535 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:43:04.784 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:43:04.785 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:43:04.795 +00:00 [DBG] Start discovery request
2019-12-19 21:43:04.911 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:04.912 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:43:04.915 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:04.915 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:04.916 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:43:04.918 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:43:04.919 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:43:04.937 +00:00 [DBG] Start key discovery request
2019-12-19 21:43:06.644 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 21:43:06.664 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 21:43:06.666 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 21:43:06.676 +00:00 [DBG] Start authorize request
2019-12-19 21:43:06.710 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:43:06.727 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 21:43:06.774 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 21:43:06.813 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Eu88qqoaB2QRZcrQgIMManftte969gWVnxt6pktvDjGP7","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"Eu88qqoaB2QRZcrQgIMManftte969gWVnxt6pktvDjGP7"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:43:06.887 +00:00 [ERR] Request validation failed
2019-12-19 21:43:06.889 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"Eu88qqoaB2QRZcrQgIMManftte969gWVnxt6pktvDjGP7","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"Eu88qqoaB2QRZcrQgIMManftte969gWVnxt6pktvDjGP7"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:43:06.931 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS4PHMK7053:00000001","TimeStamp":"2019-12-19T21:43:06.0000000Z","ProcessId":2478,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-19 21:43:13.825 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:13.825 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:43:13.827 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:13.827 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:13.828 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:43:13.853 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:43:13.853 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:43:13.853 +00:00 [DBG] Start discovery request
2019-12-19 21:43:13.879 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:13.880 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:43:13.880 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:13.880 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:13.881 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:43:13.883 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:43:13.883 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:43:13.884 +00:00 [DBG] Start key discovery request
2019-12-19 21:43:26.237 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:26.238 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:43:26.238 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:26.238 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:26.240 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:43:26.241 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:43:26.241 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:43:26.241 +00:00 [DBG] Start discovery request
2019-12-19 21:43:26.262 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:26.262 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:43:26.264 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:26.264 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:26.265 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:43:26.266 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:43:26.266 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:43:26.267 +00:00 [DBG] Start key discovery request
2019-12-19 21:43:26.301 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 21:43:26.303 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 21:43:26.303 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 21:43:26.303 +00:00 [DBG] Start authorize request
2019-12-19 21:43:26.303 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:43:26.304 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 21:43:26.304 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 21:43:26.390 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 21:43:26.391 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"iwBUca6i79jvd_xIDF4f1avzM7CbNnv2KyobDPE2SC1RI","UiLocales":null,"Nonce":"iwBUca6i79jvd_xIDF4f1avzM7CbNnv2KyobDPE2SC1RI","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"iwBUca6i79jvd_xIDF4f1avzM7CbNnv2KyobDPE2SC1RI","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"iwBUca6i79jvd_xIDF4f1avzM7CbNnv2KyobDPE2SC1RI"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:43:26.477 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 21:43:26.499 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 21:43:26.518 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 21:43:26.520 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:43:26.532 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:43:26.636 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 21:43:26.638 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:43:26.647 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****b4TA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Hr9A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4PHMK7053:00000003","TimeStamp":"2019-12-19T21:43:26.0000000Z","ProcessId":2478,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 21:43:26.650 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"iwBUca6i79jvd_xIDF4f1avzM7CbNnv2KyobDPE2SC1RI","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 21:43:28.415 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:28.415 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:43:28.416 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:28.416 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:28.416 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:43:28.417 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:43:28.417 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:43:28.417 +00:00 [DBG] Start discovery request
2019-12-19 21:43:28.445 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:43:28.445 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:43:28.445 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:43:28.446 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:43:28.446 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:43:28.447 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:43:28.447 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:43:28.447 +00:00 [DBG] Start key discovery request
2019-12-19 21:48:52.860 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 21:48:52.912 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 21:48:52.932 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 21:48:52.933 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 21:48:52.934 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 21:48:52.935 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 21:48:52.936 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 21:48:52.937 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 21:49:44.590 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 21:49:44.646 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 21:49:44.660 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 21:49:44.660 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 21:49:44.660 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 21:49:44.660 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 21:49:44.660 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 21:49:44.660 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 21:50:29.610 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:50:29.694 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:50:29.701 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:50:29.703 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:50:29.780 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 21:50:29.781 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 21:50:29.782 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 21:50:29.783 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 21:50:29.789 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 21:50:29.795 +00:00 [DBG] Error Url: /home/error
2019-12-19 21:50:29.797 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 21:50:29.834 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:50:30.158 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:50:30.159 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:50:30.167 +00:00 [DBG] Start discovery request
2019-12-19 21:50:30.296 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:50:30.298 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:50:30.300 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:50:30.300 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:50:30.309 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:50:30.310 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:50:30.310 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:50:30.319 +00:00 [DBG] Start key discovery request
2019-12-19 21:50:30.447 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 21:50:30.463 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 21:50:30.466 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 21:50:30.475 +00:00 [DBG] Start authorize request
2019-12-19 21:50:30.496 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:50:30.505 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 21:50:30.531 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 21:50:30.566 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"cdDc68dXh5OW4fhDfvBKv2zTKsfgZikXQKRV26DknPre0","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"cdDc68dXh5OW4fhDfvBKv2zTKsfgZikXQKRV26DknPre0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:50:30.609 +00:00 [ERR] Request validation failed
2019-12-19 21:50:30.611 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"cdDc68dXh5OW4fhDfvBKv2zTKsfgZikXQKRV26DknPre0","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"cdDc68dXh5OW4fhDfvBKv2zTKsfgZikXQKRV26DknPre0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:50:30.649 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS4PLRAIAKF:00000001","TimeStamp":"2019-12-19T21:50:30.0000000Z","ProcessId":2936,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-19 21:52:13.470 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:52:13.470 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:52:13.471 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:52:13.471 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:52:13.471 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:52:13.472 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:52:13.472 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:52:13.472 +00:00 [DBG] Start discovery request
2019-12-19 21:52:13.498 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:52:13.499 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:52:13.499 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:52:13.499 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:52:13.499 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:52:13.510 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:52:13.511 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:52:13.511 +00:00 [DBG] Start key discovery request
2019-12-19 21:52:13.597 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 21:52:13.598 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 21:52:13.598 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 21:52:13.608 +00:00 [DBG] Start authorize request
2019-12-19 21:52:13.610 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:52:13.610 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 21:52:13.611 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 21:52:13.681 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 21:52:13.683 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"r3mREvRCeXZHsMRncRGV795GepgatFZ2AwSPxWuqeFvl0","UiLocales":null,"Nonce":"r3mREvRCeXZHsMRncRGV795GepgatFZ2AwSPxWuqeFvl0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"r3mREvRCeXZHsMRncRGV795GepgatFZ2AwSPxWuqeFvl0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"r3mREvRCeXZHsMRncRGV795GepgatFZ2AwSPxWuqeFvl0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 21:52:14.758 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 21:52:14.775 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 21:52:14.798 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 21:52:14.799 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 21:52:14.815 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:52:14.932 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 21:52:14.933 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 21:52:14.949 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****8ILA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****w1jg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4PLRAIAKF:00000003","TimeStamp":"2019-12-19T21:52:14.0000000Z","ProcessId":2936,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 21:52:14.953 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"r3mREvRCeXZHsMRncRGV795GepgatFZ2AwSPxWuqeFvl0","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 21:52:17.829 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:52:17.830 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 21:52:17.831 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:52:17.831 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:52:17.832 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 21:52:17.832 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 21:52:17.832 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 21:52:17.832 +00:00 [DBG] Start discovery request
2019-12-19 21:52:17.863 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 21:52:17.863 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 21:52:17.864 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 21:52:17.864 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 21:52:17.864 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 21:52:17.865 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 21:52:17.865 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 21:52:17.865 +00:00 [DBG] Start key discovery request
2019-12-19 21:58:55.791 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 21:58:55.842 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 21:58:55.863 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 21:58:55.863 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 21:58:55.864 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 21:58:55.865 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 21:58:55.867 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 21:58:55.868 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 22:00:19.228 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:00:19.277 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 22:00:19.284 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:00:19.284 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:00:19.369 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 22:00:19.370 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 22:00:19.370 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 22:00:19.371 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 22:00:19.373 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 22:00:19.373 +00:00 [DBG] Error Url: /home/error
2019-12-19 22:00:19.373 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 22:00:19.410 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 22:00:19.611 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 22:00:19.612 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 22:00:19.619 +00:00 [DBG] Start discovery request
2019-12-19 22:00:19.728 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:00:19.730 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 22:00:19.731 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:00:19.732 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:00:19.748 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 22:00:19.759 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 22:00:19.788 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 22:00:19.795 +00:00 [DBG] Start key discovery request
2019-12-19 22:00:19.870 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 22:00:19.887 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 22:00:19.887 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 22:00:19.900 +00:00 [DBG] Start authorize request
2019-12-19 22:00:19.929 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 22:00:19.941 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 22:00:19.976 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 22:00:20.055 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 22:00:20.079 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"7mC6Ni6U3c3d1LiEksdyjDAsE3GJoRjCQQaLZlHyG1L2M","UiLocales":null,"Nonce":"7mC6Ni6U3c3d1LiEksdyjDAsE3GJoRjCQQaLZlHyG1L2M","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"7mC6Ni6U3c3d1LiEksdyjDAsE3GJoRjCQQaLZlHyG1L2M","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"7mC6Ni6U3c3d1LiEksdyjDAsE3GJoRjCQQaLZlHyG1L2M"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 22:00:21.222 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 22:00:21.235 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 22:00:21.254 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 22:00:21.255 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 22:00:21.270 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 22:00:21.375 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 22:00:21.376 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 22:00:21.419 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****zkIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****nlpA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4PRB5BAB7:00000001","TimeStamp":"2019-12-19T22:00:21.0000000Z","ProcessId":3183,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 22:00:21.423 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"7mC6Ni6U3c3d1LiEksdyjDAsE3GJoRjCQQaLZlHyG1L2M","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 22:00:24.004 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:00:24.005 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 22:00:24.005 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:00:24.005 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:00:24.006 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 22:00:24.006 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 22:00:24.006 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 22:00:24.006 +00:00 [DBG] Start discovery request
2019-12-19 22:00:24.038 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:00:24.038 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 22:00:24.039 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:00:24.039 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:00:24.041 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 22:00:24.045 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 22:00:24.046 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 22:00:24.048 +00:00 [DBG] Start key discovery request
2019-12-19 22:08:30.432 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-19 22:08:30.492 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-19 22:08:30.511 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-19 22:08:30.511 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-19 22:08:30.511 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-19 22:08:30.512 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-19 22:08:30.512 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-19 22:08:30.512 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-19 22:09:09.298 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:09:09.369 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 22:09:09.377 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:09:09.377 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:09:09.484 +00:00 [DBG] Login Url: /Account/Login
2019-12-19 22:09:09.484 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-19 22:09:09.484 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-19 22:09:09.484 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-19 22:09:09.484 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-19 22:09:09.484 +00:00 [DBG] Error Url: /home/error
2019-12-19 22:09:09.484 +00:00 [DBG] Error Id Parameter: errorId
2019-12-19 22:09:09.553 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 22:09:09.905 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 22:09:09.906 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 22:09:09.915 +00:00 [DBG] Start discovery request
2019-12-19 22:09:10.089 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:09:10.089 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 22:09:10.091 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:09:10.092 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:09:10.122 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 22:09:10.124 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 22:09:10.124 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 22:09:10.144 +00:00 [DBG] Start key discovery request
2019-12-19 22:09:10.330 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 22:09:10.367 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 22:09:10.377 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 22:09:10.385 +00:00 [DBG] Start authorize request
2019-12-19 22:09:10.464 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 22:09:10.496 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 22:09:10.567 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 22:09:10.685 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"RyeeOGyFS3cTSsmd1CEMCpc_9dMFQyE3fz4M55RswA1pQ","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"RyeeOGyFS3cTSsmd1CEMCpc_9dMFQyE3fz4M55RswA1pQ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 22:09:10.788 +00:00 [ERR] Request validation failed
2019-12-19 22:09:10.788 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"RyeeOGyFS3cTSsmd1CEMCpc_9dMFQyE3fz4M55RswA1pQ","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"RyeeOGyFS3cTSsmd1CEMCpc_9dMFQyE3fz4M55RswA1pQ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 22:09:10.877 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS4Q093JVLH:00000001","TimeStamp":"2019-12-19T22:09:10.0000000Z","ProcessId":3405,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-19 22:10:11.751 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:10:11.752 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 22:10:11.752 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:10:11.752 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:10:11.752 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 22:10:11.753 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 22:10:11.753 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 22:10:11.753 +00:00 [DBG] Start discovery request
2019-12-19 22:10:11.798 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:10:11.798 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 22:10:11.798 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:10:11.798 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:10:11.799 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 22:10:11.805 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 22:10:11.805 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 22:10:11.815 +00:00 [DBG] Start key discovery request
2019-12-19 22:10:11.881 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-19 22:10:11.882 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-19 22:10:11.883 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-19 22:10:11.883 +00:00 [DBG] Start authorize request
2019-12-19 22:10:11.906 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 22:10:11.906 +00:00 [DBG] Start authorize request protocol validation
2019-12-19 22:10:11.907 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-19 22:10:12.036 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-19 22:10:12.038 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"3Uom6zIKavtYawqrxBCyoMGEUDBJZGZQd8ChK6FbvXi0F","UiLocales":null,"Nonce":"3Uom6zIKavtYawqrxBCyoMGEUDBJZGZQd8ChK6FbvXi0F","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"3Uom6zIKavtYawqrxBCyoMGEUDBJZGZQd8ChK6FbvXi0F","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"3Uom6zIKavtYawqrxBCyoMGEUDBJZGZQd8ChK6FbvXi0F"},"$type":"AuthorizeRequestValidationLog"}
2019-12-19 22:10:13.183 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-19 22:10:13.196 +00:00 [DBG] Creating Implicit Flow response.
2019-12-19 22:10:13.216 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-19 22:10:13.217 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-19 22:10:13.238 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 22:10:13.390 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-19 22:10:13.391 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-19 22:10:13.404 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****zNCA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****D_ZQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS4Q093JVLH:00000005","TimeStamp":"2019-12-19T22:10:13.0000000Z","ProcessId":3405,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-19 22:10:13.407 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"3Uom6zIKavtYawqrxBCyoMGEUDBJZGZQd8ChK6FbvXi0F","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-19 22:10:15.701 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:10:15.701 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-19 22:10:15.701 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:10:15.702 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:10:15.702 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-19 22:10:15.703 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-19 22:10:15.703 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-19 22:10:15.703 +00:00 [DBG] Start discovery request
2019-12-19 22:10:15.730 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-19 22:10:15.731 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-19 22:10:15.731 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-19 22:10:15.731 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-19 22:10:15.732 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-19 22:10:15.733 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-19 22:10:15.733 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-19 22:10:15.733 +00:00 [DBG] Start key discovery request
2019-12-20 05:58:31.020 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-20 05:58:31.106 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-20 05:58:31.125 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-20 05:58:31.126 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-20 05:58:31.127 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-20 05:58:31.129 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-20 05:58:31.131 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-20 05:58:31.132 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-20 06:02:02.600 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:02:02.652 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:02:02.660 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:02:02.660 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:02:02.739 +00:00 [DBG] Login Url: /Account/Login
2019-12-20 06:02:02.740 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-20 06:02:02.740 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-20 06:02:02.741 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-20 06:02:02.742 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-20 06:02:02.742 +00:00 [DBG] Error Url: /home/error
2019-12-20 06:02:02.742 +00:00 [DBG] Error Id Parameter: errorId
2019-12-20 06:02:02.791 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:02:03.006 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:02:03.007 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:02:03.014 +00:00 [DBG] Start discovery request
2019-12-20 06:02:03.138 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:02:03.138 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:02:03.141 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:02:03.141 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:02:03.164 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:02:03.192 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:02:03.192 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:02:03.267 +00:00 [DBG] Start key discovery request
2019-12-20 06:02:04.719 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-20 06:02:04.733 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-20 06:02:04.733 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-20 06:02:04.742 +00:00 [DBG] Start authorize request
2019-12-20 06:02:04.760 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:02:04.769 +00:00 [DBG] Start authorize request protocol validation
2019-12-20 06:02:04.795 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-20 06:02:04.872 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-20 06:02:04.891 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"i5GPgi8rXxifH8VvvH9qmZSBgopkF03VhMaGEameb2APQ","UiLocales":null,"Nonce":"i5GPgi8rXxifH8VvvH9qmZSBgopkF03VhMaGEameb2APQ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"i5GPgi8rXxifH8VvvH9qmZSBgopkF03VhMaGEameb2APQ","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"i5GPgi8rXxifH8VvvH9qmZSBgopkF03VhMaGEameb2APQ"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:02:04.952 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-20 06:02:04.962 +00:00 [DBG] Creating Implicit Flow response.
2019-12-20 06:02:04.981 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-20 06:02:04.982 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:02:04.997 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:02:05.108 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-20 06:02:05.110 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:02:05.154 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****PFEg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5vNQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS528H1N4V3:00000001","TimeStamp":"2019-12-20T06:02:05.0000000Z","ProcessId":3565,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-20 06:02:05.159 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"i5GPgi8rXxifH8VvvH9qmZSBgopkF03VhMaGEameb2APQ","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-20 06:02:07.546 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:02:07.546 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:02:07.546 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:02:07.546 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:02:07.547 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:02:07.548 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:02:07.548 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:02:07.549 +00:00 [DBG] Start discovery request
2019-12-20 06:02:07.577 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:02:07.577 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:02:07.579 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:02:07.583 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:02:07.583 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:02:07.584 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:02:07.584 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:02:07.584 +00:00 [DBG] Start key discovery request
2019-12-20 06:09:57.700 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-20 06:09:57.751 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-20 06:09:57.767 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-20 06:09:57.767 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-20 06:09:57.767 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-20 06:09:57.767 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-20 06:09:57.767 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-20 06:09:57.767 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-20 06:11:16.901 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:11:16.985 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:11:16.996 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:11:16.997 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:11:17.145 +00:00 [DBG] Login Url: /Account/Login
2019-12-20 06:11:17.145 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-20 06:11:17.147 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-20 06:11:17.153 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-20 06:11:17.157 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-20 06:11:17.163 +00:00 [DBG] Error Url: /home/error
2019-12-20 06:11:17.166 +00:00 [DBG] Error Id Parameter: errorId
2019-12-20 06:11:17.213 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:11:17.495 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:11:17.498 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:11:17.504 +00:00 [DBG] Start discovery request
2019-12-20 06:11:17.709 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:11:17.712 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:11:17.715 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:11:17.719 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:11:17.735 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:11:17.741 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:11:17.744 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:11:17.858 +00:00 [DBG] Start key discovery request
2019-12-20 06:11:18.032 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-20 06:11:18.057 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-20 06:11:18.058 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-20 06:11:18.073 +00:00 [DBG] Start authorize request
2019-12-20 06:11:18.104 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:11:18.126 +00:00 [DBG] Start authorize request protocol validation
2019-12-20 06:11:18.174 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-20 06:11:18.226 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"gBm-xeeyPD4Zobz1c3fWn08dUO7fSh6rI38I6oEevG8V0","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"gBm-xeeyPD4Zobz1c3fWn08dUO7fSh6rI38I6oEevG8V0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:11:18.295 +00:00 [ERR] Request validation failed
2019-12-20 06:11:18.296 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"gBm-xeeyPD4Zobz1c3fWn08dUO7fSh6rI38I6oEevG8V0","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"gBm-xeeyPD4Zobz1c3fWn08dUO7fSh6rI38I6oEevG8V0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:11:18.352 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS52DM5SASD:00000001","TimeStamp":"2019-12-20T06:11:18.0000000Z","ProcessId":3861,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-20 06:11:58.704 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:11:58.704 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:11:58.704 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:11:58.704 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:11:58.704 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:11:58.705 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:11:58.705 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:11:58.705 +00:00 [DBG] Start discovery request
2019-12-20 06:11:58.727 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:11:58.728 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:11:58.729 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:11:58.729 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:11:58.741 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:11:58.742 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:11:58.742 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:11:58.742 +00:00 [DBG] Start key discovery request
2019-12-20 06:11:58.822 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-20 06:11:58.846 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-20 06:11:58.847 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-20 06:11:58.847 +00:00 [DBG] Start authorize request
2019-12-20 06:11:58.848 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:11:58.857 +00:00 [DBG] Start authorize request protocol validation
2019-12-20 06:11:58.886 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-20 06:11:58.993 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-20 06:11:58.994 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"40BiaBLyAMVquP40EiNVNjumJJlFo1DXn8naii08lHYmK","UiLocales":null,"Nonce":"40BiaBLyAMVquP40EiNVNjumJJlFo1DXn8naii08lHYmK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"40BiaBLyAMVquP40EiNVNjumJJlFo1DXn8naii08lHYmK","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"40BiaBLyAMVquP40EiNVNjumJJlFo1DXn8naii08lHYmK"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:12:00.147 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-20 06:12:00.158 +00:00 [DBG] Creating Implicit Flow response.
2019-12-20 06:12:00.173 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-20 06:12:00.174 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:12:00.184 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:12:00.281 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-20 06:12:00.282 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:12:00.295 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****jU6A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NZzg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS52DM5SASD:00000005","TimeStamp":"2019-12-20T06:12:00.0000000Z","ProcessId":3861,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-20 06:12:00.298 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"40BiaBLyAMVquP40EiNVNjumJJlFo1DXn8naii08lHYmK","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-20 06:12:02.328 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:12:02.329 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:12:02.329 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:12:02.329 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:12:02.329 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:12:02.329 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:12:02.330 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:12:02.330 +00:00 [DBG] Start discovery request
2019-12-20 06:12:02.354 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:12:02.355 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:12:02.355 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:12:02.355 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:12:02.356 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:12:02.357 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:12:02.357 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:12:02.358 +00:00 [DBG] Start key discovery request
2019-12-20 06:15:13.215 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-20 06:15:13.268 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-20 06:15:13.284 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-20 06:15:13.284 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-20 06:15:13.285 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-20 06:15:13.288 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-20 06:15:13.292 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-20 06:15:13.294 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-20 06:19:39.537 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-20 06:19:39.587 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-20 06:19:39.606 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-20 06:19:39.607 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-20 06:19:39.607 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-20 06:19:39.607 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-20 06:19:39.607 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-20 06:19:39.607 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-20 06:22:03.155 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:22:03.228 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:22:03.239 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:22:03.242 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:22:03.342 +00:00 [DBG] Login Url: /Account/Login
2019-12-20 06:22:03.342 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-20 06:22:03.342 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-20 06:22:03.342 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-20 06:22:03.342 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-20 06:22:03.342 +00:00 [DBG] Error Url: /home/error
2019-12-20 06:22:03.342 +00:00 [DBG] Error Id Parameter: errorId
2019-12-20 06:22:03.393 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:22:03.741 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:22:03.757 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:22:03.768 +00:00 [DBG] Start discovery request
2019-12-20 06:22:03.985 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:22:03.988 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:22:03.988 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:22:03.988 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:22:04.043 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:22:04.044 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:22:04.044 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:22:04.109 +00:00 [DBG] Start key discovery request
2019-12-20 06:22:04.225 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-20 06:22:04.249 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-20 06:22:04.251 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-20 06:22:04.261 +00:00 [DBG] Start authorize request
2019-12-20 06:22:04.286 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:22:04.296 +00:00 [DBG] Start authorize request protocol validation
2019-12-20 06:22:04.338 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-20 06:22:04.404 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"J-RMuMPF0Q8s1jZ_ILpXkFa90u4dbHokCPLOvwHI3jMQD","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"J-RMuMPF0Q8s1jZ_ILpXkFa90u4dbHokCPLOvwHI3jMQD"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:22:04.441 +00:00 [ERR] Request validation failed
2019-12-20 06:22:04.443 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"J-RMuMPF0Q8s1jZ_ILpXkFa90u4dbHokCPLOvwHI3jMQD","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"J-RMuMPF0Q8s1jZ_ILpXkFa90u4dbHokCPLOvwHI3jMQD"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:22:04.472 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS52JMPIB9Q:00000001","TimeStamp":"2019-12-20T06:22:04.0000000Z","ProcessId":4163,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-20 06:22:19.572 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:22:19.572 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:22:19.572 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:22:19.572 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:22:19.585 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:22:19.586 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:22:19.586 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:22:19.586 +00:00 [DBG] Start discovery request
2019-12-20 06:22:19.617 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:22:19.617 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:22:19.617 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:22:19.617 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:22:19.618 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:22:19.619 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:22:19.619 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:22:19.619 +00:00 [DBG] Start key discovery request
2019-12-20 06:22:19.740 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-20 06:22:19.741 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-20 06:22:19.742 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-20 06:22:19.743 +00:00 [DBG] Start authorize request
2019-12-20 06:22:19.744 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:22:19.744 +00:00 [DBG] Start authorize request protocol validation
2019-12-20 06:22:19.744 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-20 06:22:19.820 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-20 06:22:19.821 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"AMN9ohNa3HDQdIZpkq2TuTGcUtlv3-QHmCtkkFrf637Az","UiLocales":null,"Nonce":"AMN9ohNa3HDQdIZpkq2TuTGcUtlv3-QHmCtkkFrf637Az","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"AMN9ohNa3HDQdIZpkq2TuTGcUtlv3-QHmCtkkFrf637Az","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"AMN9ohNa3HDQdIZpkq2TuTGcUtlv3-QHmCtkkFrf637Az"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:22:20.771 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-20 06:22:20.783 +00:00 [DBG] Creating Implicit Flow response.
2019-12-20 06:22:20.802 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-20 06:22:20.803 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:22:20.815 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:22:20.915 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-20 06:22:20.917 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:22:20.927 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DkUA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****WjoA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS52JMPIB9S:00000001","TimeStamp":"2019-12-20T06:22:20.0000000Z","ProcessId":4163,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-20 06:22:20.930 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"AMN9ohNa3HDQdIZpkq2TuTGcUtlv3-QHmCtkkFrf637Az","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-20 06:22:24.375 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:22:24.376 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:22:24.376 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:22:24.376 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:22:24.376 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:22:24.377 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:22:24.377 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:22:24.377 +00:00 [DBG] Start discovery request
2019-12-20 06:22:24.402 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:22:24.403 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:22:24.403 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:22:24.403 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:22:24.403 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:22:24.403 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:22:24.403 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:22:24.404 +00:00 [DBG] Start key discovery request
2019-12-20 06:27:12.932 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-20 06:27:12.991 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-20 06:27:13.012 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-20 06:27:13.013 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-20 06:27:13.016 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-20 06:27:13.017 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-20 06:27:13.020 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-20 06:27:13.021 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-20 06:28:47.835 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:28:47.945 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:28:47.960 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:28:47.961 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:28:48.086 +00:00 [DBG] Login Url: /Account/Login
2019-12-20 06:28:48.088 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-20 06:28:48.091 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-20 06:28:48.098 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-20 06:28:48.101 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-20 06:28:48.102 +00:00 [DBG] Error Url: /home/error
2019-12-20 06:28:48.102 +00:00 [DBG] Error Id Parameter: errorId
2019-12-20 06:28:48.159 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:28:48.608 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:28:48.614 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:28:48.621 +00:00 [DBG] Start discovery request
2019-12-20 06:28:48.777 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:28:48.777 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:28:48.777 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:28:48.777 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:28:48.784 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:28:48.789 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:28:48.789 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:28:48.960 +00:00 [DBG] Start key discovery request
2019-12-20 06:28:49.091 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-20 06:28:49.115 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-20 06:28:49.116 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-20 06:28:49.122 +00:00 [DBG] Start authorize request
2019-12-20 06:28:49.148 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:28:49.167 +00:00 [DBG] Start authorize request protocol validation
2019-12-20 06:28:49.212 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-20 06:28:49.269 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"7B3UWfHsPjFbDVP7hHpO12_pHGQocxeafP5N9EXCb0LkE","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"7B3UWfHsPjFbDVP7hHpO12_pHGQocxeafP5N9EXCb0LkE"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:28:49.355 +00:00 [ERR] Request validation failed
2019-12-20 06:28:49.355 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"7B3UWfHsPjFbDVP7hHpO12_pHGQocxeafP5N9EXCb0LkE","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"7B3UWfHsPjFbDVP7hHpO12_pHGQocxeafP5N9EXCb0LkE"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:28:49.413 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS52NFBQD20:00000001","TimeStamp":"2019-12-20T06:28:49.0000000Z","ProcessId":4372,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-20 06:29:04.648 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:29:04.649 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:29:04.650 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:29:04.650 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:29:04.651 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:29:04.652 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:29:04.653 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:29:04.653 +00:00 [DBG] Start discovery request
2019-12-20 06:29:04.675 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:29:04.678 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:29:04.679 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:29:04.683 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:29:04.684 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:29:04.685 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:29:04.687 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:29:04.689 +00:00 [DBG] Start key discovery request
2019-12-20 06:29:04.722 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-20 06:29:04.765 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-20 06:29:04.765 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-20 06:29:04.765 +00:00 [DBG] Start authorize request
2019-12-20 06:29:04.766 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:29:04.787 +00:00 [DBG] Start authorize request protocol validation
2019-12-20 06:29:04.787 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-20 06:29:04.882 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-20 06:29:04.886 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"KLD5vC8J8kZkZyc0lWb4kgG1qOAtNpFLQrycz6XUhqj_i","UiLocales":null,"Nonce":"KLD5vC8J8kZkZyc0lWb4kgG1qOAtNpFLQrycz6XUhqj_i","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"918606529060fb117fa4468d167cdd27","Raw":{"response_type":"id_token token","client_id":"angular","state":"KLD5vC8J8kZkZyc0lWb4kgG1qOAtNpFLQrycz6XUhqj_i","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"KLD5vC8J8kZkZyc0lWb4kgG1qOAtNpFLQrycz6XUhqj_i"},"$type":"AuthorizeRequestValidationLog"}
2019-12-20 06:29:05.811 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-20 06:29:05.824 +00:00 [DBG] Creating Implicit Flow response.
2019-12-20 06:29:05.839 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-20 06:29:05.840 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-20 06:29:05.851 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:29:05.954 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-20 06:29:05.955 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-20 06:29:05.966 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****4Zjg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****dfXg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS52NFBQD20:00000003","TimeStamp":"2019-12-20T06:29:05.0000000Z","ProcessId":4372,"LocalIpAddress":"::ffff:172.18.0.4:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-20 06:29:05.969 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"KLD5vC8J8kZkZyc0lWb4kgG1qOAtNpFLQrycz6XUhqj_i","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-20 06:29:08.105 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:29:08.105 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-20 06:29:08.105 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:29:08.105 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:29:08.106 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-20 06:29:08.106 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-20 06:29:08.106 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-20 06:29:08.106 +00:00 [DBG] Start discovery request
2019-12-20 06:29:08.129 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-20 06:29:08.130 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-20 06:29:08.130 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-20 06:29:08.131 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-20 06:29:08.133 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-20 06:29:08.134 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-20 06:29:08.134 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-20 06:29:08.134 +00:00 [DBG] Start key discovery request
2019-12-21 19:36:40.648 +00:00 [WRN] No XML encryptor configured. Key {15dff796-28cd-4eaf-af11-390f44b28ed0} may be persisted to storage in unencrypted form.
2019-12-21 19:36:40.924 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-21 19:36:40.984 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-21 19:36:40.999 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-21 19:36:41.001 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-21 19:36:41.003 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-21 19:36:41.012 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-21 19:36:41.015 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-21 19:36:41.017 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-21 19:38:28.725 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:28.777 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:38:28.788 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:38:28.788 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:38:28.860 +00:00 [DBG] Login Url: /Account/Login
2019-12-21 19:38:28.860 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-21 19:38:28.862 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-21 19:38:28.866 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-21 19:38:28.867 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-21 19:38:28.869 +00:00 [DBG] Error Url: /home/error
2019-12-21 19:38:28.870 +00:00 [DBG] Error Id Parameter: errorId
2019-12-21 19:38:28.905 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:38:29.103 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:38:29.105 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:38:29.113 +00:00 [DBG] Start discovery request
2019-12-21 19:38:29.368 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:29.370 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:38:29.371 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:38:29.373 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:38:29.400 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:38:29.433 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:38:29.433 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:38:29.489 +00:00 [DBG] Start key discovery request
2019-12-21 19:38:29.570 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:29.572 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:29.573 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:29.582 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:29.584 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-21 19:38:29.609 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-21 19:38:29.610 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-21 19:38:29.623 +00:00 [DBG] Start authorize request
2019-12-21 19:38:29.642 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:29.687 +00:00 [DBG] No user present in authorize request
2019-12-21 19:38:29.700 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:29.757 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:29.842 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:29.864 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","UiLocales":null,"Nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:38:29.916 +00:00 [INF] Showing login: User is not authenticated
2019-12-21 19:38:29.930 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:29.930 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:30.051 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:30.052 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:30.052 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:30.052 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:30.059 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:30.194 +00:00 [ERR] An exception was thrown while deserializing the token.
Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException: The antiforgery token could not be decrypted. ---> System.Security.Cryptography.CryptographicException: The key {53e723b6-5685-4d64-86af-01b17920e528} was not found in the key ring.
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTokenSerializer.Deserialize(String serializedToken)
   at Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetCookieTokenDoesNotThrow(HttpContext httpContext)
2019-12-21 19:38:30.723 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:40.321 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:40.322 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-21 19:38:40.323 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:40.323 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:40.518 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:40.519 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:40.519 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:40.521 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:41.992 +00:00 [DBG] Augmenting SignInContext
2019-12-21 19:38:41.997 +00:00 [DBG] Adding idp claim with value: local
2019-12-21 19:38:41.998 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-21 19:38:41.999 +00:00 [DBG] Adding auth_time claim with value: 1576957121
2019-12-21 19:38:42.011 +00:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2019-12-21 19:38:42.026 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-21 19:38:42.078 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS69LD895VE:00000005","TimeStamp":"2019-12-21T19:38:42.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-21 19:38:42.082 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:42.125 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-21 19:38:42.128 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-21 19:38:42.129 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-21 19:38:42.143 +00:00 [DBG] Start authorize callback request
2019-12-21 19:38:42.152 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:38:42.152 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:42.152 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:42.154 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:42.155 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","UiLocales":null,"Nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"c8a5f303d64e09eb2a5bde21b0d13d1e","Raw":{"response_type":"id_token token","client_id":"angular","state":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:38:42.232 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-21 19:38:42.278 +00:00 [DBG] Creating Implicit Flow response.
2019-12-21 19:38:42.303 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-21 19:38:42.305 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:38:42.319 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:38:42.507 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:42.507 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-21 19:38:42.648 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-21 19:38:42.649 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:38:42.669 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****ZreQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****OtVg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS69LD895VE:00000006","TimeStamp":"2019-12-21T19:38:42.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-21 19:38:42.672 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-21 19:38:42.733 +00:00 [DBG] Augmenting SignInContext
2019-12-21 19:38:42.734 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-21 19:38:46.588 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:46.589 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:46.590 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:46.590 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:46.711 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:50.388 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:50.388 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-21 19:38:50.392 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:50.392 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:50.393 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:50.483 +00:00 [DBG] Augmenting SignInContext
2019-12-21 19:38:50.484 +00:00 [DBG] Adding idp claim with value: local
2019-12-21 19:38:50.484 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-21 19:38:50.485 +00:00 [DBG] Adding auth_time claim with value: 1576957130
2019-12-21 19:38:50.486 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-21 19:38:50.525 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS69LD895VF:00000007","TimeStamp":"2019-12-21T19:38:50.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-21 19:38:50.526 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:50.537 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-21 19:38:50.544 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-21 19:38:50.544 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-21 19:38:50.544 +00:00 [DBG] Start authorize callback request
2019-12-21 19:38:50.546 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:38:50.546 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:50.546 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:50.547 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:50.547 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","UiLocales":null,"Nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3b5a9888a54802877159ac7f46bf4f15","Raw":{"response_type":"id_token token","client_id":"angular","state":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:38:50.570 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-21 19:38:50.571 +00:00 [DBG] Creating Implicit Flow response.
2019-12-21 19:38:50.575 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-21 19:38:50.577 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:38:50.580 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:38:50.588 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-21 19:38:50.588 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:38:50.593 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****DTdQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****EbAw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS69LD895VF:00000008","TimeStamp":"2019-12-21T19:38:50.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-21 19:38:50.593 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-21 19:38:50.598 +00:00 [DBG] Augmenting SignInContext
2019-12-21 19:38:50.599 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-21 19:38:50.751 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:50.752 +00:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-12-21 19:38:50.755 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:50.756 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:50.757 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:50.944 +00:00 [DBG] Augmenting SignInContext
2019-12-21 19:38:50.944 +00:00 [DBG] Adding idp claim with value: local
2019-12-21 19:38:50.944 +00:00 [DBG] Adding amr claim with value: pwd
2019-12-21 19:38:50.945 +00:00 [DBG] Adding auth_time claim with value: 1576957130
2019-12-21 19:38:50.946 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-21 19:38:50.954 +00:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","DisplayName":"alice","Endpoint":"UI","ClientId":"angular","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLS69LD895VF:00000009","TimeStamp":"2019-12-21T19:38:50.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"UserLoginSuccessEvent"}
2019-12-21 19:38:50.955 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:50.961 +00:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-12-21 19:38:50.964 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-12-21 19:38:50.964 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-12-21 19:38:50.965 +00:00 [DBG] Start authorize callback request
2019-12-21 19:38:50.966 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:38:50.966 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:38:50.967 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:38:50.968 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:38:50.968 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","UiLocales":null,"Nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"16ff8d9752272e340e09ad8232f125ba","Raw":{"response_type":"id_token token","client_id":"angular","state":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:38:51.011 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-21 19:38:51.019 +00:00 [DBG] Creating Implicit Flow response.
2019-12-21 19:38:51.020 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-21 19:38:51.042 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:38:51.043 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:38:51.067 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-21 19:38:51.070 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:38:51.073 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****q37w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Xzig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS69LD895VF:0000000A","TimeStamp":"2019-12-21T19:38:51.0000000Z","ProcessId":22,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-21 19:38:51.074 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"p5mNVcp4ycQKK03r60HA0muB6nSczJjOZfqtBOknSw7hv","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-21 19:38:51.078 +00:00 [DBG] Augmenting SignInContext
2019-12-21 19:38:51.079 +00:00 [INF] AuthenticationScheme: Identity.Application signed in.
2019-12-21 19:38:54.103 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:54.103 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:38:54.104 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:38:54.104 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:38:54.104 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:38:54.105 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:38:54.105 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:38:54.105 +00:00 [DBG] Start discovery request
2019-12-21 19:38:54.131 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:38:54.131 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:38:54.132 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:38:54.132 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:38:54.133 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:38:54.136 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:38:54.137 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:38:54.138 +00:00 [DBG] Start key discovery request
2019-12-21 19:42:20.936 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-21 19:42:20.987 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-21 19:42:21.001 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-21 19:42:21.002 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-21 19:42:21.003 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-21 19:42:21.003 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-21 19:42:21.004 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-21 19:42:21.005 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-21 19:44:14.712 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:44:14.773 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:44:14.779 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:44:14.780 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:44:14.851 +00:00 [DBG] Login Url: /Account/Login
2019-12-21 19:44:14.852 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-21 19:44:14.853 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-21 19:44:14.853 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-21 19:44:14.854 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-21 19:44:14.855 +00:00 [DBG] Error Url: /home/error
2019-12-21 19:44:14.856 +00:00 [DBG] Error Id Parameter: errorId
2019-12-21 19:44:14.889 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:44:15.082 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:44:15.083 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:44:15.089 +00:00 [DBG] Start discovery request
2019-12-21 19:44:15.204 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:44:15.205 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:44:15.205 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:44:15.205 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:44:15.208 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:44:15.229 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:44:15.230 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:44:15.285 +00:00 [DBG] Start key discovery request
2019-12-21 19:44:15.423 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-21 19:44:15.436 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-21 19:44:15.437 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-21 19:44:15.443 +00:00 [DBG] Start authorize request
2019-12-21 19:44:15.460 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:44:15.468 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:44:15.492 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:44:15.521 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"dg6oiZFUD61XWNrRUzpMZqOkvfeNDIGv698Ts3ohcFOqd","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"dg6oiZFUD61XWNrRUzpMZqOkvfeNDIGv698Ts3ohcFOqd"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:44:15.559 +00:00 [ERR] Request validation failed
2019-12-21 19:44:15.560 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"dg6oiZFUD61XWNrRUzpMZqOkvfeNDIGv698Ts3ohcFOqd","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"dg6oiZFUD61XWNrRUzpMZqOkvfeNDIGv698Ts3ohcFOqd"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:44:15.598 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS69OK9SQMN:00000001","TimeStamp":"2019-12-21T19:44:15.0000000Z","ProcessId":228,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-21 19:45:01.604 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-21 19:45:01.655 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-21 19:45:01.673 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-21 19:45:01.674 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-21 19:45:01.674 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-21 19:45:01.677 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-21 19:45:01.678 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-21 19:45:01.681 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-21 19:47:22.334 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:47:22.386 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:47:22.393 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:47:22.394 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:47:22.469 +00:00 [DBG] Login Url: /Account/Login
2019-12-21 19:47:22.470 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-21 19:47:22.471 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-21 19:47:22.473 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-21 19:47:22.474 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-21 19:47:22.475 +00:00 [DBG] Error Url: /home/error
2019-12-21 19:47:22.476 +00:00 [DBG] Error Id Parameter: errorId
2019-12-21 19:47:22.509 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:47:22.715 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:47:22.717 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:47:22.724 +00:00 [DBG] Start discovery request
2019-12-21 19:47:22.837 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:47:22.838 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:47:22.841 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:47:22.842 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:47:22.851 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:47:22.876 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:47:22.877 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:47:22.922 +00:00 [DBG] Start key discovery request
2019-12-21 19:47:23.028 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-21 19:47:23.041 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-21 19:47:23.042 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-21 19:47:23.047 +00:00 [DBG] Start authorize request
2019-12-21 19:47:23.064 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:47:23.072 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:47:23.096 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:47:23.155 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:47:23.172 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"mO7lZYXc4F8r1YrSYMnzcIoRwYDJ4UJ9kZMi2xSs1wybp","UiLocales":null,"Nonce":"mO7lZYXc4F8r1YrSYMnzcIoRwYDJ4UJ9kZMi2xSs1wybp","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"16ff8d9752272e340e09ad8232f125ba","Raw":{"response_type":"id_token token","client_id":"angular","state":"mO7lZYXc4F8r1YrSYMnzcIoRwYDJ4UJ9kZMi2xSs1wybp","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"mO7lZYXc4F8r1YrSYMnzcIoRwYDJ4UJ9kZMi2xSs1wybp"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:47:24.360 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-21 19:47:24.374 +00:00 [DBG] Creating Implicit Flow response.
2019-12-21 19:47:24.396 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-21 19:47:24.397 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:47:24.413 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:47:24.591 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-21 19:47:24.593 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:47:24.659 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****PRqw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****GhIQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS69QC97CM0:00000001","TimeStamp":"2019-12-21T19:47:24.0000000Z","ProcessId":346,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-21 19:47:24.663 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"mO7lZYXc4F8r1YrSYMnzcIoRwYDJ4UJ9kZMi2xSs1wybp","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-21 19:47:26.892 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:47:26.893 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:47:26.893 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:47:26.893 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:47:26.894 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:47:26.901 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:47:26.902 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:47:26.902 +00:00 [DBG] Start discovery request
2019-12-21 19:47:26.926 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:47:26.926 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:47:26.926 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:47:26.926 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:47:26.926 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:47:26.927 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:47:26.927 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:47:26.927 +00:00 [DBG] Start key discovery request
2019-12-21 19:52:01.919 +00:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-12-21 19:52:01.973 +00:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-12-21 19:52:01.990 +00:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2019-12-21 19:52:01.990 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2019-12-21 19:52:01.992 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2019-12-21 19:52:01.994 +00:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2019-12-21 19:52:01.995 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2019-12-21 19:52:01.998 +00:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2019-12-21 19:52:31.685 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:52:31.733 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:52:31.738 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:52:31.739 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:52:31.822 +00:00 [DBG] Login Url: /Account/Login
2019-12-21 19:52:31.822 +00:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-12-21 19:52:31.823 +00:00 [DBG] Logout Url: /Account/Logout
2019-12-21 19:52:31.828 +00:00 [DBG] ConsentUrl Url: /consent
2019-12-21 19:52:31.829 +00:00 [DBG] Consent Return Url Parameter: returnUrl
2019-12-21 19:52:31.829 +00:00 [DBG] Error Url: /home/error
2019-12-21 19:52:31.830 +00:00 [DBG] Error Id Parameter: errorId
2019-12-21 19:52:31.888 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:52:32.182 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:52:32.182 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:52:32.192 +00:00 [DBG] Start discovery request
2019-12-21 19:52:32.305 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:52:32.306 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:52:32.306 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:52:32.307 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:52:32.319 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:52:32.326 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:52:32.326 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:52:32.337 +00:00 [DBG] Start key discovery request
2019-12-21 19:52:32.417 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-21 19:52:32.431 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-21 19:52:32.431 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-21 19:52:32.439 +00:00 [DBG] Start authorize request
2019-12-21 19:52:32.457 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:52:32.466 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:52:32.488 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:52:32.519 +00:00 [ERR] Invalid redirect_uri: http://localhost:4200/
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"ZUhgo3V3cPt4gPpzFbuFrJophkryq_nJoES16VF9SzKQh","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"ZUhgo3V3cPt4gPpzFbuFrJophkryq_nJoES16VF9SzKQh"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:52:32.560 +00:00 [ERR] Request validation failed
2019-12-21 19:52:32.561 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"id_token token","client_id":"angular","state":"ZUhgo3V3cPt4gPpzFbuFrJophkryq_nJoES16VF9SzKQh","redirect_uri":"http://localhost:4200/","scope":"openid profile orders email address phone basket catalog","nonce":"ZUhgo3V3cPt4gPpzFbuFrJophkryq_nJoES16VF9SzKQh"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:52:32.588 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"0HLS69T8EHOJ4:00000001","TimeStamp":"2019-12-21T19:52:32.0000000Z","ProcessId":574,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedFailureEvent"}
2019-12-21 19:53:23.998 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:53:23.998 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:53:23.998 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:53:23.998 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:53:23.999 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:53:24.000 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:53:24.000 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:53:24.000 +00:00 [DBG] Start discovery request
2019-12-21 19:53:24.028 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:53:24.028 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:53:24.028 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:53:24.028 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:53:24.028 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:53:24.029 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:53:24.029 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:53:24.030 +00:00 [DBG] Start key discovery request
2019-12-21 19:53:24.069 +00:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-12-21 19:53:24.071 +00:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-12-21 19:53:24.071 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-12-21 19:53:24.072 +00:00 [DBG] Start authorize request
2019-12-21 19:53:24.073 +00:00 [DBG] User in authorize request: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:53:24.074 +00:00 [DBG] Start authorize request protocol validation
2019-12-21 19:53:24.076 +00:00 [DBG] client configuration validation for client angular succeeded.
2019-12-21 19:53:24.186 +00:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-12-21 19:53:24.188 +00:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","AllowedRedirectUris":["http://localhost:4200/error.html","http://localhost:4200/error","http://localhost:4200/basket","http://localhost:4200/catalog","http://localhost:4200","http://localhost:4200/index.html"],"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile orders email address phone basket catalog","State":"rWcyYDp4rZbwwP0iGTVNiPhHZgTf7TmhYPOWCleFqFUJ0","UiLocales":null,"Nonce":"rWcyYDp4rZbwwP0iGTVNiPhHZgTf7TmhYPOWCleFqFUJ0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"16ff8d9752272e340e09ad8232f125ba","Raw":{"response_type":"id_token token","client_id":"angular","state":"rWcyYDp4rZbwwP0iGTVNiPhHZgTf7TmhYPOWCleFqFUJ0","redirect_uri":"http://localhost:4200/basket","scope":"openid profile orders email address phone basket catalog","nonce":"rWcyYDp4rZbwwP0iGTVNiPhHZgTf7TmhYPOWCleFqFUJ0"},"$type":"AuthorizeRequestValidationLog"}
2019-12-21 19:53:25.227 +00:00 [DBG] Client is configured to not require consent, no consent is required
2019-12-21 19:53:25.239 +00:00 [DBG] Creating Implicit Flow response.
2019-12-21 19:53:25.255 +00:00 [DBG] Getting claims for access token for client: angular
2019-12-21 19:53:25.256 +00:00 [DBG] Getting claims for access token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246
2019-12-21 19:53:25.266 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:53:25.385 +00:00 [DBG] Getting claims for identity token for subject: 5c353957-2e04-4814-820b-2bfdf5b6c246 and client: angular
2019-12-21 19:53:25.386 +00:00 [DBG] Claim types from profile service that were filtered: ["sub","aud"]
2019-12-21 19:53:25.397 +00:00 [INF] {"ClientId":"angular","ClientName":"SPA Client","RedirectUri":"http://localhost:4200/basket","Endpoint":"Authorize","SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","Scopes":"openid profile email address phone orders basket catalog","GrantType":"implicit","Tokens":[{"TokenType":"id_token","TokenValue":"****BDgg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****JGoA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLS69T8EHOJ4:00000003","TimeStamp":"2019-12-21T19:53:25.0000000Z","ProcessId":574,"LocalIpAddress":"::ffff:172.18.0.2:80","RemoteIpAddress":"::ffff:172.18.0.1","$type":"TokenIssuedSuccessEvent"}
2019-12-21 19:53:25.400 +00:00 [DBG] Authorize endpoint response
{"SubjectId":"5c353957-2e04-4814-820b-2bfdf5b6c246","ClientId":"angular","RedirectUri":"http://localhost:4200/basket","State":"rWcyYDp4rZbwwP0iGTVNiPhHZgTf7TmhYPOWCleFqFUJ0","Scope":"openid profile email address phone orders basket catalog","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-12-21 19:53:40.136 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:53:40.136 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-12-21 19:53:40.137 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:53:40.138 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:53:40.140 +00:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-12-21 19:53:40.142 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-12-21 19:53:40.143 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-12-21 19:53:40.144 +00:00 [DBG] Start discovery request
2019-12-21 19:53:40.169 +00:00 [WRN] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-12-21 19:53:40.169 +00:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-12-21 19:53:40.170 +00:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-12-21 19:53:40.170 +00:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-12-21 19:53:40.170 +00:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-12-21 19:53:40.171 +00:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-12-21 19:53:40.171 +00:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-12-21 19:53:40.171 +00:00 [DBG] Start key discovery request
